# EnvironmentVariableList:
#   Global:
#     AZ_IMAGE_NS: azinternal
#     AZ_IMAGE_PROJ: default
#     AZ_CONTAINER_NS: azinternal
#     AZ_CONTAINER_PROJ: default
#   Project:

version: '3'
services:
  minio1:
    image: minio/minio:RELEASE.2019-04-09T01-22-30Z

    container_name: ${AZ_CONTAINER_NS:-azinternal}-${AZ_CONTAINER_PROJ:-default}-afs-minio1

    volumes:
      - ../minio_data:/data

    ports:
      - "${AZ_MINIO_PORT:-9000}:9000"

    environment:
      MINIO_ACCESS_KEY: minioxxxak
      MINIO_SECRET_KEY: minioxxxsk

    command: server /data

  pg-master:
    image: postgres:12

    container_name: ${AZ_CONTAINER_NS:-azinternal}-${AZ_CONTAINER_PROJ:-default}-afs-pg-master
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: xxxx1234
      PGDATA: /var/lib/postgresql/data/pgdata

    ports:
      - "${AZ_PG_PORT:-5432}:5432"

    volumes:
      - "../pgdata:/var/lib/postgresql/data/pgdata"

  graphql-engine:
    image: hasura/graphql-engine:v2.0.0-alpha.3
    # ports:
    # - "24004:8080"
    depends_on:
    - "pg-master"
    # restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:xxxx1234@pg-master:5432/postgres
      ## HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:xxxx1234@pg-master:5432/db_rick_data
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to set an admin secret
      HASURA_GRAPHQL_ADMIN_SECRET: xxxxhsr
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "10m"

  webserver:
    image: ${AZ_IMAGE_NS:-azinternal}/${AZ_IMAGE_PROJ:-default}/afswebserver
    build:
      context: .

    container_name: ${AZ_CONTAINER_NS:-azinternal}-${AZ_CONTAINER_PROJ:-default}-afs-webserver

    links:
      - "minio1:minio1"
      - "pg-master:postgres"

    depends_on:
      - "minio1"
      - "pg-master"

    environment:
      AFS_SECRETS_FOLDER: "/usr/volumes/share/secrets"

    volumes:
      - ".:/usr/volumes/src/"
      - "../secrets:/usr/volumes/share/secrets"

    command: bash docker-cmd.sh

    # ports:
    #   - "443:443"
    #   - "80:80"
