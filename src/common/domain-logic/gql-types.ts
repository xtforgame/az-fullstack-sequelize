export type Maybe<T> = T | null;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  bigint: any;
  float8: any;
  jsonb: any;
  timestamptz: any;
};

/** Boolean expression to compare columns of type "Boolean". All fields are combined with logical 'AND'. */
export type Boolean_Comparison_Exp = {
  _eq?: Maybe<Scalars['Boolean']>;
  _gt?: Maybe<Scalars['Boolean']>;
  _gte?: Maybe<Scalars['Boolean']>;
  _in?: Maybe<Array<Scalars['Boolean']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['Boolean']>;
  _lte?: Maybe<Scalars['Boolean']>;
  _neq?: Maybe<Scalars['Boolean']>;
  _nin?: Maybe<Array<Scalars['Boolean']>>;
};

/** Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'. */
export type Int_Comparison_Exp = {
  _eq?: Maybe<Scalars['Int']>;
  _gt?: Maybe<Scalars['Int']>;
  _gte?: Maybe<Scalars['Int']>;
  _in?: Maybe<Array<Scalars['Int']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['Int']>;
  _lte?: Maybe<Scalars['Int']>;
  _neq?: Maybe<Scalars['Int']>;
  _nin?: Maybe<Array<Scalars['Int']>>;
};

/** Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'. */
export type String_Comparison_Exp = {
  _eq?: Maybe<Scalars['String']>;
  _gt?: Maybe<Scalars['String']>;
  _gte?: Maybe<Scalars['String']>;
  /** does the column match the given case-insensitive pattern */
  _ilike?: Maybe<Scalars['String']>;
  _in?: Maybe<Array<Scalars['String']>>;
  /** does the column match the given POSIX regular expression, case insensitive */
  _iregex?: Maybe<Scalars['String']>;
  _is_null?: Maybe<Scalars['Boolean']>;
  /** does the column match the given pattern */
  _like?: Maybe<Scalars['String']>;
  _lt?: Maybe<Scalars['String']>;
  _lte?: Maybe<Scalars['String']>;
  _neq?: Maybe<Scalars['String']>;
  /** does the column NOT match the given case-insensitive pattern */
  _nilike?: Maybe<Scalars['String']>;
  _nin?: Maybe<Array<Scalars['String']>>;
  /** does the column NOT match the given POSIX regular expression, case insensitive */
  _niregex?: Maybe<Scalars['String']>;
  /** does the column NOT match the given pattern */
  _nlike?: Maybe<Scalars['String']>;
  /** does the column NOT match the given POSIX regular expression, case sensitive */
  _nregex?: Maybe<Scalars['String']>;
  /** does the column NOT match the given SQL regular expression */
  _nsimilar?: Maybe<Scalars['String']>;
  /** does the column match the given POSIX regular expression, case sensitive */
  _regex?: Maybe<Scalars['String']>;
  /** does the column match the given SQL regular expression */
  _similar?: Maybe<Scalars['String']>;
};

/** columns and relationships of "tbl_account_link" */
export type AccountLink = {
  __typename?: 'accountLink';
  created_at: Scalars['timestamptz'];
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id: Scalars['bigint'];
  /** An object relationship */
  privateVd?: Maybe<AccountLinkPrivateVd>;
  provider_id?: Maybe<Scalars['String']>;
  provider_user_access_info?: Maybe<Scalars['jsonb']>;
  provider_user_id?: Maybe<Scalars['String']>;
  /** An array relationship */
  recoveryToken: Array<RecoveryToken>;
  /** An aggregate relationship */
  recoveryToken_aggregate: RecoveryToken_Aggregate;
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user: User;
  user_id?: Maybe<Scalars['bigint']>;
};


/** columns and relationships of "tbl_account_link" */
export type AccountLinkDataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "tbl_account_link" */
export type AccountLinkProvider_User_Access_InfoArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "tbl_account_link" */
export type AccountLinkRecoveryTokenArgs = {
  distinct_on?: Maybe<Array<RecoveryToken_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RecoveryToken_Order_By>>;
  where?: Maybe<RecoveryToken_Bool_Exp>;
};


/** columns and relationships of "tbl_account_link" */
export type AccountLinkRecoveryToken_AggregateArgs = {
  distinct_on?: Maybe<Array<RecoveryToken_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RecoveryToken_Order_By>>;
  where?: Maybe<RecoveryToken_Bool_Exp>;
};

/** columns and relationships of "view_account_link_private_vd" */
export type AccountLinkPrivateVd = {
  __typename?: 'accountLinkPrivateVd';
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  provider_id?: Maybe<Scalars['String']>;
  provider_user_id?: Maybe<Scalars['String']>;
  /** An object relationship */
  publicData?: Maybe<AccountLink>;
  /** An array relationship */
  recoveryToken: Array<RecoveryToken>;
  /** An aggregate relationship */
  recoveryToken_aggregate: RecoveryToken_Aggregate;
  updated_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  user?: Maybe<User>;
  user_id?: Maybe<Scalars['bigint']>;
};


/** columns and relationships of "view_account_link_private_vd" */
export type AccountLinkPrivateVdDataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "view_account_link_private_vd" */
export type AccountLinkPrivateVdRecoveryTokenArgs = {
  distinct_on?: Maybe<Array<RecoveryToken_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RecoveryToken_Order_By>>;
  where?: Maybe<RecoveryToken_Bool_Exp>;
};


/** columns and relationships of "view_account_link_private_vd" */
export type AccountLinkPrivateVdRecoveryToken_AggregateArgs = {
  distinct_on?: Maybe<Array<RecoveryToken_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RecoveryToken_Order_By>>;
  where?: Maybe<RecoveryToken_Bool_Exp>;
};

/** aggregated selection of "view_account_link_private_vd" */
export type AccountLinkPrivateVd_Aggregate = {
  __typename?: 'accountLinkPrivateVd_aggregate';
  aggregate?: Maybe<AccountLinkPrivateVd_Aggregate_Fields>;
  nodes: Array<AccountLinkPrivateVd>;
};

/** aggregate fields of "view_account_link_private_vd" */
export type AccountLinkPrivateVd_Aggregate_Fields = {
  __typename?: 'accountLinkPrivateVd_aggregate_fields';
  avg?: Maybe<AccountLinkPrivateVd_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<AccountLinkPrivateVd_Max_Fields>;
  min?: Maybe<AccountLinkPrivateVd_Min_Fields>;
  stddev?: Maybe<AccountLinkPrivateVd_Stddev_Fields>;
  stddev_pop?: Maybe<AccountLinkPrivateVd_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<AccountLinkPrivateVd_Stddev_Samp_Fields>;
  sum?: Maybe<AccountLinkPrivateVd_Sum_Fields>;
  var_pop?: Maybe<AccountLinkPrivateVd_Var_Pop_Fields>;
  var_samp?: Maybe<AccountLinkPrivateVd_Var_Samp_Fields>;
  variance?: Maybe<AccountLinkPrivateVd_Variance_Fields>;
};


/** aggregate fields of "view_account_link_private_vd" */
export type AccountLinkPrivateVd_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<AccountLinkPrivateVd_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type AccountLinkPrivateVd_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type AccountLinkPrivateVd_Avg_Fields = {
  __typename?: 'accountLinkPrivateVd_avg_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "view_account_link_private_vd". All fields are combined with a logical 'AND'. */
export type AccountLinkPrivateVd_Bool_Exp = {
  _and?: Maybe<Array<AccountLinkPrivateVd_Bool_Exp>>;
  _not?: Maybe<AccountLinkPrivateVd_Bool_Exp>;
  _or?: Maybe<Array<AccountLinkPrivateVd_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  provider_id?: Maybe<String_Comparison_Exp>;
  provider_user_id?: Maybe<String_Comparison_Exp>;
  publicData?: Maybe<AccountLink_Bool_Exp>;
  recoveryToken?: Maybe<RecoveryToken_Bool_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<User_Bool_Exp>;
  user_id?: Maybe<Bigint_Comparison_Exp>;
};

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type AccountLinkPrivateVd_Delete_At_Path_Input = {
  data?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type AccountLinkPrivateVd_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type AccountLinkPrivateVd_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "view_account_link_private_vd" */
export type AccountLinkPrivateVd_Inc_Input = {
  id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "view_account_link_private_vd" */
export type AccountLinkPrivateVd_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  provider_id?: Maybe<Scalars['String']>;
  provider_user_id?: Maybe<Scalars['String']>;
  publicData?: Maybe<AccountLink_Obj_Rel_Insert_Input>;
  recoveryToken?: Maybe<RecoveryToken_Arr_Rel_Insert_Input>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<User_Obj_Rel_Insert_Input>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate max on columns */
export type AccountLinkPrivateVd_Max_Fields = {
  __typename?: 'accountLinkPrivateVd_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  provider_id?: Maybe<Scalars['String']>;
  provider_user_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate min on columns */
export type AccountLinkPrivateVd_Min_Fields = {
  __typename?: 'accountLinkPrivateVd_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  provider_id?: Maybe<Scalars['String']>;
  provider_user_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** response of any mutation on the table "view_account_link_private_vd" */
export type AccountLinkPrivateVd_Mutation_Response = {
  __typename?: 'accountLinkPrivateVd_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<AccountLinkPrivateVd>;
};

/** input type for inserting object relation for remote table "view_account_link_private_vd" */
export type AccountLinkPrivateVd_Obj_Rel_Insert_Input = {
  data: AccountLinkPrivateVd_Insert_Input;
};

/** Ordering options when selecting data from "view_account_link_private_vd". */
export type AccountLinkPrivateVd_Order_By = {
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  provider_id?: Maybe<Order_By>;
  provider_user_id?: Maybe<Order_By>;
  publicData?: Maybe<AccountLink_Order_By>;
  recoveryToken_aggregate?: Maybe<RecoveryToken_Aggregate_Order_By>;
  updated_at?: Maybe<Order_By>;
  user?: Maybe<User_Order_By>;
  user_id?: Maybe<Order_By>;
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type AccountLinkPrivateVd_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "view_account_link_private_vd" */
export enum AccountLinkPrivateVd_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  ProviderId = 'provider_id',
  /** column name */
  ProviderUserId = 'provider_user_id',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "view_account_link_private_vd" */
export type AccountLinkPrivateVd_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  provider_id?: Maybe<Scalars['String']>;
  provider_user_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate stddev on columns */
export type AccountLinkPrivateVd_Stddev_Fields = {
  __typename?: 'accountLinkPrivateVd_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type AccountLinkPrivateVd_Stddev_Pop_Fields = {
  __typename?: 'accountLinkPrivateVd_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type AccountLinkPrivateVd_Stddev_Samp_Fields = {
  __typename?: 'accountLinkPrivateVd_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type AccountLinkPrivateVd_Sum_Fields = {
  __typename?: 'accountLinkPrivateVd_sum_fields';
  id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate var_pop on columns */
export type AccountLinkPrivateVd_Var_Pop_Fields = {
  __typename?: 'accountLinkPrivateVd_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type AccountLinkPrivateVd_Var_Samp_Fields = {
  __typename?: 'accountLinkPrivateVd_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type AccountLinkPrivateVd_Variance_Fields = {
  __typename?: 'accountLinkPrivateVd_variance_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregated selection of "tbl_account_link" */
export type AccountLink_Aggregate = {
  __typename?: 'accountLink_aggregate';
  aggregate?: Maybe<AccountLink_Aggregate_Fields>;
  nodes: Array<AccountLink>;
};

/** aggregate fields of "tbl_account_link" */
export type AccountLink_Aggregate_Fields = {
  __typename?: 'accountLink_aggregate_fields';
  avg?: Maybe<AccountLink_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<AccountLink_Max_Fields>;
  min?: Maybe<AccountLink_Min_Fields>;
  stddev?: Maybe<AccountLink_Stddev_Fields>;
  stddev_pop?: Maybe<AccountLink_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<AccountLink_Stddev_Samp_Fields>;
  sum?: Maybe<AccountLink_Sum_Fields>;
  var_pop?: Maybe<AccountLink_Var_Pop_Fields>;
  var_samp?: Maybe<AccountLink_Var_Samp_Fields>;
  variance?: Maybe<AccountLink_Variance_Fields>;
};


/** aggregate fields of "tbl_account_link" */
export type AccountLink_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<AccountLink_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "tbl_account_link" */
export type AccountLink_Aggregate_Order_By = {
  avg?: Maybe<AccountLink_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<AccountLink_Max_Order_By>;
  min?: Maybe<AccountLink_Min_Order_By>;
  stddev?: Maybe<AccountLink_Stddev_Order_By>;
  stddev_pop?: Maybe<AccountLink_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<AccountLink_Stddev_Samp_Order_By>;
  sum?: Maybe<AccountLink_Sum_Order_By>;
  var_pop?: Maybe<AccountLink_Var_Pop_Order_By>;
  var_samp?: Maybe<AccountLink_Var_Samp_Order_By>;
  variance?: Maybe<AccountLink_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type AccountLink_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
  provider_user_access_info?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "tbl_account_link" */
export type AccountLink_Arr_Rel_Insert_Input = {
  data: Array<AccountLink_Insert_Input>;
  /** on conflict condition */
  on_conflict?: Maybe<AccountLink_On_Conflict>;
};

/** aggregate avg on columns */
export type AccountLink_Avg_Fields = {
  __typename?: 'accountLink_avg_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "tbl_account_link" */
export type AccountLink_Avg_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "tbl_account_link". All fields are combined with a logical 'AND'. */
export type AccountLink_Bool_Exp = {
  _and?: Maybe<Array<AccountLink_Bool_Exp>>;
  _not?: Maybe<AccountLink_Bool_Exp>;
  _or?: Maybe<Array<AccountLink_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  privateVd?: Maybe<AccountLinkPrivateVd_Bool_Exp>;
  provider_id?: Maybe<String_Comparison_Exp>;
  provider_user_access_info?: Maybe<Jsonb_Comparison_Exp>;
  provider_user_id?: Maybe<String_Comparison_Exp>;
  recoveryToken?: Maybe<RecoveryToken_Bool_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<User_Bool_Exp>;
  user_id?: Maybe<Bigint_Comparison_Exp>;
};

/** unique or primary key constraints on table "tbl_account_link" */
export enum AccountLink_Constraint {
  /** unique or primary key constraint */
  ProviderUserIdShouldBeUnique = 'provider_user_id_should_be_unique',
  /** unique or primary key constraint */
  TblAccountLinkPkey = 'tbl_account_link_pkey',
  /** unique or primary key constraint */
  TblAccountLinkProviderIdProviderUserId = 'tbl_account_link_provider_id_provider_user_id'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type AccountLink_Delete_At_Path_Input = {
  data?: Maybe<Array<Scalars['String']>>;
  provider_user_access_info?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type AccountLink_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
  provider_user_access_info?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type AccountLink_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
  provider_user_access_info?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "tbl_account_link" */
export type AccountLink_Inc_Input = {
  id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "tbl_account_link" */
export type AccountLink_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  privateVd?: Maybe<AccountLinkPrivateVd_Obj_Rel_Insert_Input>;
  provider_id?: Maybe<Scalars['String']>;
  provider_user_access_info?: Maybe<Scalars['jsonb']>;
  provider_user_id?: Maybe<Scalars['String']>;
  recoveryToken?: Maybe<RecoveryToken_Arr_Rel_Insert_Input>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<User_Obj_Rel_Insert_Input>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate max on columns */
export type AccountLink_Max_Fields = {
  __typename?: 'accountLink_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  provider_id?: Maybe<Scalars['String']>;
  provider_user_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by max() on columns of table "tbl_account_link" */
export type AccountLink_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  provider_id?: Maybe<Order_By>;
  provider_user_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type AccountLink_Min_Fields = {
  __typename?: 'accountLink_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  provider_id?: Maybe<Scalars['String']>;
  provider_user_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by min() on columns of table "tbl_account_link" */
export type AccountLink_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  provider_id?: Maybe<Order_By>;
  provider_user_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** response of any mutation on the table "tbl_account_link" */
export type AccountLink_Mutation_Response = {
  __typename?: 'accountLink_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<AccountLink>;
};

/** input type for inserting object relation for remote table "tbl_account_link" */
export type AccountLink_Obj_Rel_Insert_Input = {
  data: AccountLink_Insert_Input;
  /** on conflict condition */
  on_conflict?: Maybe<AccountLink_On_Conflict>;
};

/** on conflict condition type for table "tbl_account_link" */
export type AccountLink_On_Conflict = {
  constraint: AccountLink_Constraint;
  update_columns: Array<AccountLink_Update_Column>;
  where?: Maybe<AccountLink_Bool_Exp>;
};

/** Ordering options when selecting data from "tbl_account_link". */
export type AccountLink_Order_By = {
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  privateVd?: Maybe<AccountLinkPrivateVd_Order_By>;
  provider_id?: Maybe<Order_By>;
  provider_user_access_info?: Maybe<Order_By>;
  provider_user_id?: Maybe<Order_By>;
  recoveryToken_aggregate?: Maybe<RecoveryToken_Aggregate_Order_By>;
  updated_at?: Maybe<Order_By>;
  user?: Maybe<User_Order_By>;
  user_id?: Maybe<Order_By>;
};

/** primary key columns input for table: accountLink */
export type AccountLink_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type AccountLink_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
  provider_user_access_info?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "tbl_account_link" */
export enum AccountLink_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  ProviderId = 'provider_id',
  /** column name */
  ProviderUserAccessInfo = 'provider_user_access_info',
  /** column name */
  ProviderUserId = 'provider_user_id',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "tbl_account_link" */
export type AccountLink_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  provider_id?: Maybe<Scalars['String']>;
  provider_user_access_info?: Maybe<Scalars['jsonb']>;
  provider_user_id?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate stddev on columns */
export type AccountLink_Stddev_Fields = {
  __typename?: 'accountLink_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "tbl_account_link" */
export type AccountLink_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type AccountLink_Stddev_Pop_Fields = {
  __typename?: 'accountLink_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "tbl_account_link" */
export type AccountLink_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type AccountLink_Stddev_Samp_Fields = {
  __typename?: 'accountLink_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "tbl_account_link" */
export type AccountLink_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type AccountLink_Sum_Fields = {
  __typename?: 'accountLink_sum_fields';
  id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "tbl_account_link" */
export type AccountLink_Sum_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** update columns of table "tbl_account_link" */
export enum AccountLink_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  ProviderId = 'provider_id',
  /** column name */
  ProviderUserAccessInfo = 'provider_user_access_info',
  /** column name */
  ProviderUserId = 'provider_user_id',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** aggregate var_pop on columns */
export type AccountLink_Var_Pop_Fields = {
  __typename?: 'accountLink_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "tbl_account_link" */
export type AccountLink_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type AccountLink_Var_Samp_Fields = {
  __typename?: 'accountLink_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "tbl_account_link" */
export type AccountLink_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type AccountLink_Variance_Fields = {
  __typename?: 'accountLink_variance_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "tbl_account_link" */
export type AccountLink_Variance_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};


/** Boolean expression to compare columns of type "bigint". All fields are combined with logical 'AND'. */
export type Bigint_Comparison_Exp = {
  _eq?: Maybe<Scalars['bigint']>;
  _gt?: Maybe<Scalars['bigint']>;
  _gte?: Maybe<Scalars['bigint']>;
  _in?: Maybe<Array<Scalars['bigint']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['bigint']>;
  _lte?: Maybe<Scalars['bigint']>;
  _neq?: Maybe<Scalars['bigint']>;
  _nin?: Maybe<Array<Scalars['bigint']>>;
};

/** columns and relationships of "tbl_browser_session" */
export type BrowserSession = {
  __typename?: 'browserSession';
  created_at: Scalars['timestamptz'];
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id: Scalars['bigint'];
  /** An array relationship */
  products: Array<CartProduct>;
  /** An aggregate relationship */
  products_aggregate: CartProduct_Aggregate;
  sessionId?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user: User;
  user_id?: Maybe<Scalars['bigint']>;
};


/** columns and relationships of "tbl_browser_session" */
export type BrowserSessionDataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "tbl_browser_session" */
export type BrowserSessionProductsArgs = {
  distinct_on?: Maybe<Array<CartProduct_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<CartProduct_Order_By>>;
  where?: Maybe<CartProduct_Bool_Exp>;
};


/** columns and relationships of "tbl_browser_session" */
export type BrowserSessionProducts_AggregateArgs = {
  distinct_on?: Maybe<Array<CartProduct_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<CartProduct_Order_By>>;
  where?: Maybe<CartProduct_Bool_Exp>;
};

/** aggregated selection of "tbl_browser_session" */
export type BrowserSession_Aggregate = {
  __typename?: 'browserSession_aggregate';
  aggregate?: Maybe<BrowserSession_Aggregate_Fields>;
  nodes: Array<BrowserSession>;
};

/** aggregate fields of "tbl_browser_session" */
export type BrowserSession_Aggregate_Fields = {
  __typename?: 'browserSession_aggregate_fields';
  avg?: Maybe<BrowserSession_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<BrowserSession_Max_Fields>;
  min?: Maybe<BrowserSession_Min_Fields>;
  stddev?: Maybe<BrowserSession_Stddev_Fields>;
  stddev_pop?: Maybe<BrowserSession_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<BrowserSession_Stddev_Samp_Fields>;
  sum?: Maybe<BrowserSession_Sum_Fields>;
  var_pop?: Maybe<BrowserSession_Var_Pop_Fields>;
  var_samp?: Maybe<BrowserSession_Var_Samp_Fields>;
  variance?: Maybe<BrowserSession_Variance_Fields>;
};


/** aggregate fields of "tbl_browser_session" */
export type BrowserSession_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<BrowserSession_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "tbl_browser_session" */
export type BrowserSession_Aggregate_Order_By = {
  avg?: Maybe<BrowserSession_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<BrowserSession_Max_Order_By>;
  min?: Maybe<BrowserSession_Min_Order_By>;
  stddev?: Maybe<BrowserSession_Stddev_Order_By>;
  stddev_pop?: Maybe<BrowserSession_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<BrowserSession_Stddev_Samp_Order_By>;
  sum?: Maybe<BrowserSession_Sum_Order_By>;
  var_pop?: Maybe<BrowserSession_Var_Pop_Order_By>;
  var_samp?: Maybe<BrowserSession_Var_Samp_Order_By>;
  variance?: Maybe<BrowserSession_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type BrowserSession_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "tbl_browser_session" */
export type BrowserSession_Arr_Rel_Insert_Input = {
  data: Array<BrowserSession_Insert_Input>;
  /** on conflict condition */
  on_conflict?: Maybe<BrowserSession_On_Conflict>;
};

/** aggregate avg on columns */
export type BrowserSession_Avg_Fields = {
  __typename?: 'browserSession_avg_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "tbl_browser_session" */
export type BrowserSession_Avg_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "tbl_browser_session". All fields are combined with a logical 'AND'. */
export type BrowserSession_Bool_Exp = {
  _and?: Maybe<Array<BrowserSession_Bool_Exp>>;
  _not?: Maybe<BrowserSession_Bool_Exp>;
  _or?: Maybe<Array<BrowserSession_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  products?: Maybe<CartProduct_Bool_Exp>;
  sessionId?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<User_Bool_Exp>;
  user_id?: Maybe<Bigint_Comparison_Exp>;
};

/** unique or primary key constraints on table "tbl_browser_session" */
export enum BrowserSession_Constraint {
  /** unique or primary key constraint */
  TblBrowserSessionPkey = 'tbl_browser_session_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type BrowserSession_Delete_At_Path_Input = {
  data?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type BrowserSession_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type BrowserSession_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "tbl_browser_session" */
export type BrowserSession_Inc_Input = {
  id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "tbl_browser_session" */
export type BrowserSession_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  products?: Maybe<CartProduct_Arr_Rel_Insert_Input>;
  sessionId?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<User_Obj_Rel_Insert_Input>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate max on columns */
export type BrowserSession_Max_Fields = {
  __typename?: 'browserSession_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  sessionId?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by max() on columns of table "tbl_browser_session" */
export type BrowserSession_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  sessionId?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type BrowserSession_Min_Fields = {
  __typename?: 'browserSession_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  sessionId?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by min() on columns of table "tbl_browser_session" */
export type BrowserSession_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  sessionId?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** response of any mutation on the table "tbl_browser_session" */
export type BrowserSession_Mutation_Response = {
  __typename?: 'browserSession_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<BrowserSession>;
};

/** input type for inserting object relation for remote table "tbl_browser_session" */
export type BrowserSession_Obj_Rel_Insert_Input = {
  data: BrowserSession_Insert_Input;
  /** on conflict condition */
  on_conflict?: Maybe<BrowserSession_On_Conflict>;
};

/** on conflict condition type for table "tbl_browser_session" */
export type BrowserSession_On_Conflict = {
  constraint: BrowserSession_Constraint;
  update_columns: Array<BrowserSession_Update_Column>;
  where?: Maybe<BrowserSession_Bool_Exp>;
};

/** Ordering options when selecting data from "tbl_browser_session". */
export type BrowserSession_Order_By = {
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  products_aggregate?: Maybe<CartProduct_Aggregate_Order_By>;
  sessionId?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user?: Maybe<User_Order_By>;
  user_id?: Maybe<Order_By>;
};

/** primary key columns input for table: browserSession */
export type BrowserSession_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type BrowserSession_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "tbl_browser_session" */
export enum BrowserSession_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  SessionId = 'sessionId',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "tbl_browser_session" */
export type BrowserSession_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  sessionId?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate stddev on columns */
export type BrowserSession_Stddev_Fields = {
  __typename?: 'browserSession_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "tbl_browser_session" */
export type BrowserSession_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type BrowserSession_Stddev_Pop_Fields = {
  __typename?: 'browserSession_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "tbl_browser_session" */
export type BrowserSession_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type BrowserSession_Stddev_Samp_Fields = {
  __typename?: 'browserSession_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "tbl_browser_session" */
export type BrowserSession_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type BrowserSession_Sum_Fields = {
  __typename?: 'browserSession_sum_fields';
  id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "tbl_browser_session" */
export type BrowserSession_Sum_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** update columns of table "tbl_browser_session" */
export enum BrowserSession_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  SessionId = 'sessionId',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** aggregate var_pop on columns */
export type BrowserSession_Var_Pop_Fields = {
  __typename?: 'browserSession_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "tbl_browser_session" */
export type BrowserSession_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type BrowserSession_Var_Samp_Fields = {
  __typename?: 'browserSession_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "tbl_browser_session" */
export type BrowserSession_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type BrowserSession_Variance_Fields = {
  __typename?: 'browserSession_variance_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "tbl_browser_session" */
export type BrowserSession_Variance_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** columns and relationships of "tbl_buyer_info" */
export type BuyerInfo = {
  __typename?: 'buyerInfo';
  address?: Maybe<Scalars['String']>;
  area?: Maybe<Scalars['String']>;
  /** An object relationship */
  asDefaultTo: User;
  as_default_to?: Maybe<Scalars['bigint']>;
  configName?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  email1?: Maybe<Scalars['String']>;
  email2?: Maybe<Scalars['String']>;
  id: Scalars['bigint'];
  memo?: Maybe<Scalars['String']>;
  mobile?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  phone1?: Maybe<Scalars['String']>;
  phone2?: Maybe<Scalars['String']>;
  /** An object relationship */
  privateVd?: Maybe<BuyerInfoPrivateVd>;
  region?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user: User;
  user_id?: Maybe<Scalars['bigint']>;
  zipcode?: Maybe<Scalars['String']>;
};


/** columns and relationships of "tbl_buyer_info" */
export type BuyerInfoDataArgs = {
  path?: Maybe<Scalars['String']>;
};

/** columns and relationships of "view_buyer_info_private_vd" */
export type BuyerInfoPrivateVd = {
  __typename?: 'buyerInfoPrivateVd';
  address?: Maybe<Scalars['String']>;
  area?: Maybe<Scalars['String']>;
  /** An object relationship */
  asDefaultTo?: Maybe<User>;
  as_default_to?: Maybe<Scalars['bigint']>;
  configName?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  email1?: Maybe<Scalars['String']>;
  email2?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  memo?: Maybe<Scalars['String']>;
  mobile?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  phone1?: Maybe<Scalars['String']>;
  phone2?: Maybe<Scalars['String']>;
  /** An object relationship */
  publicData?: Maybe<BuyerInfo>;
  region?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  user?: Maybe<User>;
  user_id?: Maybe<Scalars['bigint']>;
  zipcode?: Maybe<Scalars['String']>;
};


/** columns and relationships of "view_buyer_info_private_vd" */
export type BuyerInfoPrivateVdDataArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "view_buyer_info_private_vd" */
export type BuyerInfoPrivateVd_Aggregate = {
  __typename?: 'buyerInfoPrivateVd_aggregate';
  aggregate?: Maybe<BuyerInfoPrivateVd_Aggregate_Fields>;
  nodes: Array<BuyerInfoPrivateVd>;
};

/** aggregate fields of "view_buyer_info_private_vd" */
export type BuyerInfoPrivateVd_Aggregate_Fields = {
  __typename?: 'buyerInfoPrivateVd_aggregate_fields';
  avg?: Maybe<BuyerInfoPrivateVd_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<BuyerInfoPrivateVd_Max_Fields>;
  min?: Maybe<BuyerInfoPrivateVd_Min_Fields>;
  stddev?: Maybe<BuyerInfoPrivateVd_Stddev_Fields>;
  stddev_pop?: Maybe<BuyerInfoPrivateVd_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<BuyerInfoPrivateVd_Stddev_Samp_Fields>;
  sum?: Maybe<BuyerInfoPrivateVd_Sum_Fields>;
  var_pop?: Maybe<BuyerInfoPrivateVd_Var_Pop_Fields>;
  var_samp?: Maybe<BuyerInfoPrivateVd_Var_Samp_Fields>;
  variance?: Maybe<BuyerInfoPrivateVd_Variance_Fields>;
};


/** aggregate fields of "view_buyer_info_private_vd" */
export type BuyerInfoPrivateVd_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<BuyerInfoPrivateVd_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type BuyerInfoPrivateVd_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type BuyerInfoPrivateVd_Avg_Fields = {
  __typename?: 'buyerInfoPrivateVd_avg_fields';
  as_default_to?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "view_buyer_info_private_vd". All fields are combined with a logical 'AND'. */
export type BuyerInfoPrivateVd_Bool_Exp = {
  _and?: Maybe<Array<BuyerInfoPrivateVd_Bool_Exp>>;
  _not?: Maybe<BuyerInfoPrivateVd_Bool_Exp>;
  _or?: Maybe<Array<BuyerInfoPrivateVd_Bool_Exp>>;
  address?: Maybe<String_Comparison_Exp>;
  area?: Maybe<String_Comparison_Exp>;
  asDefaultTo?: Maybe<User_Bool_Exp>;
  as_default_to?: Maybe<Bigint_Comparison_Exp>;
  configName?: Maybe<String_Comparison_Exp>;
  country?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  email1?: Maybe<String_Comparison_Exp>;
  email2?: Maybe<String_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  memo?: Maybe<String_Comparison_Exp>;
  mobile?: Maybe<String_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  phone1?: Maybe<String_Comparison_Exp>;
  phone2?: Maybe<String_Comparison_Exp>;
  publicData?: Maybe<BuyerInfo_Bool_Exp>;
  region?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<User_Bool_Exp>;
  user_id?: Maybe<Bigint_Comparison_Exp>;
  zipcode?: Maybe<String_Comparison_Exp>;
};

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type BuyerInfoPrivateVd_Delete_At_Path_Input = {
  data?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type BuyerInfoPrivateVd_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type BuyerInfoPrivateVd_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "view_buyer_info_private_vd" */
export type BuyerInfoPrivateVd_Inc_Input = {
  as_default_to?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "view_buyer_info_private_vd" */
export type BuyerInfoPrivateVd_Insert_Input = {
  address?: Maybe<Scalars['String']>;
  area?: Maybe<Scalars['String']>;
  asDefaultTo?: Maybe<User_Obj_Rel_Insert_Input>;
  as_default_to?: Maybe<Scalars['bigint']>;
  configName?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  email1?: Maybe<Scalars['String']>;
  email2?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  memo?: Maybe<Scalars['String']>;
  mobile?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  phone1?: Maybe<Scalars['String']>;
  phone2?: Maybe<Scalars['String']>;
  publicData?: Maybe<BuyerInfo_Obj_Rel_Insert_Input>;
  region?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<User_Obj_Rel_Insert_Input>;
  user_id?: Maybe<Scalars['bigint']>;
  zipcode?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type BuyerInfoPrivateVd_Max_Fields = {
  __typename?: 'buyerInfoPrivateVd_max_fields';
  address?: Maybe<Scalars['String']>;
  area?: Maybe<Scalars['String']>;
  as_default_to?: Maybe<Scalars['bigint']>;
  configName?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  email1?: Maybe<Scalars['String']>;
  email2?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  memo?: Maybe<Scalars['String']>;
  mobile?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  phone1?: Maybe<Scalars['String']>;
  phone2?: Maybe<Scalars['String']>;
  region?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
  zipcode?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type BuyerInfoPrivateVd_Min_Fields = {
  __typename?: 'buyerInfoPrivateVd_min_fields';
  address?: Maybe<Scalars['String']>;
  area?: Maybe<Scalars['String']>;
  as_default_to?: Maybe<Scalars['bigint']>;
  configName?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  email1?: Maybe<Scalars['String']>;
  email2?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  memo?: Maybe<Scalars['String']>;
  mobile?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  phone1?: Maybe<Scalars['String']>;
  phone2?: Maybe<Scalars['String']>;
  region?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
  zipcode?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "view_buyer_info_private_vd" */
export type BuyerInfoPrivateVd_Mutation_Response = {
  __typename?: 'buyerInfoPrivateVd_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<BuyerInfoPrivateVd>;
};

/** input type for inserting object relation for remote table "view_buyer_info_private_vd" */
export type BuyerInfoPrivateVd_Obj_Rel_Insert_Input = {
  data: BuyerInfoPrivateVd_Insert_Input;
};

/** Ordering options when selecting data from "view_buyer_info_private_vd". */
export type BuyerInfoPrivateVd_Order_By = {
  address?: Maybe<Order_By>;
  area?: Maybe<Order_By>;
  asDefaultTo?: Maybe<User_Order_By>;
  as_default_to?: Maybe<Order_By>;
  configName?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  email1?: Maybe<Order_By>;
  email2?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  memo?: Maybe<Order_By>;
  mobile?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  phone1?: Maybe<Order_By>;
  phone2?: Maybe<Order_By>;
  publicData?: Maybe<BuyerInfo_Order_By>;
  region?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user?: Maybe<User_Order_By>;
  user_id?: Maybe<Order_By>;
  zipcode?: Maybe<Order_By>;
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type BuyerInfoPrivateVd_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "view_buyer_info_private_vd" */
export enum BuyerInfoPrivateVd_Select_Column {
  /** column name */
  Address = 'address',
  /** column name */
  Area = 'area',
  /** column name */
  AsDefaultTo = 'as_default_to',
  /** column name */
  ConfigName = 'configName',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Email1 = 'email1',
  /** column name */
  Email2 = 'email2',
  /** column name */
  Id = 'id',
  /** column name */
  Memo = 'memo',
  /** column name */
  Mobile = 'mobile',
  /** column name */
  Name = 'name',
  /** column name */
  Phone1 = 'phone1',
  /** column name */
  Phone2 = 'phone2',
  /** column name */
  Region = 'region',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id',
  /** column name */
  Zipcode = 'zipcode'
}

/** input type for updating data in table "view_buyer_info_private_vd" */
export type BuyerInfoPrivateVd_Set_Input = {
  address?: Maybe<Scalars['String']>;
  area?: Maybe<Scalars['String']>;
  as_default_to?: Maybe<Scalars['bigint']>;
  configName?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  email1?: Maybe<Scalars['String']>;
  email2?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  memo?: Maybe<Scalars['String']>;
  mobile?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  phone1?: Maybe<Scalars['String']>;
  phone2?: Maybe<Scalars['String']>;
  region?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
  zipcode?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type BuyerInfoPrivateVd_Stddev_Fields = {
  __typename?: 'buyerInfoPrivateVd_stddev_fields';
  as_default_to?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type BuyerInfoPrivateVd_Stddev_Pop_Fields = {
  __typename?: 'buyerInfoPrivateVd_stddev_pop_fields';
  as_default_to?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type BuyerInfoPrivateVd_Stddev_Samp_Fields = {
  __typename?: 'buyerInfoPrivateVd_stddev_samp_fields';
  as_default_to?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type BuyerInfoPrivateVd_Sum_Fields = {
  __typename?: 'buyerInfoPrivateVd_sum_fields';
  as_default_to?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate var_pop on columns */
export type BuyerInfoPrivateVd_Var_Pop_Fields = {
  __typename?: 'buyerInfoPrivateVd_var_pop_fields';
  as_default_to?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type BuyerInfoPrivateVd_Var_Samp_Fields = {
  __typename?: 'buyerInfoPrivateVd_var_samp_fields';
  as_default_to?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type BuyerInfoPrivateVd_Variance_Fields = {
  __typename?: 'buyerInfoPrivateVd_variance_fields';
  as_default_to?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregated selection of "tbl_buyer_info" */
export type BuyerInfo_Aggregate = {
  __typename?: 'buyerInfo_aggregate';
  aggregate?: Maybe<BuyerInfo_Aggregate_Fields>;
  nodes: Array<BuyerInfo>;
};

/** aggregate fields of "tbl_buyer_info" */
export type BuyerInfo_Aggregate_Fields = {
  __typename?: 'buyerInfo_aggregate_fields';
  avg?: Maybe<BuyerInfo_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<BuyerInfo_Max_Fields>;
  min?: Maybe<BuyerInfo_Min_Fields>;
  stddev?: Maybe<BuyerInfo_Stddev_Fields>;
  stddev_pop?: Maybe<BuyerInfo_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<BuyerInfo_Stddev_Samp_Fields>;
  sum?: Maybe<BuyerInfo_Sum_Fields>;
  var_pop?: Maybe<BuyerInfo_Var_Pop_Fields>;
  var_samp?: Maybe<BuyerInfo_Var_Samp_Fields>;
  variance?: Maybe<BuyerInfo_Variance_Fields>;
};


/** aggregate fields of "tbl_buyer_info" */
export type BuyerInfo_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<BuyerInfo_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "tbl_buyer_info" */
export type BuyerInfo_Aggregate_Order_By = {
  avg?: Maybe<BuyerInfo_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<BuyerInfo_Max_Order_By>;
  min?: Maybe<BuyerInfo_Min_Order_By>;
  stddev?: Maybe<BuyerInfo_Stddev_Order_By>;
  stddev_pop?: Maybe<BuyerInfo_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<BuyerInfo_Stddev_Samp_Order_By>;
  sum?: Maybe<BuyerInfo_Sum_Order_By>;
  var_pop?: Maybe<BuyerInfo_Var_Pop_Order_By>;
  var_samp?: Maybe<BuyerInfo_Var_Samp_Order_By>;
  variance?: Maybe<BuyerInfo_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type BuyerInfo_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "tbl_buyer_info" */
export type BuyerInfo_Arr_Rel_Insert_Input = {
  data: Array<BuyerInfo_Insert_Input>;
  /** on conflict condition */
  on_conflict?: Maybe<BuyerInfo_On_Conflict>;
};

/** aggregate avg on columns */
export type BuyerInfo_Avg_Fields = {
  __typename?: 'buyerInfo_avg_fields';
  as_default_to?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "tbl_buyer_info" */
export type BuyerInfo_Avg_Order_By = {
  as_default_to?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "tbl_buyer_info". All fields are combined with a logical 'AND'. */
export type BuyerInfo_Bool_Exp = {
  _and?: Maybe<Array<BuyerInfo_Bool_Exp>>;
  _not?: Maybe<BuyerInfo_Bool_Exp>;
  _or?: Maybe<Array<BuyerInfo_Bool_Exp>>;
  address?: Maybe<String_Comparison_Exp>;
  area?: Maybe<String_Comparison_Exp>;
  asDefaultTo?: Maybe<User_Bool_Exp>;
  as_default_to?: Maybe<Bigint_Comparison_Exp>;
  configName?: Maybe<String_Comparison_Exp>;
  country?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  email1?: Maybe<String_Comparison_Exp>;
  email2?: Maybe<String_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  memo?: Maybe<String_Comparison_Exp>;
  mobile?: Maybe<String_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  phone1?: Maybe<String_Comparison_Exp>;
  phone2?: Maybe<String_Comparison_Exp>;
  privateVd?: Maybe<BuyerInfoPrivateVd_Bool_Exp>;
  region?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<User_Bool_Exp>;
  user_id?: Maybe<Bigint_Comparison_Exp>;
  zipcode?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "tbl_buyer_info" */
export enum BuyerInfo_Constraint {
  /** unique or primary key constraint */
  TblBuyerInfoPkey = 'tbl_buyer_info_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type BuyerInfo_Delete_At_Path_Input = {
  data?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type BuyerInfo_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type BuyerInfo_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "tbl_buyer_info" */
export type BuyerInfo_Inc_Input = {
  as_default_to?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "tbl_buyer_info" */
export type BuyerInfo_Insert_Input = {
  address?: Maybe<Scalars['String']>;
  area?: Maybe<Scalars['String']>;
  asDefaultTo?: Maybe<User_Obj_Rel_Insert_Input>;
  as_default_to?: Maybe<Scalars['bigint']>;
  configName?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  email1?: Maybe<Scalars['String']>;
  email2?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  memo?: Maybe<Scalars['String']>;
  mobile?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  phone1?: Maybe<Scalars['String']>;
  phone2?: Maybe<Scalars['String']>;
  privateVd?: Maybe<BuyerInfoPrivateVd_Obj_Rel_Insert_Input>;
  region?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<User_Obj_Rel_Insert_Input>;
  user_id?: Maybe<Scalars['bigint']>;
  zipcode?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type BuyerInfo_Max_Fields = {
  __typename?: 'buyerInfo_max_fields';
  address?: Maybe<Scalars['String']>;
  area?: Maybe<Scalars['String']>;
  as_default_to?: Maybe<Scalars['bigint']>;
  configName?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  email1?: Maybe<Scalars['String']>;
  email2?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  memo?: Maybe<Scalars['String']>;
  mobile?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  phone1?: Maybe<Scalars['String']>;
  phone2?: Maybe<Scalars['String']>;
  region?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
  zipcode?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "tbl_buyer_info" */
export type BuyerInfo_Max_Order_By = {
  address?: Maybe<Order_By>;
  area?: Maybe<Order_By>;
  as_default_to?: Maybe<Order_By>;
  configName?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  email1?: Maybe<Order_By>;
  email2?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  memo?: Maybe<Order_By>;
  mobile?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  phone1?: Maybe<Order_By>;
  phone2?: Maybe<Order_By>;
  region?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
  zipcode?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type BuyerInfo_Min_Fields = {
  __typename?: 'buyerInfo_min_fields';
  address?: Maybe<Scalars['String']>;
  area?: Maybe<Scalars['String']>;
  as_default_to?: Maybe<Scalars['bigint']>;
  configName?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  email1?: Maybe<Scalars['String']>;
  email2?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  memo?: Maybe<Scalars['String']>;
  mobile?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  phone1?: Maybe<Scalars['String']>;
  phone2?: Maybe<Scalars['String']>;
  region?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
  zipcode?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "tbl_buyer_info" */
export type BuyerInfo_Min_Order_By = {
  address?: Maybe<Order_By>;
  area?: Maybe<Order_By>;
  as_default_to?: Maybe<Order_By>;
  configName?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  email1?: Maybe<Order_By>;
  email2?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  memo?: Maybe<Order_By>;
  mobile?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  phone1?: Maybe<Order_By>;
  phone2?: Maybe<Order_By>;
  region?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
  zipcode?: Maybe<Order_By>;
};

/** response of any mutation on the table "tbl_buyer_info" */
export type BuyerInfo_Mutation_Response = {
  __typename?: 'buyerInfo_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<BuyerInfo>;
};

/** input type for inserting object relation for remote table "tbl_buyer_info" */
export type BuyerInfo_Obj_Rel_Insert_Input = {
  data: BuyerInfo_Insert_Input;
  /** on conflict condition */
  on_conflict?: Maybe<BuyerInfo_On_Conflict>;
};

/** on conflict condition type for table "tbl_buyer_info" */
export type BuyerInfo_On_Conflict = {
  constraint: BuyerInfo_Constraint;
  update_columns: Array<BuyerInfo_Update_Column>;
  where?: Maybe<BuyerInfo_Bool_Exp>;
};

/** Ordering options when selecting data from "tbl_buyer_info". */
export type BuyerInfo_Order_By = {
  address?: Maybe<Order_By>;
  area?: Maybe<Order_By>;
  asDefaultTo?: Maybe<User_Order_By>;
  as_default_to?: Maybe<Order_By>;
  configName?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  email1?: Maybe<Order_By>;
  email2?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  memo?: Maybe<Order_By>;
  mobile?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  phone1?: Maybe<Order_By>;
  phone2?: Maybe<Order_By>;
  privateVd?: Maybe<BuyerInfoPrivateVd_Order_By>;
  region?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user?: Maybe<User_Order_By>;
  user_id?: Maybe<Order_By>;
  zipcode?: Maybe<Order_By>;
};

/** primary key columns input for table: buyerInfo */
export type BuyerInfo_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type BuyerInfo_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "tbl_buyer_info" */
export enum BuyerInfo_Select_Column {
  /** column name */
  Address = 'address',
  /** column name */
  Area = 'area',
  /** column name */
  AsDefaultTo = 'as_default_to',
  /** column name */
  ConfigName = 'configName',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Email1 = 'email1',
  /** column name */
  Email2 = 'email2',
  /** column name */
  Id = 'id',
  /** column name */
  Memo = 'memo',
  /** column name */
  Mobile = 'mobile',
  /** column name */
  Name = 'name',
  /** column name */
  Phone1 = 'phone1',
  /** column name */
  Phone2 = 'phone2',
  /** column name */
  Region = 'region',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id',
  /** column name */
  Zipcode = 'zipcode'
}

/** input type for updating data in table "tbl_buyer_info" */
export type BuyerInfo_Set_Input = {
  address?: Maybe<Scalars['String']>;
  area?: Maybe<Scalars['String']>;
  as_default_to?: Maybe<Scalars['bigint']>;
  configName?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  email1?: Maybe<Scalars['String']>;
  email2?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  memo?: Maybe<Scalars['String']>;
  mobile?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  phone1?: Maybe<Scalars['String']>;
  phone2?: Maybe<Scalars['String']>;
  region?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
  zipcode?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type BuyerInfo_Stddev_Fields = {
  __typename?: 'buyerInfo_stddev_fields';
  as_default_to?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "tbl_buyer_info" */
export type BuyerInfo_Stddev_Order_By = {
  as_default_to?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type BuyerInfo_Stddev_Pop_Fields = {
  __typename?: 'buyerInfo_stddev_pop_fields';
  as_default_to?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "tbl_buyer_info" */
export type BuyerInfo_Stddev_Pop_Order_By = {
  as_default_to?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type BuyerInfo_Stddev_Samp_Fields = {
  __typename?: 'buyerInfo_stddev_samp_fields';
  as_default_to?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "tbl_buyer_info" */
export type BuyerInfo_Stddev_Samp_Order_By = {
  as_default_to?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type BuyerInfo_Sum_Fields = {
  __typename?: 'buyerInfo_sum_fields';
  as_default_to?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "tbl_buyer_info" */
export type BuyerInfo_Sum_Order_By = {
  as_default_to?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** update columns of table "tbl_buyer_info" */
export enum BuyerInfo_Update_Column {
  /** column name */
  Address = 'address',
  /** column name */
  Area = 'area',
  /** column name */
  AsDefaultTo = 'as_default_to',
  /** column name */
  ConfigName = 'configName',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Email1 = 'email1',
  /** column name */
  Email2 = 'email2',
  /** column name */
  Id = 'id',
  /** column name */
  Memo = 'memo',
  /** column name */
  Mobile = 'mobile',
  /** column name */
  Name = 'name',
  /** column name */
  Phone1 = 'phone1',
  /** column name */
  Phone2 = 'phone2',
  /** column name */
  Region = 'region',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id',
  /** column name */
  Zipcode = 'zipcode'
}

/** aggregate var_pop on columns */
export type BuyerInfo_Var_Pop_Fields = {
  __typename?: 'buyerInfo_var_pop_fields';
  as_default_to?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "tbl_buyer_info" */
export type BuyerInfo_Var_Pop_Order_By = {
  as_default_to?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type BuyerInfo_Var_Samp_Fields = {
  __typename?: 'buyerInfo_var_samp_fields';
  as_default_to?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "tbl_buyer_info" */
export type BuyerInfo_Var_Samp_Order_By = {
  as_default_to?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type BuyerInfo_Variance_Fields = {
  __typename?: 'buyerInfo_variance_fields';
  as_default_to?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "tbl_buyer_info" */
export type BuyerInfo_Variance_Order_By = {
  as_default_to?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** columns and relationships of "tbl_campaign" */
export type Campaign = {
  __typename?: 'campaign';
  created_at: Scalars['timestamptz'];
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  durationType?: Maybe<Scalars['String']>;
  end?: Maybe<Scalars['timestamptz']>;
  id: Scalars['bigint'];
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  newIn?: Maybe<Scalars['Boolean']>;
  /** An array relationship */
  orders: Array<OrderCampaign>;
  /** An aggregate relationship */
  orders_aggregate: OrderCampaign_Aggregate;
  originData?: Maybe<Scalars['jsonb']>;
  prDescription?: Maybe<Scalars['String']>;
  prTitle?: Maybe<Scalars['String']>;
  /** An object relationship */
  privateVd?: Maybe<CampaignPrivateVd>;
  /** An array relationship */
  productGroups: Array<ProductGroupCampaign>;
  /** An aggregate relationship */
  productGroups_aggregate: ProductGroupCampaign_Aggregate;
  start?: Maybe<Scalars['timestamptz']>;
  state?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "tbl_campaign" */
export type CampaignDataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "tbl_campaign" */
export type CampaignOrdersArgs = {
  distinct_on?: Maybe<Array<OrderCampaign_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrderCampaign_Order_By>>;
  where?: Maybe<OrderCampaign_Bool_Exp>;
};


/** columns and relationships of "tbl_campaign" */
export type CampaignOrders_AggregateArgs = {
  distinct_on?: Maybe<Array<OrderCampaign_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrderCampaign_Order_By>>;
  where?: Maybe<OrderCampaign_Bool_Exp>;
};


/** columns and relationships of "tbl_campaign" */
export type CampaignOriginDataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "tbl_campaign" */
export type CampaignProductGroupsArgs = {
  distinct_on?: Maybe<Array<ProductGroupCampaign_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductGroupCampaign_Order_By>>;
  where?: Maybe<ProductGroupCampaign_Bool_Exp>;
};


/** columns and relationships of "tbl_campaign" */
export type CampaignProductGroups_AggregateArgs = {
  distinct_on?: Maybe<Array<ProductGroupCampaign_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductGroupCampaign_Order_By>>;
  where?: Maybe<ProductGroupCampaign_Bool_Exp>;
};

/** columns and relationships of "view_campaign_private_vd" */
export type CampaignPrivateVd = {
  __typename?: 'campaignPrivateVd';
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  durationType?: Maybe<Scalars['String']>;
  end?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  newIn?: Maybe<Scalars['Boolean']>;
  /** An array relationship */
  orders: Array<OrderCampaign>;
  /** An aggregate relationship */
  orders_aggregate: OrderCampaign_Aggregate;
  originData?: Maybe<Scalars['jsonb']>;
  prDescription?: Maybe<Scalars['String']>;
  prTitle?: Maybe<Scalars['String']>;
  /** An array relationship */
  productGroups: Array<ProductGroupCampaign>;
  /** An aggregate relationship */
  productGroups_aggregate: ProductGroupCampaign_Aggregate;
  /** An object relationship */
  publicData?: Maybe<Campaign>;
  start?: Maybe<Scalars['timestamptz']>;
  state?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};


/** columns and relationships of "view_campaign_private_vd" */
export type CampaignPrivateVdDataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "view_campaign_private_vd" */
export type CampaignPrivateVdOrdersArgs = {
  distinct_on?: Maybe<Array<OrderCampaign_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrderCampaign_Order_By>>;
  where?: Maybe<OrderCampaign_Bool_Exp>;
};


/** columns and relationships of "view_campaign_private_vd" */
export type CampaignPrivateVdOrders_AggregateArgs = {
  distinct_on?: Maybe<Array<OrderCampaign_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrderCampaign_Order_By>>;
  where?: Maybe<OrderCampaign_Bool_Exp>;
};


/** columns and relationships of "view_campaign_private_vd" */
export type CampaignPrivateVdOriginDataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "view_campaign_private_vd" */
export type CampaignPrivateVdProductGroupsArgs = {
  distinct_on?: Maybe<Array<ProductGroupCampaign_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductGroupCampaign_Order_By>>;
  where?: Maybe<ProductGroupCampaign_Bool_Exp>;
};


/** columns and relationships of "view_campaign_private_vd" */
export type CampaignPrivateVdProductGroups_AggregateArgs = {
  distinct_on?: Maybe<Array<ProductGroupCampaign_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductGroupCampaign_Order_By>>;
  where?: Maybe<ProductGroupCampaign_Bool_Exp>;
};

/** aggregated selection of "view_campaign_private_vd" */
export type CampaignPrivateVd_Aggregate = {
  __typename?: 'campaignPrivateVd_aggregate';
  aggregate?: Maybe<CampaignPrivateVd_Aggregate_Fields>;
  nodes: Array<CampaignPrivateVd>;
};

/** aggregate fields of "view_campaign_private_vd" */
export type CampaignPrivateVd_Aggregate_Fields = {
  __typename?: 'campaignPrivateVd_aggregate_fields';
  avg?: Maybe<CampaignPrivateVd_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<CampaignPrivateVd_Max_Fields>;
  min?: Maybe<CampaignPrivateVd_Min_Fields>;
  stddev?: Maybe<CampaignPrivateVd_Stddev_Fields>;
  stddev_pop?: Maybe<CampaignPrivateVd_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<CampaignPrivateVd_Stddev_Samp_Fields>;
  sum?: Maybe<CampaignPrivateVd_Sum_Fields>;
  var_pop?: Maybe<CampaignPrivateVd_Var_Pop_Fields>;
  var_samp?: Maybe<CampaignPrivateVd_Var_Samp_Fields>;
  variance?: Maybe<CampaignPrivateVd_Variance_Fields>;
};


/** aggregate fields of "view_campaign_private_vd" */
export type CampaignPrivateVd_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<CampaignPrivateVd_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type CampaignPrivateVd_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
  originData?: Maybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type CampaignPrivateVd_Avg_Fields = {
  __typename?: 'campaignPrivateVd_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "view_campaign_private_vd". All fields are combined with a logical 'AND'. */
export type CampaignPrivateVd_Bool_Exp = {
  _and?: Maybe<Array<CampaignPrivateVd_Bool_Exp>>;
  _not?: Maybe<CampaignPrivateVd_Bool_Exp>;
  _or?: Maybe<Array<CampaignPrivateVd_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  description?: Maybe<String_Comparison_Exp>;
  durationType?: Maybe<String_Comparison_Exp>;
  end?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  nameEn?: Maybe<String_Comparison_Exp>;
  newIn?: Maybe<Boolean_Comparison_Exp>;
  orders?: Maybe<OrderCampaign_Bool_Exp>;
  originData?: Maybe<Jsonb_Comparison_Exp>;
  prDescription?: Maybe<String_Comparison_Exp>;
  prTitle?: Maybe<String_Comparison_Exp>;
  productGroups?: Maybe<ProductGroupCampaign_Bool_Exp>;
  publicData?: Maybe<Campaign_Bool_Exp>;
  start?: Maybe<Timestamptz_Comparison_Exp>;
  state?: Maybe<String_Comparison_Exp>;
  type?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type CampaignPrivateVd_Delete_At_Path_Input = {
  data?: Maybe<Array<Scalars['String']>>;
  originData?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type CampaignPrivateVd_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
  originData?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type CampaignPrivateVd_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
  originData?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "view_campaign_private_vd" */
export type CampaignPrivateVd_Inc_Input = {
  id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "view_campaign_private_vd" */
export type CampaignPrivateVd_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  durationType?: Maybe<Scalars['String']>;
  end?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  newIn?: Maybe<Scalars['Boolean']>;
  orders?: Maybe<OrderCampaign_Arr_Rel_Insert_Input>;
  originData?: Maybe<Scalars['jsonb']>;
  prDescription?: Maybe<Scalars['String']>;
  prTitle?: Maybe<Scalars['String']>;
  productGroups?: Maybe<ProductGroupCampaign_Arr_Rel_Insert_Input>;
  publicData?: Maybe<Campaign_Obj_Rel_Insert_Input>;
  start?: Maybe<Scalars['timestamptz']>;
  state?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type CampaignPrivateVd_Max_Fields = {
  __typename?: 'campaignPrivateVd_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  durationType?: Maybe<Scalars['String']>;
  end?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  prDescription?: Maybe<Scalars['String']>;
  prTitle?: Maybe<Scalars['String']>;
  start?: Maybe<Scalars['timestamptz']>;
  state?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type CampaignPrivateVd_Min_Fields = {
  __typename?: 'campaignPrivateVd_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  durationType?: Maybe<Scalars['String']>;
  end?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  prDescription?: Maybe<Scalars['String']>;
  prTitle?: Maybe<Scalars['String']>;
  start?: Maybe<Scalars['timestamptz']>;
  state?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "view_campaign_private_vd" */
export type CampaignPrivateVd_Mutation_Response = {
  __typename?: 'campaignPrivateVd_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<CampaignPrivateVd>;
};

/** input type for inserting object relation for remote table "view_campaign_private_vd" */
export type CampaignPrivateVd_Obj_Rel_Insert_Input = {
  data: CampaignPrivateVd_Insert_Input;
};

/** Ordering options when selecting data from "view_campaign_private_vd". */
export type CampaignPrivateVd_Order_By = {
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  description?: Maybe<Order_By>;
  durationType?: Maybe<Order_By>;
  end?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  nameEn?: Maybe<Order_By>;
  newIn?: Maybe<Order_By>;
  orders_aggregate?: Maybe<OrderCampaign_Aggregate_Order_By>;
  originData?: Maybe<Order_By>;
  prDescription?: Maybe<Order_By>;
  prTitle?: Maybe<Order_By>;
  productGroups_aggregate?: Maybe<ProductGroupCampaign_Aggregate_Order_By>;
  publicData?: Maybe<Campaign_Order_By>;
  start?: Maybe<Order_By>;
  state?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type CampaignPrivateVd_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
  originData?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "view_campaign_private_vd" */
export enum CampaignPrivateVd_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Description = 'description',
  /** column name */
  DurationType = 'durationType',
  /** column name */
  End = 'end',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  NameEn = 'nameEn',
  /** column name */
  NewIn = 'newIn',
  /** column name */
  OriginData = 'originData',
  /** column name */
  PrDescription = 'prDescription',
  /** column name */
  PrTitle = 'prTitle',
  /** column name */
  Start = 'start',
  /** column name */
  State = 'state',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "view_campaign_private_vd" */
export type CampaignPrivateVd_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  durationType?: Maybe<Scalars['String']>;
  end?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  newIn?: Maybe<Scalars['Boolean']>;
  originData?: Maybe<Scalars['jsonb']>;
  prDescription?: Maybe<Scalars['String']>;
  prTitle?: Maybe<Scalars['String']>;
  start?: Maybe<Scalars['timestamptz']>;
  state?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type CampaignPrivateVd_Stddev_Fields = {
  __typename?: 'campaignPrivateVd_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type CampaignPrivateVd_Stddev_Pop_Fields = {
  __typename?: 'campaignPrivateVd_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type CampaignPrivateVd_Stddev_Samp_Fields = {
  __typename?: 'campaignPrivateVd_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type CampaignPrivateVd_Sum_Fields = {
  __typename?: 'campaignPrivateVd_sum_fields';
  id?: Maybe<Scalars['bigint']>;
};

/** aggregate var_pop on columns */
export type CampaignPrivateVd_Var_Pop_Fields = {
  __typename?: 'campaignPrivateVd_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type CampaignPrivateVd_Var_Samp_Fields = {
  __typename?: 'campaignPrivateVd_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type CampaignPrivateVd_Variance_Fields = {
  __typename?: 'campaignPrivateVd_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregated selection of "tbl_campaign" */
export type Campaign_Aggregate = {
  __typename?: 'campaign_aggregate';
  aggregate?: Maybe<Campaign_Aggregate_Fields>;
  nodes: Array<Campaign>;
};

/** aggregate fields of "tbl_campaign" */
export type Campaign_Aggregate_Fields = {
  __typename?: 'campaign_aggregate_fields';
  avg?: Maybe<Campaign_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Campaign_Max_Fields>;
  min?: Maybe<Campaign_Min_Fields>;
  stddev?: Maybe<Campaign_Stddev_Fields>;
  stddev_pop?: Maybe<Campaign_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Campaign_Stddev_Samp_Fields>;
  sum?: Maybe<Campaign_Sum_Fields>;
  var_pop?: Maybe<Campaign_Var_Pop_Fields>;
  var_samp?: Maybe<Campaign_Var_Samp_Fields>;
  variance?: Maybe<Campaign_Variance_Fields>;
};


/** aggregate fields of "tbl_campaign" */
export type Campaign_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Campaign_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Campaign_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
  originData?: Maybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type Campaign_Avg_Fields = {
  __typename?: 'campaign_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "tbl_campaign". All fields are combined with a logical 'AND'. */
export type Campaign_Bool_Exp = {
  _and?: Maybe<Array<Campaign_Bool_Exp>>;
  _not?: Maybe<Campaign_Bool_Exp>;
  _or?: Maybe<Array<Campaign_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  description?: Maybe<String_Comparison_Exp>;
  durationType?: Maybe<String_Comparison_Exp>;
  end?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  nameEn?: Maybe<String_Comparison_Exp>;
  newIn?: Maybe<Boolean_Comparison_Exp>;
  orders?: Maybe<OrderCampaign_Bool_Exp>;
  originData?: Maybe<Jsonb_Comparison_Exp>;
  prDescription?: Maybe<String_Comparison_Exp>;
  prTitle?: Maybe<String_Comparison_Exp>;
  privateVd?: Maybe<CampaignPrivateVd_Bool_Exp>;
  productGroups?: Maybe<ProductGroupCampaign_Bool_Exp>;
  start?: Maybe<Timestamptz_Comparison_Exp>;
  state?: Maybe<String_Comparison_Exp>;
  type?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "tbl_campaign" */
export enum Campaign_Constraint {
  /** unique or primary key constraint */
  TblCampaignPkey = 'tbl_campaign_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Campaign_Delete_At_Path_Input = {
  data?: Maybe<Array<Scalars['String']>>;
  originData?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Campaign_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
  originData?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Campaign_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
  originData?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "tbl_campaign" */
export type Campaign_Inc_Input = {
  id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "tbl_campaign" */
export type Campaign_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  durationType?: Maybe<Scalars['String']>;
  end?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  newIn?: Maybe<Scalars['Boolean']>;
  orders?: Maybe<OrderCampaign_Arr_Rel_Insert_Input>;
  originData?: Maybe<Scalars['jsonb']>;
  prDescription?: Maybe<Scalars['String']>;
  prTitle?: Maybe<Scalars['String']>;
  privateVd?: Maybe<CampaignPrivateVd_Obj_Rel_Insert_Input>;
  productGroups?: Maybe<ProductGroupCampaign_Arr_Rel_Insert_Input>;
  start?: Maybe<Scalars['timestamptz']>;
  state?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Campaign_Max_Fields = {
  __typename?: 'campaign_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  durationType?: Maybe<Scalars['String']>;
  end?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  prDescription?: Maybe<Scalars['String']>;
  prTitle?: Maybe<Scalars['String']>;
  start?: Maybe<Scalars['timestamptz']>;
  state?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Campaign_Min_Fields = {
  __typename?: 'campaign_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  durationType?: Maybe<Scalars['String']>;
  end?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  prDescription?: Maybe<Scalars['String']>;
  prTitle?: Maybe<Scalars['String']>;
  start?: Maybe<Scalars['timestamptz']>;
  state?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "tbl_campaign" */
export type Campaign_Mutation_Response = {
  __typename?: 'campaign_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Campaign>;
};

/** input type for inserting object relation for remote table "tbl_campaign" */
export type Campaign_Obj_Rel_Insert_Input = {
  data: Campaign_Insert_Input;
  /** on conflict condition */
  on_conflict?: Maybe<Campaign_On_Conflict>;
};

/** on conflict condition type for table "tbl_campaign" */
export type Campaign_On_Conflict = {
  constraint: Campaign_Constraint;
  update_columns: Array<Campaign_Update_Column>;
  where?: Maybe<Campaign_Bool_Exp>;
};

/** Ordering options when selecting data from "tbl_campaign". */
export type Campaign_Order_By = {
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  description?: Maybe<Order_By>;
  durationType?: Maybe<Order_By>;
  end?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  nameEn?: Maybe<Order_By>;
  newIn?: Maybe<Order_By>;
  orders_aggregate?: Maybe<OrderCampaign_Aggregate_Order_By>;
  originData?: Maybe<Order_By>;
  prDescription?: Maybe<Order_By>;
  prTitle?: Maybe<Order_By>;
  privateVd?: Maybe<CampaignPrivateVd_Order_By>;
  productGroups_aggregate?: Maybe<ProductGroupCampaign_Aggregate_Order_By>;
  start?: Maybe<Order_By>;
  state?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: campaign */
export type Campaign_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Campaign_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
  originData?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "tbl_campaign" */
export enum Campaign_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Description = 'description',
  /** column name */
  DurationType = 'durationType',
  /** column name */
  End = 'end',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  NameEn = 'nameEn',
  /** column name */
  NewIn = 'newIn',
  /** column name */
  OriginData = 'originData',
  /** column name */
  PrDescription = 'prDescription',
  /** column name */
  PrTitle = 'prTitle',
  /** column name */
  Start = 'start',
  /** column name */
  State = 'state',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "tbl_campaign" */
export type Campaign_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  durationType?: Maybe<Scalars['String']>;
  end?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  newIn?: Maybe<Scalars['Boolean']>;
  originData?: Maybe<Scalars['jsonb']>;
  prDescription?: Maybe<Scalars['String']>;
  prTitle?: Maybe<Scalars['String']>;
  start?: Maybe<Scalars['timestamptz']>;
  state?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Campaign_Stddev_Fields = {
  __typename?: 'campaign_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Campaign_Stddev_Pop_Fields = {
  __typename?: 'campaign_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Campaign_Stddev_Samp_Fields = {
  __typename?: 'campaign_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Campaign_Sum_Fields = {
  __typename?: 'campaign_sum_fields';
  id?: Maybe<Scalars['bigint']>;
};

/** update columns of table "tbl_campaign" */
export enum Campaign_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Description = 'description',
  /** column name */
  DurationType = 'durationType',
  /** column name */
  End = 'end',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  NameEn = 'nameEn',
  /** column name */
  NewIn = 'newIn',
  /** column name */
  OriginData = 'originData',
  /** column name */
  PrDescription = 'prDescription',
  /** column name */
  PrTitle = 'prTitle',
  /** column name */
  Start = 'start',
  /** column name */
  State = 'state',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Campaign_Var_Pop_Fields = {
  __typename?: 'campaign_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Campaign_Var_Samp_Fields = {
  __typename?: 'campaign_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Campaign_Variance_Fields = {
  __typename?: 'campaign_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "mn_cart_product" */
export type CartProduct = {
  __typename?: 'cartProduct';
  assignedQuantity?: Maybe<Scalars['Int']>;
  /** An object relationship */
  cart: BrowserSession;
  cart_id?: Maybe<Scalars['bigint']>;
  created_at: Scalars['timestamptz'];
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id: Scalars['bigint'];
  price?: Maybe<Scalars['Int']>;
  /** An object relationship */
  privateVd?: Maybe<CartProductPrivateVd>;
  /** An object relationship */
  product: Product;
  product_id?: Maybe<Scalars['bigint']>;
  quantity?: Maybe<Scalars['Int']>;
  subtotal?: Maybe<Scalars['Int']>;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "mn_cart_product" */
export type CartProductDataArgs = {
  path?: Maybe<Scalars['String']>;
};

/** columns and relationships of "view_cart_product_private_vd" */
export type CartProductPrivateVd = {
  __typename?: 'cartProductPrivateVd';
  assignedQuantity?: Maybe<Scalars['Int']>;
  /** An object relationship */
  cart?: Maybe<BrowserSession>;
  cart_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  /** An object relationship */
  product?: Maybe<Product>;
  product_id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  publicData?: Maybe<CartProduct>;
  quantity?: Maybe<Scalars['Int']>;
  subtotal?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};


/** columns and relationships of "view_cart_product_private_vd" */
export type CartProductPrivateVdDataArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "view_cart_product_private_vd" */
export type CartProductPrivateVd_Aggregate = {
  __typename?: 'cartProductPrivateVd_aggregate';
  aggregate?: Maybe<CartProductPrivateVd_Aggregate_Fields>;
  nodes: Array<CartProductPrivateVd>;
};

/** aggregate fields of "view_cart_product_private_vd" */
export type CartProductPrivateVd_Aggregate_Fields = {
  __typename?: 'cartProductPrivateVd_aggregate_fields';
  avg?: Maybe<CartProductPrivateVd_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<CartProductPrivateVd_Max_Fields>;
  min?: Maybe<CartProductPrivateVd_Min_Fields>;
  stddev?: Maybe<CartProductPrivateVd_Stddev_Fields>;
  stddev_pop?: Maybe<CartProductPrivateVd_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<CartProductPrivateVd_Stddev_Samp_Fields>;
  sum?: Maybe<CartProductPrivateVd_Sum_Fields>;
  var_pop?: Maybe<CartProductPrivateVd_Var_Pop_Fields>;
  var_samp?: Maybe<CartProductPrivateVd_Var_Samp_Fields>;
  variance?: Maybe<CartProductPrivateVd_Variance_Fields>;
};


/** aggregate fields of "view_cart_product_private_vd" */
export type CartProductPrivateVd_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<CartProductPrivateVd_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type CartProductPrivateVd_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type CartProductPrivateVd_Avg_Fields = {
  __typename?: 'cartProductPrivateVd_avg_fields';
  assignedQuantity?: Maybe<Scalars['Float']>;
  cart_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
  subtotal?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "view_cart_product_private_vd". All fields are combined with a logical 'AND'. */
export type CartProductPrivateVd_Bool_Exp = {
  _and?: Maybe<Array<CartProductPrivateVd_Bool_Exp>>;
  _not?: Maybe<CartProductPrivateVd_Bool_Exp>;
  _or?: Maybe<Array<CartProductPrivateVd_Bool_Exp>>;
  assignedQuantity?: Maybe<Int_Comparison_Exp>;
  cart?: Maybe<BrowserSession_Bool_Exp>;
  cart_id?: Maybe<Bigint_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  price?: Maybe<Int_Comparison_Exp>;
  product?: Maybe<Product_Bool_Exp>;
  product_id?: Maybe<Bigint_Comparison_Exp>;
  publicData?: Maybe<CartProduct_Bool_Exp>;
  quantity?: Maybe<Int_Comparison_Exp>;
  subtotal?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type CartProductPrivateVd_Delete_At_Path_Input = {
  data?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type CartProductPrivateVd_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type CartProductPrivateVd_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "view_cart_product_private_vd" */
export type CartProductPrivateVd_Inc_Input = {
  assignedQuantity?: Maybe<Scalars['Int']>;
  cart_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  product_id?: Maybe<Scalars['bigint']>;
  quantity?: Maybe<Scalars['Int']>;
  subtotal?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "view_cart_product_private_vd" */
export type CartProductPrivateVd_Insert_Input = {
  assignedQuantity?: Maybe<Scalars['Int']>;
  cart?: Maybe<BrowserSession_Obj_Rel_Insert_Input>;
  cart_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  product?: Maybe<Product_Obj_Rel_Insert_Input>;
  product_id?: Maybe<Scalars['bigint']>;
  publicData?: Maybe<CartProduct_Obj_Rel_Insert_Input>;
  quantity?: Maybe<Scalars['Int']>;
  subtotal?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type CartProductPrivateVd_Max_Fields = {
  __typename?: 'cartProductPrivateVd_max_fields';
  assignedQuantity?: Maybe<Scalars['Int']>;
  cart_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  product_id?: Maybe<Scalars['bigint']>;
  quantity?: Maybe<Scalars['Int']>;
  subtotal?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type CartProductPrivateVd_Min_Fields = {
  __typename?: 'cartProductPrivateVd_min_fields';
  assignedQuantity?: Maybe<Scalars['Int']>;
  cart_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  product_id?: Maybe<Scalars['bigint']>;
  quantity?: Maybe<Scalars['Int']>;
  subtotal?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "view_cart_product_private_vd" */
export type CartProductPrivateVd_Mutation_Response = {
  __typename?: 'cartProductPrivateVd_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<CartProductPrivateVd>;
};

/** input type for inserting object relation for remote table "view_cart_product_private_vd" */
export type CartProductPrivateVd_Obj_Rel_Insert_Input = {
  data: CartProductPrivateVd_Insert_Input;
};

/** Ordering options when selecting data from "view_cart_product_private_vd". */
export type CartProductPrivateVd_Order_By = {
  assignedQuantity?: Maybe<Order_By>;
  cart?: Maybe<BrowserSession_Order_By>;
  cart_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  product?: Maybe<Product_Order_By>;
  product_id?: Maybe<Order_By>;
  publicData?: Maybe<CartProduct_Order_By>;
  quantity?: Maybe<Order_By>;
  subtotal?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type CartProductPrivateVd_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "view_cart_product_private_vd" */
export enum CartProductPrivateVd_Select_Column {
  /** column name */
  AssignedQuantity = 'assignedQuantity',
  /** column name */
  CartId = 'cart_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  Price = 'price',
  /** column name */
  ProductId = 'product_id',
  /** column name */
  Quantity = 'quantity',
  /** column name */
  Subtotal = 'subtotal',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "view_cart_product_private_vd" */
export type CartProductPrivateVd_Set_Input = {
  assignedQuantity?: Maybe<Scalars['Int']>;
  cart_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  product_id?: Maybe<Scalars['bigint']>;
  quantity?: Maybe<Scalars['Int']>;
  subtotal?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type CartProductPrivateVd_Stddev_Fields = {
  __typename?: 'cartProductPrivateVd_stddev_fields';
  assignedQuantity?: Maybe<Scalars['Float']>;
  cart_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
  subtotal?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type CartProductPrivateVd_Stddev_Pop_Fields = {
  __typename?: 'cartProductPrivateVd_stddev_pop_fields';
  assignedQuantity?: Maybe<Scalars['Float']>;
  cart_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
  subtotal?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type CartProductPrivateVd_Stddev_Samp_Fields = {
  __typename?: 'cartProductPrivateVd_stddev_samp_fields';
  assignedQuantity?: Maybe<Scalars['Float']>;
  cart_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
  subtotal?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type CartProductPrivateVd_Sum_Fields = {
  __typename?: 'cartProductPrivateVd_sum_fields';
  assignedQuantity?: Maybe<Scalars['Int']>;
  cart_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  product_id?: Maybe<Scalars['bigint']>;
  quantity?: Maybe<Scalars['Int']>;
  subtotal?: Maybe<Scalars['Int']>;
};

/** aggregate var_pop on columns */
export type CartProductPrivateVd_Var_Pop_Fields = {
  __typename?: 'cartProductPrivateVd_var_pop_fields';
  assignedQuantity?: Maybe<Scalars['Float']>;
  cart_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
  subtotal?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type CartProductPrivateVd_Var_Samp_Fields = {
  __typename?: 'cartProductPrivateVd_var_samp_fields';
  assignedQuantity?: Maybe<Scalars['Float']>;
  cart_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
  subtotal?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type CartProductPrivateVd_Variance_Fields = {
  __typename?: 'cartProductPrivateVd_variance_fields';
  assignedQuantity?: Maybe<Scalars['Float']>;
  cart_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
  subtotal?: Maybe<Scalars['Float']>;
};

/** aggregated selection of "mn_cart_product" */
export type CartProduct_Aggregate = {
  __typename?: 'cartProduct_aggregate';
  aggregate?: Maybe<CartProduct_Aggregate_Fields>;
  nodes: Array<CartProduct>;
};

/** aggregate fields of "mn_cart_product" */
export type CartProduct_Aggregate_Fields = {
  __typename?: 'cartProduct_aggregate_fields';
  avg?: Maybe<CartProduct_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<CartProduct_Max_Fields>;
  min?: Maybe<CartProduct_Min_Fields>;
  stddev?: Maybe<CartProduct_Stddev_Fields>;
  stddev_pop?: Maybe<CartProduct_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<CartProduct_Stddev_Samp_Fields>;
  sum?: Maybe<CartProduct_Sum_Fields>;
  var_pop?: Maybe<CartProduct_Var_Pop_Fields>;
  var_samp?: Maybe<CartProduct_Var_Samp_Fields>;
  variance?: Maybe<CartProduct_Variance_Fields>;
};


/** aggregate fields of "mn_cart_product" */
export type CartProduct_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<CartProduct_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "mn_cart_product" */
export type CartProduct_Aggregate_Order_By = {
  avg?: Maybe<CartProduct_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<CartProduct_Max_Order_By>;
  min?: Maybe<CartProduct_Min_Order_By>;
  stddev?: Maybe<CartProduct_Stddev_Order_By>;
  stddev_pop?: Maybe<CartProduct_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<CartProduct_Stddev_Samp_Order_By>;
  sum?: Maybe<CartProduct_Sum_Order_By>;
  var_pop?: Maybe<CartProduct_Var_Pop_Order_By>;
  var_samp?: Maybe<CartProduct_Var_Samp_Order_By>;
  variance?: Maybe<CartProduct_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type CartProduct_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "mn_cart_product" */
export type CartProduct_Arr_Rel_Insert_Input = {
  data: Array<CartProduct_Insert_Input>;
  /** on conflict condition */
  on_conflict?: Maybe<CartProduct_On_Conflict>;
};

/** aggregate avg on columns */
export type CartProduct_Avg_Fields = {
  __typename?: 'cartProduct_avg_fields';
  assignedQuantity?: Maybe<Scalars['Float']>;
  cart_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
  subtotal?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "mn_cart_product" */
export type CartProduct_Avg_Order_By = {
  assignedQuantity?: Maybe<Order_By>;
  cart_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
  quantity?: Maybe<Order_By>;
  subtotal?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "mn_cart_product". All fields are combined with a logical 'AND'. */
export type CartProduct_Bool_Exp = {
  _and?: Maybe<Array<CartProduct_Bool_Exp>>;
  _not?: Maybe<CartProduct_Bool_Exp>;
  _or?: Maybe<Array<CartProduct_Bool_Exp>>;
  assignedQuantity?: Maybe<Int_Comparison_Exp>;
  cart?: Maybe<BrowserSession_Bool_Exp>;
  cart_id?: Maybe<Bigint_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  price?: Maybe<Int_Comparison_Exp>;
  privateVd?: Maybe<CartProductPrivateVd_Bool_Exp>;
  product?: Maybe<Product_Bool_Exp>;
  product_id?: Maybe<Bigint_Comparison_Exp>;
  quantity?: Maybe<Int_Comparison_Exp>;
  subtotal?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "mn_cart_product" */
export enum CartProduct_Constraint {
  /** unique or primary key constraint */
  CartProductUniqueness = 'cart_product_uniqueness',
  /** unique or primary key constraint */
  MnCartProductPkey = 'mn_cart_product_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type CartProduct_Delete_At_Path_Input = {
  data?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type CartProduct_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type CartProduct_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "mn_cart_product" */
export type CartProduct_Inc_Input = {
  assignedQuantity?: Maybe<Scalars['Int']>;
  cart_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  product_id?: Maybe<Scalars['bigint']>;
  quantity?: Maybe<Scalars['Int']>;
  subtotal?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "mn_cart_product" */
export type CartProduct_Insert_Input = {
  assignedQuantity?: Maybe<Scalars['Int']>;
  cart?: Maybe<BrowserSession_Obj_Rel_Insert_Input>;
  cart_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  privateVd?: Maybe<CartProductPrivateVd_Obj_Rel_Insert_Input>;
  product?: Maybe<Product_Obj_Rel_Insert_Input>;
  product_id?: Maybe<Scalars['bigint']>;
  quantity?: Maybe<Scalars['Int']>;
  subtotal?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type CartProduct_Max_Fields = {
  __typename?: 'cartProduct_max_fields';
  assignedQuantity?: Maybe<Scalars['Int']>;
  cart_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  product_id?: Maybe<Scalars['bigint']>;
  quantity?: Maybe<Scalars['Int']>;
  subtotal?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "mn_cart_product" */
export type CartProduct_Max_Order_By = {
  assignedQuantity?: Maybe<Order_By>;
  cart_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
  quantity?: Maybe<Order_By>;
  subtotal?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type CartProduct_Min_Fields = {
  __typename?: 'cartProduct_min_fields';
  assignedQuantity?: Maybe<Scalars['Int']>;
  cart_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  product_id?: Maybe<Scalars['bigint']>;
  quantity?: Maybe<Scalars['Int']>;
  subtotal?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "mn_cart_product" */
export type CartProduct_Min_Order_By = {
  assignedQuantity?: Maybe<Order_By>;
  cart_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
  quantity?: Maybe<Order_By>;
  subtotal?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "mn_cart_product" */
export type CartProduct_Mutation_Response = {
  __typename?: 'cartProduct_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<CartProduct>;
};

/** input type for inserting object relation for remote table "mn_cart_product" */
export type CartProduct_Obj_Rel_Insert_Input = {
  data: CartProduct_Insert_Input;
  /** on conflict condition */
  on_conflict?: Maybe<CartProduct_On_Conflict>;
};

/** on conflict condition type for table "mn_cart_product" */
export type CartProduct_On_Conflict = {
  constraint: CartProduct_Constraint;
  update_columns: Array<CartProduct_Update_Column>;
  where?: Maybe<CartProduct_Bool_Exp>;
};

/** Ordering options when selecting data from "mn_cart_product". */
export type CartProduct_Order_By = {
  assignedQuantity?: Maybe<Order_By>;
  cart?: Maybe<BrowserSession_Order_By>;
  cart_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  privateVd?: Maybe<CartProductPrivateVd_Order_By>;
  product?: Maybe<Product_Order_By>;
  product_id?: Maybe<Order_By>;
  quantity?: Maybe<Order_By>;
  subtotal?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: cartProduct */
export type CartProduct_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type CartProduct_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "mn_cart_product" */
export enum CartProduct_Select_Column {
  /** column name */
  AssignedQuantity = 'assignedQuantity',
  /** column name */
  CartId = 'cart_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  Price = 'price',
  /** column name */
  ProductId = 'product_id',
  /** column name */
  Quantity = 'quantity',
  /** column name */
  Subtotal = 'subtotal',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "mn_cart_product" */
export type CartProduct_Set_Input = {
  assignedQuantity?: Maybe<Scalars['Int']>;
  cart_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  product_id?: Maybe<Scalars['bigint']>;
  quantity?: Maybe<Scalars['Int']>;
  subtotal?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type CartProduct_Stddev_Fields = {
  __typename?: 'cartProduct_stddev_fields';
  assignedQuantity?: Maybe<Scalars['Float']>;
  cart_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
  subtotal?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "mn_cart_product" */
export type CartProduct_Stddev_Order_By = {
  assignedQuantity?: Maybe<Order_By>;
  cart_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
  quantity?: Maybe<Order_By>;
  subtotal?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type CartProduct_Stddev_Pop_Fields = {
  __typename?: 'cartProduct_stddev_pop_fields';
  assignedQuantity?: Maybe<Scalars['Float']>;
  cart_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
  subtotal?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "mn_cart_product" */
export type CartProduct_Stddev_Pop_Order_By = {
  assignedQuantity?: Maybe<Order_By>;
  cart_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
  quantity?: Maybe<Order_By>;
  subtotal?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type CartProduct_Stddev_Samp_Fields = {
  __typename?: 'cartProduct_stddev_samp_fields';
  assignedQuantity?: Maybe<Scalars['Float']>;
  cart_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
  subtotal?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "mn_cart_product" */
export type CartProduct_Stddev_Samp_Order_By = {
  assignedQuantity?: Maybe<Order_By>;
  cart_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
  quantity?: Maybe<Order_By>;
  subtotal?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type CartProduct_Sum_Fields = {
  __typename?: 'cartProduct_sum_fields';
  assignedQuantity?: Maybe<Scalars['Int']>;
  cart_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  product_id?: Maybe<Scalars['bigint']>;
  quantity?: Maybe<Scalars['Int']>;
  subtotal?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "mn_cart_product" */
export type CartProduct_Sum_Order_By = {
  assignedQuantity?: Maybe<Order_By>;
  cart_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
  quantity?: Maybe<Order_By>;
  subtotal?: Maybe<Order_By>;
};

/** update columns of table "mn_cart_product" */
export enum CartProduct_Update_Column {
  /** column name */
  AssignedQuantity = 'assignedQuantity',
  /** column name */
  CartId = 'cart_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  Price = 'price',
  /** column name */
  ProductId = 'product_id',
  /** column name */
  Quantity = 'quantity',
  /** column name */
  Subtotal = 'subtotal',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type CartProduct_Var_Pop_Fields = {
  __typename?: 'cartProduct_var_pop_fields';
  assignedQuantity?: Maybe<Scalars['Float']>;
  cart_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
  subtotal?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "mn_cart_product" */
export type CartProduct_Var_Pop_Order_By = {
  assignedQuantity?: Maybe<Order_By>;
  cart_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
  quantity?: Maybe<Order_By>;
  subtotal?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type CartProduct_Var_Samp_Fields = {
  __typename?: 'cartProduct_var_samp_fields';
  assignedQuantity?: Maybe<Scalars['Float']>;
  cart_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
  subtotal?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "mn_cart_product" */
export type CartProduct_Var_Samp_Order_By = {
  assignedQuantity?: Maybe<Order_By>;
  cart_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
  quantity?: Maybe<Order_By>;
  subtotal?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type CartProduct_Variance_Fields = {
  __typename?: 'cartProduct_variance_fields';
  assignedQuantity?: Maybe<Scalars['Float']>;
  cart_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
  subtotal?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "mn_cart_product" */
export type CartProduct_Variance_Order_By = {
  assignedQuantity?: Maybe<Order_By>;
  cart_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
  quantity?: Maybe<Order_By>;
  subtotal?: Maybe<Order_By>;
};

/** columns and relationships of "tbl_contact_us_message" */
export type ContactUsMessage = {
  __typename?: 'contactUsMessage';
  /** An object relationship */
  assignee: User;
  assignee_id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  author: User;
  author_id?: Maybe<Scalars['bigint']>;
  created_at: Scalars['timestamptz'];
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id: Scalars['bigint'];
  message?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "tbl_contact_us_message" */
export type ContactUsMessageDataArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "tbl_contact_us_message" */
export type ContactUsMessage_Aggregate = {
  __typename?: 'contactUsMessage_aggregate';
  aggregate?: Maybe<ContactUsMessage_Aggregate_Fields>;
  nodes: Array<ContactUsMessage>;
};

/** aggregate fields of "tbl_contact_us_message" */
export type ContactUsMessage_Aggregate_Fields = {
  __typename?: 'contactUsMessage_aggregate_fields';
  avg?: Maybe<ContactUsMessage_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<ContactUsMessage_Max_Fields>;
  min?: Maybe<ContactUsMessage_Min_Fields>;
  stddev?: Maybe<ContactUsMessage_Stddev_Fields>;
  stddev_pop?: Maybe<ContactUsMessage_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ContactUsMessage_Stddev_Samp_Fields>;
  sum?: Maybe<ContactUsMessage_Sum_Fields>;
  var_pop?: Maybe<ContactUsMessage_Var_Pop_Fields>;
  var_samp?: Maybe<ContactUsMessage_Var_Samp_Fields>;
  variance?: Maybe<ContactUsMessage_Variance_Fields>;
};


/** aggregate fields of "tbl_contact_us_message" */
export type ContactUsMessage_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<ContactUsMessage_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "tbl_contact_us_message" */
export type ContactUsMessage_Aggregate_Order_By = {
  avg?: Maybe<ContactUsMessage_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<ContactUsMessage_Max_Order_By>;
  min?: Maybe<ContactUsMessage_Min_Order_By>;
  stddev?: Maybe<ContactUsMessage_Stddev_Order_By>;
  stddev_pop?: Maybe<ContactUsMessage_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<ContactUsMessage_Stddev_Samp_Order_By>;
  sum?: Maybe<ContactUsMessage_Sum_Order_By>;
  var_pop?: Maybe<ContactUsMessage_Var_Pop_Order_By>;
  var_samp?: Maybe<ContactUsMessage_Var_Samp_Order_By>;
  variance?: Maybe<ContactUsMessage_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type ContactUsMessage_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "tbl_contact_us_message" */
export type ContactUsMessage_Arr_Rel_Insert_Input = {
  data: Array<ContactUsMessage_Insert_Input>;
  /** on conflict condition */
  on_conflict?: Maybe<ContactUsMessage_On_Conflict>;
};

/** aggregate avg on columns */
export type ContactUsMessage_Avg_Fields = {
  __typename?: 'contactUsMessage_avg_fields';
  assignee_id?: Maybe<Scalars['Float']>;
  author_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "tbl_contact_us_message" */
export type ContactUsMessage_Avg_Order_By = {
  assignee_id?: Maybe<Order_By>;
  author_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "tbl_contact_us_message". All fields are combined with a logical 'AND'. */
export type ContactUsMessage_Bool_Exp = {
  _and?: Maybe<Array<ContactUsMessage_Bool_Exp>>;
  _not?: Maybe<ContactUsMessage_Bool_Exp>;
  _or?: Maybe<Array<ContactUsMessage_Bool_Exp>>;
  assignee?: Maybe<User_Bool_Exp>;
  assignee_id?: Maybe<Bigint_Comparison_Exp>;
  author?: Maybe<User_Bool_Exp>;
  author_id?: Maybe<Bigint_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  message?: Maybe<String_Comparison_Exp>;
  state?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "tbl_contact_us_message" */
export enum ContactUsMessage_Constraint {
  /** unique or primary key constraint */
  TblContactUsMessagePkey = 'tbl_contact_us_message_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type ContactUsMessage_Delete_At_Path_Input = {
  data?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type ContactUsMessage_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type ContactUsMessage_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "tbl_contact_us_message" */
export type ContactUsMessage_Inc_Input = {
  assignee_id?: Maybe<Scalars['bigint']>;
  author_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "tbl_contact_us_message" */
export type ContactUsMessage_Insert_Input = {
  assignee?: Maybe<User_Obj_Rel_Insert_Input>;
  assignee_id?: Maybe<Scalars['bigint']>;
  author?: Maybe<User_Obj_Rel_Insert_Input>;
  author_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  message?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type ContactUsMessage_Max_Fields = {
  __typename?: 'contactUsMessage_max_fields';
  assignee_id?: Maybe<Scalars['bigint']>;
  author_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  message?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "tbl_contact_us_message" */
export type ContactUsMessage_Max_Order_By = {
  assignee_id?: Maybe<Order_By>;
  author_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  message?: Maybe<Order_By>;
  state?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type ContactUsMessage_Min_Fields = {
  __typename?: 'contactUsMessage_min_fields';
  assignee_id?: Maybe<Scalars['bigint']>;
  author_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  message?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "tbl_contact_us_message" */
export type ContactUsMessage_Min_Order_By = {
  assignee_id?: Maybe<Order_By>;
  author_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  message?: Maybe<Order_By>;
  state?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "tbl_contact_us_message" */
export type ContactUsMessage_Mutation_Response = {
  __typename?: 'contactUsMessage_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<ContactUsMessage>;
};

/** on conflict condition type for table "tbl_contact_us_message" */
export type ContactUsMessage_On_Conflict = {
  constraint: ContactUsMessage_Constraint;
  update_columns: Array<ContactUsMessage_Update_Column>;
  where?: Maybe<ContactUsMessage_Bool_Exp>;
};

/** Ordering options when selecting data from "tbl_contact_us_message". */
export type ContactUsMessage_Order_By = {
  assignee?: Maybe<User_Order_By>;
  assignee_id?: Maybe<Order_By>;
  author?: Maybe<User_Order_By>;
  author_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  message?: Maybe<Order_By>;
  state?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: contactUsMessage */
export type ContactUsMessage_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type ContactUsMessage_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "tbl_contact_us_message" */
export enum ContactUsMessage_Select_Column {
  /** column name */
  AssigneeId = 'assignee_id',
  /** column name */
  AuthorId = 'author_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  Message = 'message',
  /** column name */
  State = 'state',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "tbl_contact_us_message" */
export type ContactUsMessage_Set_Input = {
  assignee_id?: Maybe<Scalars['bigint']>;
  author_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  message?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type ContactUsMessage_Stddev_Fields = {
  __typename?: 'contactUsMessage_stddev_fields';
  assignee_id?: Maybe<Scalars['Float']>;
  author_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "tbl_contact_us_message" */
export type ContactUsMessage_Stddev_Order_By = {
  assignee_id?: Maybe<Order_By>;
  author_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type ContactUsMessage_Stddev_Pop_Fields = {
  __typename?: 'contactUsMessage_stddev_pop_fields';
  assignee_id?: Maybe<Scalars['Float']>;
  author_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "tbl_contact_us_message" */
export type ContactUsMessage_Stddev_Pop_Order_By = {
  assignee_id?: Maybe<Order_By>;
  author_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type ContactUsMessage_Stddev_Samp_Fields = {
  __typename?: 'contactUsMessage_stddev_samp_fields';
  assignee_id?: Maybe<Scalars['Float']>;
  author_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "tbl_contact_us_message" */
export type ContactUsMessage_Stddev_Samp_Order_By = {
  assignee_id?: Maybe<Order_By>;
  author_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type ContactUsMessage_Sum_Fields = {
  __typename?: 'contactUsMessage_sum_fields';
  assignee_id?: Maybe<Scalars['bigint']>;
  author_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "tbl_contact_us_message" */
export type ContactUsMessage_Sum_Order_By = {
  assignee_id?: Maybe<Order_By>;
  author_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** update columns of table "tbl_contact_us_message" */
export enum ContactUsMessage_Update_Column {
  /** column name */
  AssigneeId = 'assignee_id',
  /** column name */
  AuthorId = 'author_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  Message = 'message',
  /** column name */
  State = 'state',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type ContactUsMessage_Var_Pop_Fields = {
  __typename?: 'contactUsMessage_var_pop_fields';
  assignee_id?: Maybe<Scalars['Float']>;
  author_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "tbl_contact_us_message" */
export type ContactUsMessage_Var_Pop_Order_By = {
  assignee_id?: Maybe<Order_By>;
  author_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type ContactUsMessage_Var_Samp_Fields = {
  __typename?: 'contactUsMessage_var_samp_fields';
  assignee_id?: Maybe<Scalars['Float']>;
  author_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "tbl_contact_us_message" */
export type ContactUsMessage_Var_Samp_Order_By = {
  assignee_id?: Maybe<Order_By>;
  author_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type ContactUsMessage_Variance_Fields = {
  __typename?: 'contactUsMessage_variance_fields';
  assignee_id?: Maybe<Scalars['Float']>;
  author_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "tbl_contact_us_message" */
export type ContactUsMessage_Variance_Order_By = {
  assignee_id?: Maybe<Order_By>;
  author_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** columns and relationships of "tbl_coupon" */
export type Coupon = {
  __typename?: 'coupon';
  /** An object relationship */
  adminUser: User;
  admin_user_id?: Maybe<Scalars['bigint']>;
  /** An array relationship */
  couponRecord: Array<CouponRecord>;
  /** An aggregate relationship */
  couponRecord_aggregate: CouponRecord_Aggregate;
  created_at: Scalars['timestamptz'];
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id: Scalars['bigint'];
  isDeduct?: Maybe<Scalars['Boolean']>;
  memo?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['Int']>;
  /** An object relationship */
  privateVd?: Maybe<CouponPrivateVd>;
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user: User;
  user_id?: Maybe<Scalars['bigint']>;
};


/** columns and relationships of "tbl_coupon" */
export type CouponCouponRecordArgs = {
  distinct_on?: Maybe<Array<CouponRecord_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<CouponRecord_Order_By>>;
  where?: Maybe<CouponRecord_Bool_Exp>;
};


/** columns and relationships of "tbl_coupon" */
export type CouponCouponRecord_AggregateArgs = {
  distinct_on?: Maybe<Array<CouponRecord_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<CouponRecord_Order_By>>;
  where?: Maybe<CouponRecord_Bool_Exp>;
};


/** columns and relationships of "tbl_coupon" */
export type CouponDataArgs = {
  path?: Maybe<Scalars['String']>;
};

/** columns and relationships of "view_coupon_private_vd" */
export type CouponPrivateVd = {
  __typename?: 'couponPrivateVd';
  /** An object relationship */
  adminUser?: Maybe<User>;
  admin_user_id?: Maybe<Scalars['bigint']>;
  /** An array relationship */
  couponRecord: Array<CouponRecord>;
  /** An aggregate relationship */
  couponRecord_aggregate: CouponRecord_Aggregate;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  isDeduct?: Maybe<Scalars['Boolean']>;
  memo?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['Int']>;
  /** An object relationship */
  publicData?: Maybe<Coupon>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  user?: Maybe<User>;
  user_id?: Maybe<Scalars['bigint']>;
};


/** columns and relationships of "view_coupon_private_vd" */
export type CouponPrivateVdCouponRecordArgs = {
  distinct_on?: Maybe<Array<CouponRecord_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<CouponRecord_Order_By>>;
  where?: Maybe<CouponRecord_Bool_Exp>;
};


/** columns and relationships of "view_coupon_private_vd" */
export type CouponPrivateVdCouponRecord_AggregateArgs = {
  distinct_on?: Maybe<Array<CouponRecord_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<CouponRecord_Order_By>>;
  where?: Maybe<CouponRecord_Bool_Exp>;
};


/** columns and relationships of "view_coupon_private_vd" */
export type CouponPrivateVdDataArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "view_coupon_private_vd" */
export type CouponPrivateVd_Aggregate = {
  __typename?: 'couponPrivateVd_aggregate';
  aggregate?: Maybe<CouponPrivateVd_Aggregate_Fields>;
  nodes: Array<CouponPrivateVd>;
};

/** aggregate fields of "view_coupon_private_vd" */
export type CouponPrivateVd_Aggregate_Fields = {
  __typename?: 'couponPrivateVd_aggregate_fields';
  avg?: Maybe<CouponPrivateVd_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<CouponPrivateVd_Max_Fields>;
  min?: Maybe<CouponPrivateVd_Min_Fields>;
  stddev?: Maybe<CouponPrivateVd_Stddev_Fields>;
  stddev_pop?: Maybe<CouponPrivateVd_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<CouponPrivateVd_Stddev_Samp_Fields>;
  sum?: Maybe<CouponPrivateVd_Sum_Fields>;
  var_pop?: Maybe<CouponPrivateVd_Var_Pop_Fields>;
  var_samp?: Maybe<CouponPrivateVd_Var_Samp_Fields>;
  variance?: Maybe<CouponPrivateVd_Variance_Fields>;
};


/** aggregate fields of "view_coupon_private_vd" */
export type CouponPrivateVd_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<CouponPrivateVd_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type CouponPrivateVd_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type CouponPrivateVd_Avg_Fields = {
  __typename?: 'couponPrivateVd_avg_fields';
  admin_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "view_coupon_private_vd". All fields are combined with a logical 'AND'. */
export type CouponPrivateVd_Bool_Exp = {
  _and?: Maybe<Array<CouponPrivateVd_Bool_Exp>>;
  _not?: Maybe<CouponPrivateVd_Bool_Exp>;
  _or?: Maybe<Array<CouponPrivateVd_Bool_Exp>>;
  adminUser?: Maybe<User_Bool_Exp>;
  admin_user_id?: Maybe<Bigint_Comparison_Exp>;
  couponRecord?: Maybe<CouponRecord_Bool_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  isDeduct?: Maybe<Boolean_Comparison_Exp>;
  memo?: Maybe<String_Comparison_Exp>;
  price?: Maybe<Int_Comparison_Exp>;
  publicData?: Maybe<Coupon_Bool_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<User_Bool_Exp>;
  user_id?: Maybe<Bigint_Comparison_Exp>;
};

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type CouponPrivateVd_Delete_At_Path_Input = {
  data?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type CouponPrivateVd_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type CouponPrivateVd_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "view_coupon_private_vd" */
export type CouponPrivateVd_Inc_Input = {
  admin_user_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "view_coupon_private_vd" */
export type CouponPrivateVd_Insert_Input = {
  adminUser?: Maybe<User_Obj_Rel_Insert_Input>;
  admin_user_id?: Maybe<Scalars['bigint']>;
  couponRecord?: Maybe<CouponRecord_Arr_Rel_Insert_Input>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  isDeduct?: Maybe<Scalars['Boolean']>;
  memo?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['Int']>;
  publicData?: Maybe<Coupon_Obj_Rel_Insert_Input>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<User_Obj_Rel_Insert_Input>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate max on columns */
export type CouponPrivateVd_Max_Fields = {
  __typename?: 'couponPrivateVd_max_fields';
  admin_user_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  memo?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate min on columns */
export type CouponPrivateVd_Min_Fields = {
  __typename?: 'couponPrivateVd_min_fields';
  admin_user_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  memo?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** response of any mutation on the table "view_coupon_private_vd" */
export type CouponPrivateVd_Mutation_Response = {
  __typename?: 'couponPrivateVd_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<CouponPrivateVd>;
};

/** input type for inserting object relation for remote table "view_coupon_private_vd" */
export type CouponPrivateVd_Obj_Rel_Insert_Input = {
  data: CouponPrivateVd_Insert_Input;
};

/** Ordering options when selecting data from "view_coupon_private_vd". */
export type CouponPrivateVd_Order_By = {
  adminUser?: Maybe<User_Order_By>;
  admin_user_id?: Maybe<Order_By>;
  couponRecord_aggregate?: Maybe<CouponRecord_Aggregate_Order_By>;
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  isDeduct?: Maybe<Order_By>;
  memo?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  publicData?: Maybe<Coupon_Order_By>;
  updated_at?: Maybe<Order_By>;
  user?: Maybe<User_Order_By>;
  user_id?: Maybe<Order_By>;
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type CouponPrivateVd_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "view_coupon_private_vd" */
export enum CouponPrivateVd_Select_Column {
  /** column name */
  AdminUserId = 'admin_user_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  IsDeduct = 'isDeduct',
  /** column name */
  Memo = 'memo',
  /** column name */
  Price = 'price',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "view_coupon_private_vd" */
export type CouponPrivateVd_Set_Input = {
  admin_user_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  isDeduct?: Maybe<Scalars['Boolean']>;
  memo?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate stddev on columns */
export type CouponPrivateVd_Stddev_Fields = {
  __typename?: 'couponPrivateVd_stddev_fields';
  admin_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type CouponPrivateVd_Stddev_Pop_Fields = {
  __typename?: 'couponPrivateVd_stddev_pop_fields';
  admin_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type CouponPrivateVd_Stddev_Samp_Fields = {
  __typename?: 'couponPrivateVd_stddev_samp_fields';
  admin_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type CouponPrivateVd_Sum_Fields = {
  __typename?: 'couponPrivateVd_sum_fields';
  admin_user_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate var_pop on columns */
export type CouponPrivateVd_Var_Pop_Fields = {
  __typename?: 'couponPrivateVd_var_pop_fields';
  admin_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type CouponPrivateVd_Var_Samp_Fields = {
  __typename?: 'couponPrivateVd_var_samp_fields';
  admin_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type CouponPrivateVd_Variance_Fields = {
  __typename?: 'couponPrivateVd_variance_fields';
  admin_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "tbl_coupon_record" */
export type CouponRecord = {
  __typename?: 'couponRecord';
  action?: Maybe<Scalars['String']>;
  /** An object relationship */
  byCoupon: Coupon;
  /** An object relationship */
  byOrder: Order;
  coupon_id?: Maybe<Scalars['bigint']>;
  created_at: Scalars['timestamptz'];
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id: Scalars['bigint'];
  order_id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  /** An object relationship */
  privateVd?: Maybe<CouponRecordPrivateVd>;
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user: User;
  user_id?: Maybe<Scalars['bigint']>;
};


/** columns and relationships of "tbl_coupon_record" */
export type CouponRecordDataArgs = {
  path?: Maybe<Scalars['String']>;
};

/** columns and relationships of "view_coupon_record_private_vd" */
export type CouponRecordPrivateVd = {
  __typename?: 'couponRecordPrivateVd';
  action?: Maybe<Scalars['String']>;
  /** An object relationship */
  byCoupon?: Maybe<Coupon>;
  /** An object relationship */
  byOrder?: Maybe<Order>;
  coupon_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  order_id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  /** An object relationship */
  publicData?: Maybe<CouponRecord>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  user?: Maybe<User>;
  user_id?: Maybe<Scalars['bigint']>;
};


/** columns and relationships of "view_coupon_record_private_vd" */
export type CouponRecordPrivateVdDataArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "view_coupon_record_private_vd" */
export type CouponRecordPrivateVd_Aggregate = {
  __typename?: 'couponRecordPrivateVd_aggregate';
  aggregate?: Maybe<CouponRecordPrivateVd_Aggregate_Fields>;
  nodes: Array<CouponRecordPrivateVd>;
};

/** aggregate fields of "view_coupon_record_private_vd" */
export type CouponRecordPrivateVd_Aggregate_Fields = {
  __typename?: 'couponRecordPrivateVd_aggregate_fields';
  avg?: Maybe<CouponRecordPrivateVd_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<CouponRecordPrivateVd_Max_Fields>;
  min?: Maybe<CouponRecordPrivateVd_Min_Fields>;
  stddev?: Maybe<CouponRecordPrivateVd_Stddev_Fields>;
  stddev_pop?: Maybe<CouponRecordPrivateVd_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<CouponRecordPrivateVd_Stddev_Samp_Fields>;
  sum?: Maybe<CouponRecordPrivateVd_Sum_Fields>;
  var_pop?: Maybe<CouponRecordPrivateVd_Var_Pop_Fields>;
  var_samp?: Maybe<CouponRecordPrivateVd_Var_Samp_Fields>;
  variance?: Maybe<CouponRecordPrivateVd_Variance_Fields>;
};


/** aggregate fields of "view_coupon_record_private_vd" */
export type CouponRecordPrivateVd_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<CouponRecordPrivateVd_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type CouponRecordPrivateVd_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type CouponRecordPrivateVd_Avg_Fields = {
  __typename?: 'couponRecordPrivateVd_avg_fields';
  coupon_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "view_coupon_record_private_vd". All fields are combined with a logical 'AND'. */
export type CouponRecordPrivateVd_Bool_Exp = {
  _and?: Maybe<Array<CouponRecordPrivateVd_Bool_Exp>>;
  _not?: Maybe<CouponRecordPrivateVd_Bool_Exp>;
  _or?: Maybe<Array<CouponRecordPrivateVd_Bool_Exp>>;
  action?: Maybe<String_Comparison_Exp>;
  byCoupon?: Maybe<Coupon_Bool_Exp>;
  byOrder?: Maybe<Order_Bool_Exp>;
  coupon_id?: Maybe<Bigint_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  order_id?: Maybe<Bigint_Comparison_Exp>;
  price?: Maybe<Int_Comparison_Exp>;
  publicData?: Maybe<CouponRecord_Bool_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<User_Bool_Exp>;
  user_id?: Maybe<Bigint_Comparison_Exp>;
};

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type CouponRecordPrivateVd_Delete_At_Path_Input = {
  data?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type CouponRecordPrivateVd_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type CouponRecordPrivateVd_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "view_coupon_record_private_vd" */
export type CouponRecordPrivateVd_Inc_Input = {
  coupon_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  order_id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "view_coupon_record_private_vd" */
export type CouponRecordPrivateVd_Insert_Input = {
  action?: Maybe<Scalars['String']>;
  byCoupon?: Maybe<Coupon_Obj_Rel_Insert_Input>;
  byOrder?: Maybe<Order_Obj_Rel_Insert_Input>;
  coupon_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  order_id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  publicData?: Maybe<CouponRecord_Obj_Rel_Insert_Input>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<User_Obj_Rel_Insert_Input>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate max on columns */
export type CouponRecordPrivateVd_Max_Fields = {
  __typename?: 'couponRecordPrivateVd_max_fields';
  action?: Maybe<Scalars['String']>;
  coupon_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  order_id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate min on columns */
export type CouponRecordPrivateVd_Min_Fields = {
  __typename?: 'couponRecordPrivateVd_min_fields';
  action?: Maybe<Scalars['String']>;
  coupon_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  order_id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** response of any mutation on the table "view_coupon_record_private_vd" */
export type CouponRecordPrivateVd_Mutation_Response = {
  __typename?: 'couponRecordPrivateVd_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<CouponRecordPrivateVd>;
};

/** input type for inserting object relation for remote table "view_coupon_record_private_vd" */
export type CouponRecordPrivateVd_Obj_Rel_Insert_Input = {
  data: CouponRecordPrivateVd_Insert_Input;
};

/** Ordering options when selecting data from "view_coupon_record_private_vd". */
export type CouponRecordPrivateVd_Order_By = {
  action?: Maybe<Order_By>;
  byCoupon?: Maybe<Coupon_Order_By>;
  byOrder?: Maybe<Order_Order_By>;
  coupon_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  publicData?: Maybe<CouponRecord_Order_By>;
  updated_at?: Maybe<Order_By>;
  user?: Maybe<User_Order_By>;
  user_id?: Maybe<Order_By>;
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type CouponRecordPrivateVd_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "view_coupon_record_private_vd" */
export enum CouponRecordPrivateVd_Select_Column {
  /** column name */
  Action = 'action',
  /** column name */
  CouponId = 'coupon_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  OrderId = 'order_id',
  /** column name */
  Price = 'price',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "view_coupon_record_private_vd" */
export type CouponRecordPrivateVd_Set_Input = {
  action?: Maybe<Scalars['String']>;
  coupon_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  order_id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate stddev on columns */
export type CouponRecordPrivateVd_Stddev_Fields = {
  __typename?: 'couponRecordPrivateVd_stddev_fields';
  coupon_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type CouponRecordPrivateVd_Stddev_Pop_Fields = {
  __typename?: 'couponRecordPrivateVd_stddev_pop_fields';
  coupon_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type CouponRecordPrivateVd_Stddev_Samp_Fields = {
  __typename?: 'couponRecordPrivateVd_stddev_samp_fields';
  coupon_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type CouponRecordPrivateVd_Sum_Fields = {
  __typename?: 'couponRecordPrivateVd_sum_fields';
  coupon_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  order_id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate var_pop on columns */
export type CouponRecordPrivateVd_Var_Pop_Fields = {
  __typename?: 'couponRecordPrivateVd_var_pop_fields';
  coupon_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type CouponRecordPrivateVd_Var_Samp_Fields = {
  __typename?: 'couponRecordPrivateVd_var_samp_fields';
  coupon_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type CouponRecordPrivateVd_Variance_Fields = {
  __typename?: 'couponRecordPrivateVd_variance_fields';
  coupon_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregated selection of "tbl_coupon_record" */
export type CouponRecord_Aggregate = {
  __typename?: 'couponRecord_aggregate';
  aggregate?: Maybe<CouponRecord_Aggregate_Fields>;
  nodes: Array<CouponRecord>;
};

/** aggregate fields of "tbl_coupon_record" */
export type CouponRecord_Aggregate_Fields = {
  __typename?: 'couponRecord_aggregate_fields';
  avg?: Maybe<CouponRecord_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<CouponRecord_Max_Fields>;
  min?: Maybe<CouponRecord_Min_Fields>;
  stddev?: Maybe<CouponRecord_Stddev_Fields>;
  stddev_pop?: Maybe<CouponRecord_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<CouponRecord_Stddev_Samp_Fields>;
  sum?: Maybe<CouponRecord_Sum_Fields>;
  var_pop?: Maybe<CouponRecord_Var_Pop_Fields>;
  var_samp?: Maybe<CouponRecord_Var_Samp_Fields>;
  variance?: Maybe<CouponRecord_Variance_Fields>;
};


/** aggregate fields of "tbl_coupon_record" */
export type CouponRecord_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<CouponRecord_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "tbl_coupon_record" */
export type CouponRecord_Aggregate_Order_By = {
  avg?: Maybe<CouponRecord_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<CouponRecord_Max_Order_By>;
  min?: Maybe<CouponRecord_Min_Order_By>;
  stddev?: Maybe<CouponRecord_Stddev_Order_By>;
  stddev_pop?: Maybe<CouponRecord_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<CouponRecord_Stddev_Samp_Order_By>;
  sum?: Maybe<CouponRecord_Sum_Order_By>;
  var_pop?: Maybe<CouponRecord_Var_Pop_Order_By>;
  var_samp?: Maybe<CouponRecord_Var_Samp_Order_By>;
  variance?: Maybe<CouponRecord_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type CouponRecord_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "tbl_coupon_record" */
export type CouponRecord_Arr_Rel_Insert_Input = {
  data: Array<CouponRecord_Insert_Input>;
  /** on conflict condition */
  on_conflict?: Maybe<CouponRecord_On_Conflict>;
};

/** aggregate avg on columns */
export type CouponRecord_Avg_Fields = {
  __typename?: 'couponRecord_avg_fields';
  coupon_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "tbl_coupon_record" */
export type CouponRecord_Avg_Order_By = {
  coupon_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "tbl_coupon_record". All fields are combined with a logical 'AND'. */
export type CouponRecord_Bool_Exp = {
  _and?: Maybe<Array<CouponRecord_Bool_Exp>>;
  _not?: Maybe<CouponRecord_Bool_Exp>;
  _or?: Maybe<Array<CouponRecord_Bool_Exp>>;
  action?: Maybe<String_Comparison_Exp>;
  byCoupon?: Maybe<Coupon_Bool_Exp>;
  byOrder?: Maybe<Order_Bool_Exp>;
  coupon_id?: Maybe<Bigint_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  order_id?: Maybe<Bigint_Comparison_Exp>;
  price?: Maybe<Int_Comparison_Exp>;
  privateVd?: Maybe<CouponRecordPrivateVd_Bool_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<User_Bool_Exp>;
  user_id?: Maybe<Bigint_Comparison_Exp>;
};

/** unique or primary key constraints on table "tbl_coupon_record" */
export enum CouponRecord_Constraint {
  /** unique or primary key constraint */
  TblCouponRecordPkey = 'tbl_coupon_record_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type CouponRecord_Delete_At_Path_Input = {
  data?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type CouponRecord_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type CouponRecord_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "tbl_coupon_record" */
export type CouponRecord_Inc_Input = {
  coupon_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  order_id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "tbl_coupon_record" */
export type CouponRecord_Insert_Input = {
  action?: Maybe<Scalars['String']>;
  byCoupon?: Maybe<Coupon_Obj_Rel_Insert_Input>;
  byOrder?: Maybe<Order_Obj_Rel_Insert_Input>;
  coupon_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  order_id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  privateVd?: Maybe<CouponRecordPrivateVd_Obj_Rel_Insert_Input>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<User_Obj_Rel_Insert_Input>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate max on columns */
export type CouponRecord_Max_Fields = {
  __typename?: 'couponRecord_max_fields';
  action?: Maybe<Scalars['String']>;
  coupon_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  order_id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by max() on columns of table "tbl_coupon_record" */
export type CouponRecord_Max_Order_By = {
  action?: Maybe<Order_By>;
  coupon_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type CouponRecord_Min_Fields = {
  __typename?: 'couponRecord_min_fields';
  action?: Maybe<Scalars['String']>;
  coupon_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  order_id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by min() on columns of table "tbl_coupon_record" */
export type CouponRecord_Min_Order_By = {
  action?: Maybe<Order_By>;
  coupon_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** response of any mutation on the table "tbl_coupon_record" */
export type CouponRecord_Mutation_Response = {
  __typename?: 'couponRecord_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<CouponRecord>;
};

/** input type for inserting object relation for remote table "tbl_coupon_record" */
export type CouponRecord_Obj_Rel_Insert_Input = {
  data: CouponRecord_Insert_Input;
  /** on conflict condition */
  on_conflict?: Maybe<CouponRecord_On_Conflict>;
};

/** on conflict condition type for table "tbl_coupon_record" */
export type CouponRecord_On_Conflict = {
  constraint: CouponRecord_Constraint;
  update_columns: Array<CouponRecord_Update_Column>;
  where?: Maybe<CouponRecord_Bool_Exp>;
};

/** Ordering options when selecting data from "tbl_coupon_record". */
export type CouponRecord_Order_By = {
  action?: Maybe<Order_By>;
  byCoupon?: Maybe<Coupon_Order_By>;
  byOrder?: Maybe<Order_Order_By>;
  coupon_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  privateVd?: Maybe<CouponRecordPrivateVd_Order_By>;
  updated_at?: Maybe<Order_By>;
  user?: Maybe<User_Order_By>;
  user_id?: Maybe<Order_By>;
};

/** primary key columns input for table: couponRecord */
export type CouponRecord_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type CouponRecord_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "tbl_coupon_record" */
export enum CouponRecord_Select_Column {
  /** column name */
  Action = 'action',
  /** column name */
  CouponId = 'coupon_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  OrderId = 'order_id',
  /** column name */
  Price = 'price',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "tbl_coupon_record" */
export type CouponRecord_Set_Input = {
  action?: Maybe<Scalars['String']>;
  coupon_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  order_id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate stddev on columns */
export type CouponRecord_Stddev_Fields = {
  __typename?: 'couponRecord_stddev_fields';
  coupon_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "tbl_coupon_record" */
export type CouponRecord_Stddev_Order_By = {
  coupon_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type CouponRecord_Stddev_Pop_Fields = {
  __typename?: 'couponRecord_stddev_pop_fields';
  coupon_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "tbl_coupon_record" */
export type CouponRecord_Stddev_Pop_Order_By = {
  coupon_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type CouponRecord_Stddev_Samp_Fields = {
  __typename?: 'couponRecord_stddev_samp_fields';
  coupon_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "tbl_coupon_record" */
export type CouponRecord_Stddev_Samp_Order_By = {
  coupon_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type CouponRecord_Sum_Fields = {
  __typename?: 'couponRecord_sum_fields';
  coupon_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  order_id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "tbl_coupon_record" */
export type CouponRecord_Sum_Order_By = {
  coupon_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** update columns of table "tbl_coupon_record" */
export enum CouponRecord_Update_Column {
  /** column name */
  Action = 'action',
  /** column name */
  CouponId = 'coupon_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  OrderId = 'order_id',
  /** column name */
  Price = 'price',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** aggregate var_pop on columns */
export type CouponRecord_Var_Pop_Fields = {
  __typename?: 'couponRecord_var_pop_fields';
  coupon_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "tbl_coupon_record" */
export type CouponRecord_Var_Pop_Order_By = {
  coupon_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type CouponRecord_Var_Samp_Fields = {
  __typename?: 'couponRecord_var_samp_fields';
  coupon_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "tbl_coupon_record" */
export type CouponRecord_Var_Samp_Order_By = {
  coupon_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type CouponRecord_Variance_Fields = {
  __typename?: 'couponRecord_variance_fields';
  coupon_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "tbl_coupon_record" */
export type CouponRecord_Variance_Order_By = {
  coupon_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregated selection of "tbl_coupon" */
export type Coupon_Aggregate = {
  __typename?: 'coupon_aggregate';
  aggregate?: Maybe<Coupon_Aggregate_Fields>;
  nodes: Array<Coupon>;
};

/** aggregate fields of "tbl_coupon" */
export type Coupon_Aggregate_Fields = {
  __typename?: 'coupon_aggregate_fields';
  avg?: Maybe<Coupon_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Coupon_Max_Fields>;
  min?: Maybe<Coupon_Min_Fields>;
  stddev?: Maybe<Coupon_Stddev_Fields>;
  stddev_pop?: Maybe<Coupon_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Coupon_Stddev_Samp_Fields>;
  sum?: Maybe<Coupon_Sum_Fields>;
  var_pop?: Maybe<Coupon_Var_Pop_Fields>;
  var_samp?: Maybe<Coupon_Var_Samp_Fields>;
  variance?: Maybe<Coupon_Variance_Fields>;
};


/** aggregate fields of "tbl_coupon" */
export type Coupon_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Coupon_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "tbl_coupon" */
export type Coupon_Aggregate_Order_By = {
  avg?: Maybe<Coupon_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Coupon_Max_Order_By>;
  min?: Maybe<Coupon_Min_Order_By>;
  stddev?: Maybe<Coupon_Stddev_Order_By>;
  stddev_pop?: Maybe<Coupon_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Coupon_Stddev_Samp_Order_By>;
  sum?: Maybe<Coupon_Sum_Order_By>;
  var_pop?: Maybe<Coupon_Var_Pop_Order_By>;
  var_samp?: Maybe<Coupon_Var_Samp_Order_By>;
  variance?: Maybe<Coupon_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Coupon_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "tbl_coupon" */
export type Coupon_Arr_Rel_Insert_Input = {
  data: Array<Coupon_Insert_Input>;
  /** on conflict condition */
  on_conflict?: Maybe<Coupon_On_Conflict>;
};

/** aggregate avg on columns */
export type Coupon_Avg_Fields = {
  __typename?: 'coupon_avg_fields';
  admin_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "tbl_coupon" */
export type Coupon_Avg_Order_By = {
  admin_user_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "tbl_coupon". All fields are combined with a logical 'AND'. */
export type Coupon_Bool_Exp = {
  _and?: Maybe<Array<Coupon_Bool_Exp>>;
  _not?: Maybe<Coupon_Bool_Exp>;
  _or?: Maybe<Array<Coupon_Bool_Exp>>;
  adminUser?: Maybe<User_Bool_Exp>;
  admin_user_id?: Maybe<Bigint_Comparison_Exp>;
  couponRecord?: Maybe<CouponRecord_Bool_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  isDeduct?: Maybe<Boolean_Comparison_Exp>;
  memo?: Maybe<String_Comparison_Exp>;
  price?: Maybe<Int_Comparison_Exp>;
  privateVd?: Maybe<CouponPrivateVd_Bool_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<User_Bool_Exp>;
  user_id?: Maybe<Bigint_Comparison_Exp>;
};

/** unique or primary key constraints on table "tbl_coupon" */
export enum Coupon_Constraint {
  /** unique or primary key constraint */
  TblCouponPkey = 'tbl_coupon_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Coupon_Delete_At_Path_Input = {
  data?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Coupon_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Coupon_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "tbl_coupon" */
export type Coupon_Inc_Input = {
  admin_user_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "tbl_coupon" */
export type Coupon_Insert_Input = {
  adminUser?: Maybe<User_Obj_Rel_Insert_Input>;
  admin_user_id?: Maybe<Scalars['bigint']>;
  couponRecord?: Maybe<CouponRecord_Arr_Rel_Insert_Input>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  isDeduct?: Maybe<Scalars['Boolean']>;
  memo?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['Int']>;
  privateVd?: Maybe<CouponPrivateVd_Obj_Rel_Insert_Input>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<User_Obj_Rel_Insert_Input>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate max on columns */
export type Coupon_Max_Fields = {
  __typename?: 'coupon_max_fields';
  admin_user_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  memo?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by max() on columns of table "tbl_coupon" */
export type Coupon_Max_Order_By = {
  admin_user_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  memo?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Coupon_Min_Fields = {
  __typename?: 'coupon_min_fields';
  admin_user_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  memo?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by min() on columns of table "tbl_coupon" */
export type Coupon_Min_Order_By = {
  admin_user_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  memo?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** response of any mutation on the table "tbl_coupon" */
export type Coupon_Mutation_Response = {
  __typename?: 'coupon_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Coupon>;
};

/** input type for inserting object relation for remote table "tbl_coupon" */
export type Coupon_Obj_Rel_Insert_Input = {
  data: Coupon_Insert_Input;
  /** on conflict condition */
  on_conflict?: Maybe<Coupon_On_Conflict>;
};

/** on conflict condition type for table "tbl_coupon" */
export type Coupon_On_Conflict = {
  constraint: Coupon_Constraint;
  update_columns: Array<Coupon_Update_Column>;
  where?: Maybe<Coupon_Bool_Exp>;
};

/** Ordering options when selecting data from "tbl_coupon". */
export type Coupon_Order_By = {
  adminUser?: Maybe<User_Order_By>;
  admin_user_id?: Maybe<Order_By>;
  couponRecord_aggregate?: Maybe<CouponRecord_Aggregate_Order_By>;
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  isDeduct?: Maybe<Order_By>;
  memo?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  privateVd?: Maybe<CouponPrivateVd_Order_By>;
  updated_at?: Maybe<Order_By>;
  user?: Maybe<User_Order_By>;
  user_id?: Maybe<Order_By>;
};

/** primary key columns input for table: coupon */
export type Coupon_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Coupon_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "tbl_coupon" */
export enum Coupon_Select_Column {
  /** column name */
  AdminUserId = 'admin_user_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  IsDeduct = 'isDeduct',
  /** column name */
  Memo = 'memo',
  /** column name */
  Price = 'price',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "tbl_coupon" */
export type Coupon_Set_Input = {
  admin_user_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  isDeduct?: Maybe<Scalars['Boolean']>;
  memo?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate stddev on columns */
export type Coupon_Stddev_Fields = {
  __typename?: 'coupon_stddev_fields';
  admin_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "tbl_coupon" */
export type Coupon_Stddev_Order_By = {
  admin_user_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Coupon_Stddev_Pop_Fields = {
  __typename?: 'coupon_stddev_pop_fields';
  admin_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "tbl_coupon" */
export type Coupon_Stddev_Pop_Order_By = {
  admin_user_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Coupon_Stddev_Samp_Fields = {
  __typename?: 'coupon_stddev_samp_fields';
  admin_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "tbl_coupon" */
export type Coupon_Stddev_Samp_Order_By = {
  admin_user_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Coupon_Sum_Fields = {
  __typename?: 'coupon_sum_fields';
  admin_user_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "tbl_coupon" */
export type Coupon_Sum_Order_By = {
  admin_user_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** update columns of table "tbl_coupon" */
export enum Coupon_Update_Column {
  /** column name */
  AdminUserId = 'admin_user_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  IsDeduct = 'isDeduct',
  /** column name */
  Memo = 'memo',
  /** column name */
  Price = 'price',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** aggregate var_pop on columns */
export type Coupon_Var_Pop_Fields = {
  __typename?: 'coupon_var_pop_fields';
  admin_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "tbl_coupon" */
export type Coupon_Var_Pop_Order_By = {
  admin_user_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Coupon_Var_Samp_Fields = {
  __typename?: 'coupon_var_samp_fields';
  admin_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "tbl_coupon" */
export type Coupon_Var_Samp_Order_By = {
  admin_user_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Coupon_Variance_Fields = {
  __typename?: 'coupon_variance_fields';
  admin_user_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "tbl_coupon" */
export type Coupon_Variance_Order_By = {
  admin_user_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};


/** Boolean expression to compare columns of type "float8". All fields are combined with logical 'AND'. */
export type Float8_Comparison_Exp = {
  _eq?: Maybe<Scalars['float8']>;
  _gt?: Maybe<Scalars['float8']>;
  _gte?: Maybe<Scalars['float8']>;
  _in?: Maybe<Array<Scalars['float8']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['float8']>;
  _lte?: Maybe<Scalars['float8']>;
  _neq?: Maybe<Scalars['float8']>;
  _nin?: Maybe<Array<Scalars['float8']>>;
};

/** columns and relationships of "mn_group_invitation" */
export type GroupInvitation = {
  __typename?: 'groupInvitation';
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  group: UserGroup;
  group_id?: Maybe<Scalars['bigint']>;
  id: Scalars['bigint'];
  /** An object relationship */
  invitee: User;
  invitee_id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  inviter: User;
  inviter_id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  privateVd?: Maybe<GroupInvitationPrivateVd>;
  state?: Maybe<Scalars['Int']>;
  updated_at: Scalars['timestamptz'];
};

/** columns and relationships of "view_group_invitation_private_vd" */
export type GroupInvitationPrivateVd = {
  __typename?: 'groupInvitationPrivateVd';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  group?: Maybe<UserGroup>;
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  invitee?: Maybe<User>;
  invitee_id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  inviter?: Maybe<User>;
  inviter_id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  publicData?: Maybe<GroupInvitation>;
  state?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregated selection of "view_group_invitation_private_vd" */
export type GroupInvitationPrivateVd_Aggregate = {
  __typename?: 'groupInvitationPrivateVd_aggregate';
  aggregate?: Maybe<GroupInvitationPrivateVd_Aggregate_Fields>;
  nodes: Array<GroupInvitationPrivateVd>;
};

/** aggregate fields of "view_group_invitation_private_vd" */
export type GroupInvitationPrivateVd_Aggregate_Fields = {
  __typename?: 'groupInvitationPrivateVd_aggregate_fields';
  avg?: Maybe<GroupInvitationPrivateVd_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<GroupInvitationPrivateVd_Max_Fields>;
  min?: Maybe<GroupInvitationPrivateVd_Min_Fields>;
  stddev?: Maybe<GroupInvitationPrivateVd_Stddev_Fields>;
  stddev_pop?: Maybe<GroupInvitationPrivateVd_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<GroupInvitationPrivateVd_Stddev_Samp_Fields>;
  sum?: Maybe<GroupInvitationPrivateVd_Sum_Fields>;
  var_pop?: Maybe<GroupInvitationPrivateVd_Var_Pop_Fields>;
  var_samp?: Maybe<GroupInvitationPrivateVd_Var_Samp_Fields>;
  variance?: Maybe<GroupInvitationPrivateVd_Variance_Fields>;
};


/** aggregate fields of "view_group_invitation_private_vd" */
export type GroupInvitationPrivateVd_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<GroupInvitationPrivateVd_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type GroupInvitationPrivateVd_Avg_Fields = {
  __typename?: 'groupInvitationPrivateVd_avg_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  invitee_id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  state?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "view_group_invitation_private_vd". All fields are combined with a logical 'AND'. */
export type GroupInvitationPrivateVd_Bool_Exp = {
  _and?: Maybe<Array<GroupInvitationPrivateVd_Bool_Exp>>;
  _not?: Maybe<GroupInvitationPrivateVd_Bool_Exp>;
  _or?: Maybe<Array<GroupInvitationPrivateVd_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  group?: Maybe<UserGroup_Bool_Exp>;
  group_id?: Maybe<Bigint_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  invitee?: Maybe<User_Bool_Exp>;
  invitee_id?: Maybe<Bigint_Comparison_Exp>;
  inviter?: Maybe<User_Bool_Exp>;
  inviter_id?: Maybe<Bigint_Comparison_Exp>;
  publicData?: Maybe<GroupInvitation_Bool_Exp>;
  state?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** input type for incrementing numeric columns in table "view_group_invitation_private_vd" */
export type GroupInvitationPrivateVd_Inc_Input = {
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  invitee_id?: Maybe<Scalars['bigint']>;
  inviter_id?: Maybe<Scalars['bigint']>;
  state?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "view_group_invitation_private_vd" */
export type GroupInvitationPrivateVd_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  group?: Maybe<UserGroup_Obj_Rel_Insert_Input>;
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  invitee?: Maybe<User_Obj_Rel_Insert_Input>;
  invitee_id?: Maybe<Scalars['bigint']>;
  inviter?: Maybe<User_Obj_Rel_Insert_Input>;
  inviter_id?: Maybe<Scalars['bigint']>;
  publicData?: Maybe<GroupInvitation_Obj_Rel_Insert_Input>;
  state?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type GroupInvitationPrivateVd_Max_Fields = {
  __typename?: 'groupInvitationPrivateVd_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  invitee_id?: Maybe<Scalars['bigint']>;
  inviter_id?: Maybe<Scalars['bigint']>;
  state?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type GroupInvitationPrivateVd_Min_Fields = {
  __typename?: 'groupInvitationPrivateVd_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  invitee_id?: Maybe<Scalars['bigint']>;
  inviter_id?: Maybe<Scalars['bigint']>;
  state?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "view_group_invitation_private_vd" */
export type GroupInvitationPrivateVd_Mutation_Response = {
  __typename?: 'groupInvitationPrivateVd_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<GroupInvitationPrivateVd>;
};

/** input type for inserting object relation for remote table "view_group_invitation_private_vd" */
export type GroupInvitationPrivateVd_Obj_Rel_Insert_Input = {
  data: GroupInvitationPrivateVd_Insert_Input;
};

/** Ordering options when selecting data from "view_group_invitation_private_vd". */
export type GroupInvitationPrivateVd_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  group?: Maybe<UserGroup_Order_By>;
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  invitee?: Maybe<User_Order_By>;
  invitee_id?: Maybe<Order_By>;
  inviter?: Maybe<User_Order_By>;
  inviter_id?: Maybe<Order_By>;
  publicData?: Maybe<GroupInvitation_Order_By>;
  state?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** select columns of table "view_group_invitation_private_vd" */
export enum GroupInvitationPrivateVd_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  GroupId = 'group_id',
  /** column name */
  Id = 'id',
  /** column name */
  InviteeId = 'invitee_id',
  /** column name */
  InviterId = 'inviter_id',
  /** column name */
  State = 'state',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "view_group_invitation_private_vd" */
export type GroupInvitationPrivateVd_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  invitee_id?: Maybe<Scalars['bigint']>;
  inviter_id?: Maybe<Scalars['bigint']>;
  state?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type GroupInvitationPrivateVd_Stddev_Fields = {
  __typename?: 'groupInvitationPrivateVd_stddev_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  invitee_id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  state?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type GroupInvitationPrivateVd_Stddev_Pop_Fields = {
  __typename?: 'groupInvitationPrivateVd_stddev_pop_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  invitee_id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  state?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type GroupInvitationPrivateVd_Stddev_Samp_Fields = {
  __typename?: 'groupInvitationPrivateVd_stddev_samp_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  invitee_id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  state?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type GroupInvitationPrivateVd_Sum_Fields = {
  __typename?: 'groupInvitationPrivateVd_sum_fields';
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  invitee_id?: Maybe<Scalars['bigint']>;
  inviter_id?: Maybe<Scalars['bigint']>;
  state?: Maybe<Scalars['Int']>;
};

/** aggregate var_pop on columns */
export type GroupInvitationPrivateVd_Var_Pop_Fields = {
  __typename?: 'groupInvitationPrivateVd_var_pop_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  invitee_id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  state?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type GroupInvitationPrivateVd_Var_Samp_Fields = {
  __typename?: 'groupInvitationPrivateVd_var_samp_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  invitee_id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  state?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type GroupInvitationPrivateVd_Variance_Fields = {
  __typename?: 'groupInvitationPrivateVd_variance_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  invitee_id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  state?: Maybe<Scalars['Float']>;
};

/** aggregated selection of "mn_group_invitation" */
export type GroupInvitation_Aggregate = {
  __typename?: 'groupInvitation_aggregate';
  aggregate?: Maybe<GroupInvitation_Aggregate_Fields>;
  nodes: Array<GroupInvitation>;
};

/** aggregate fields of "mn_group_invitation" */
export type GroupInvitation_Aggregate_Fields = {
  __typename?: 'groupInvitation_aggregate_fields';
  avg?: Maybe<GroupInvitation_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<GroupInvitation_Max_Fields>;
  min?: Maybe<GroupInvitation_Min_Fields>;
  stddev?: Maybe<GroupInvitation_Stddev_Fields>;
  stddev_pop?: Maybe<GroupInvitation_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<GroupInvitation_Stddev_Samp_Fields>;
  sum?: Maybe<GroupInvitation_Sum_Fields>;
  var_pop?: Maybe<GroupInvitation_Var_Pop_Fields>;
  var_samp?: Maybe<GroupInvitation_Var_Samp_Fields>;
  variance?: Maybe<GroupInvitation_Variance_Fields>;
};


/** aggregate fields of "mn_group_invitation" */
export type GroupInvitation_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<GroupInvitation_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "mn_group_invitation" */
export type GroupInvitation_Aggregate_Order_By = {
  avg?: Maybe<GroupInvitation_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<GroupInvitation_Max_Order_By>;
  min?: Maybe<GroupInvitation_Min_Order_By>;
  stddev?: Maybe<GroupInvitation_Stddev_Order_By>;
  stddev_pop?: Maybe<GroupInvitation_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<GroupInvitation_Stddev_Samp_Order_By>;
  sum?: Maybe<GroupInvitation_Sum_Order_By>;
  var_pop?: Maybe<GroupInvitation_Var_Pop_Order_By>;
  var_samp?: Maybe<GroupInvitation_Var_Samp_Order_By>;
  variance?: Maybe<GroupInvitation_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "mn_group_invitation" */
export type GroupInvitation_Arr_Rel_Insert_Input = {
  data: Array<GroupInvitation_Insert_Input>;
  /** on conflict condition */
  on_conflict?: Maybe<GroupInvitation_On_Conflict>;
};

/** aggregate avg on columns */
export type GroupInvitation_Avg_Fields = {
  __typename?: 'groupInvitation_avg_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  invitee_id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  state?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "mn_group_invitation" */
export type GroupInvitation_Avg_Order_By = {
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  invitee_id?: Maybe<Order_By>;
  inviter_id?: Maybe<Order_By>;
  state?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "mn_group_invitation". All fields are combined with a logical 'AND'. */
export type GroupInvitation_Bool_Exp = {
  _and?: Maybe<Array<GroupInvitation_Bool_Exp>>;
  _not?: Maybe<GroupInvitation_Bool_Exp>;
  _or?: Maybe<Array<GroupInvitation_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  group?: Maybe<UserGroup_Bool_Exp>;
  group_id?: Maybe<Bigint_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  invitee?: Maybe<User_Bool_Exp>;
  invitee_id?: Maybe<Bigint_Comparison_Exp>;
  inviter?: Maybe<User_Bool_Exp>;
  inviter_id?: Maybe<Bigint_Comparison_Exp>;
  privateVd?: Maybe<GroupInvitationPrivateVd_Bool_Exp>;
  state?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "mn_group_invitation" */
export enum GroupInvitation_Constraint {
  /** unique or primary key constraint */
  GroupOnlyInviteOnce = 'group_only_invite_once',
  /** unique or primary key constraint */
  MnGroupInvitationPkey = 'mn_group_invitation_pkey'
}

/** input type for incrementing numeric columns in table "mn_group_invitation" */
export type GroupInvitation_Inc_Input = {
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  invitee_id?: Maybe<Scalars['bigint']>;
  inviter_id?: Maybe<Scalars['bigint']>;
  state?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "mn_group_invitation" */
export type GroupInvitation_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  group?: Maybe<UserGroup_Obj_Rel_Insert_Input>;
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  invitee?: Maybe<User_Obj_Rel_Insert_Input>;
  invitee_id?: Maybe<Scalars['bigint']>;
  inviter?: Maybe<User_Obj_Rel_Insert_Input>;
  inviter_id?: Maybe<Scalars['bigint']>;
  privateVd?: Maybe<GroupInvitationPrivateVd_Obj_Rel_Insert_Input>;
  state?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type GroupInvitation_Max_Fields = {
  __typename?: 'groupInvitation_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  invitee_id?: Maybe<Scalars['bigint']>;
  inviter_id?: Maybe<Scalars['bigint']>;
  state?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "mn_group_invitation" */
export type GroupInvitation_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  invitee_id?: Maybe<Order_By>;
  inviter_id?: Maybe<Order_By>;
  state?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type GroupInvitation_Min_Fields = {
  __typename?: 'groupInvitation_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  invitee_id?: Maybe<Scalars['bigint']>;
  inviter_id?: Maybe<Scalars['bigint']>;
  state?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "mn_group_invitation" */
export type GroupInvitation_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  invitee_id?: Maybe<Order_By>;
  inviter_id?: Maybe<Order_By>;
  state?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "mn_group_invitation" */
export type GroupInvitation_Mutation_Response = {
  __typename?: 'groupInvitation_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<GroupInvitation>;
};

/** input type for inserting object relation for remote table "mn_group_invitation" */
export type GroupInvitation_Obj_Rel_Insert_Input = {
  data: GroupInvitation_Insert_Input;
  /** on conflict condition */
  on_conflict?: Maybe<GroupInvitation_On_Conflict>;
};

/** on conflict condition type for table "mn_group_invitation" */
export type GroupInvitation_On_Conflict = {
  constraint: GroupInvitation_Constraint;
  update_columns: Array<GroupInvitation_Update_Column>;
  where?: Maybe<GroupInvitation_Bool_Exp>;
};

/** Ordering options when selecting data from "mn_group_invitation". */
export type GroupInvitation_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  group?: Maybe<UserGroup_Order_By>;
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  invitee?: Maybe<User_Order_By>;
  invitee_id?: Maybe<Order_By>;
  inviter?: Maybe<User_Order_By>;
  inviter_id?: Maybe<Order_By>;
  privateVd?: Maybe<GroupInvitationPrivateVd_Order_By>;
  state?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: groupInvitation */
export type GroupInvitation_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** select columns of table "mn_group_invitation" */
export enum GroupInvitation_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  GroupId = 'group_id',
  /** column name */
  Id = 'id',
  /** column name */
  InviteeId = 'invitee_id',
  /** column name */
  InviterId = 'inviter_id',
  /** column name */
  State = 'state',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "mn_group_invitation" */
export type GroupInvitation_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  invitee_id?: Maybe<Scalars['bigint']>;
  inviter_id?: Maybe<Scalars['bigint']>;
  state?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type GroupInvitation_Stddev_Fields = {
  __typename?: 'groupInvitation_stddev_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  invitee_id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  state?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "mn_group_invitation" */
export type GroupInvitation_Stddev_Order_By = {
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  invitee_id?: Maybe<Order_By>;
  inviter_id?: Maybe<Order_By>;
  state?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type GroupInvitation_Stddev_Pop_Fields = {
  __typename?: 'groupInvitation_stddev_pop_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  invitee_id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  state?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "mn_group_invitation" */
export type GroupInvitation_Stddev_Pop_Order_By = {
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  invitee_id?: Maybe<Order_By>;
  inviter_id?: Maybe<Order_By>;
  state?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type GroupInvitation_Stddev_Samp_Fields = {
  __typename?: 'groupInvitation_stddev_samp_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  invitee_id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  state?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "mn_group_invitation" */
export type GroupInvitation_Stddev_Samp_Order_By = {
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  invitee_id?: Maybe<Order_By>;
  inviter_id?: Maybe<Order_By>;
  state?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type GroupInvitation_Sum_Fields = {
  __typename?: 'groupInvitation_sum_fields';
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  invitee_id?: Maybe<Scalars['bigint']>;
  inviter_id?: Maybe<Scalars['bigint']>;
  state?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "mn_group_invitation" */
export type GroupInvitation_Sum_Order_By = {
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  invitee_id?: Maybe<Order_By>;
  inviter_id?: Maybe<Order_By>;
  state?: Maybe<Order_By>;
};

/** update columns of table "mn_group_invitation" */
export enum GroupInvitation_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  GroupId = 'group_id',
  /** column name */
  Id = 'id',
  /** column name */
  InviteeId = 'invitee_id',
  /** column name */
  InviterId = 'inviter_id',
  /** column name */
  State = 'state',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type GroupInvitation_Var_Pop_Fields = {
  __typename?: 'groupInvitation_var_pop_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  invitee_id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  state?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "mn_group_invitation" */
export type GroupInvitation_Var_Pop_Order_By = {
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  invitee_id?: Maybe<Order_By>;
  inviter_id?: Maybe<Order_By>;
  state?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type GroupInvitation_Var_Samp_Fields = {
  __typename?: 'groupInvitation_var_samp_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  invitee_id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  state?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "mn_group_invitation" */
export type GroupInvitation_Var_Samp_Order_By = {
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  invitee_id?: Maybe<Order_By>;
  inviter_id?: Maybe<Order_By>;
  state?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type GroupInvitation_Variance_Fields = {
  __typename?: 'groupInvitation_variance_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  invitee_id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  state?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "mn_group_invitation" */
export type GroupInvitation_Variance_Order_By = {
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  invitee_id?: Maybe<Order_By>;
  inviter_id?: Maybe<Order_By>;
  state?: Maybe<Order_By>;
};

/** columns and relationships of "tbl_issue" */
export type Issue = {
  __typename?: 'issue';
  /** An array relationship */
  comments: Array<IssueComment>;
  /** An aggregate relationship */
  comments_aggregate: IssueComment_Aggregate;
  content?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id: Scalars['bigint'];
  metadata?: Maybe<Scalars['jsonb']>;
  /** An object relationship */
  order: Order;
  order_id?: Maybe<Scalars['bigint']>;
  requirement?: Maybe<Scalars['jsonb']>;
  state?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user: User;
  user_id?: Maybe<Scalars['bigint']>;
};


/** columns and relationships of "tbl_issue" */
export type IssueCommentsArgs = {
  distinct_on?: Maybe<Array<IssueComment_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<IssueComment_Order_By>>;
  where?: Maybe<IssueComment_Bool_Exp>;
};


/** columns and relationships of "tbl_issue" */
export type IssueComments_AggregateArgs = {
  distinct_on?: Maybe<Array<IssueComment_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<IssueComment_Order_By>>;
  where?: Maybe<IssueComment_Bool_Exp>;
};


/** columns and relationships of "tbl_issue" */
export type IssueMetadataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "tbl_issue" */
export type IssueRequirementArgs = {
  path?: Maybe<Scalars['String']>;
};

/** columns and relationships of "tbl_issue_comment" */
export type IssueComment = {
  __typename?: 'issueComment';
  content?: Maybe<Scalars['jsonb']>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id: Scalars['bigint'];
  /** An object relationship */
  issue: Issue;
  issue_id?: Maybe<Scalars['bigint']>;
  metadata?: Maybe<Scalars['jsonb']>;
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user: User;
  user_id?: Maybe<Scalars['bigint']>;
};


/** columns and relationships of "tbl_issue_comment" */
export type IssueCommentContentArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "tbl_issue_comment" */
export type IssueCommentMetadataArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "tbl_issue_comment" */
export type IssueComment_Aggregate = {
  __typename?: 'issueComment_aggregate';
  aggregate?: Maybe<IssueComment_Aggregate_Fields>;
  nodes: Array<IssueComment>;
};

/** aggregate fields of "tbl_issue_comment" */
export type IssueComment_Aggregate_Fields = {
  __typename?: 'issueComment_aggregate_fields';
  avg?: Maybe<IssueComment_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<IssueComment_Max_Fields>;
  min?: Maybe<IssueComment_Min_Fields>;
  stddev?: Maybe<IssueComment_Stddev_Fields>;
  stddev_pop?: Maybe<IssueComment_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<IssueComment_Stddev_Samp_Fields>;
  sum?: Maybe<IssueComment_Sum_Fields>;
  var_pop?: Maybe<IssueComment_Var_Pop_Fields>;
  var_samp?: Maybe<IssueComment_Var_Samp_Fields>;
  variance?: Maybe<IssueComment_Variance_Fields>;
};


/** aggregate fields of "tbl_issue_comment" */
export type IssueComment_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<IssueComment_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "tbl_issue_comment" */
export type IssueComment_Aggregate_Order_By = {
  avg?: Maybe<IssueComment_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<IssueComment_Max_Order_By>;
  min?: Maybe<IssueComment_Min_Order_By>;
  stddev?: Maybe<IssueComment_Stddev_Order_By>;
  stddev_pop?: Maybe<IssueComment_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<IssueComment_Stddev_Samp_Order_By>;
  sum?: Maybe<IssueComment_Sum_Order_By>;
  var_pop?: Maybe<IssueComment_Var_Pop_Order_By>;
  var_samp?: Maybe<IssueComment_Var_Samp_Order_By>;
  variance?: Maybe<IssueComment_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type IssueComment_Append_Input = {
  content?: Maybe<Scalars['jsonb']>;
  metadata?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "tbl_issue_comment" */
export type IssueComment_Arr_Rel_Insert_Input = {
  data: Array<IssueComment_Insert_Input>;
  /** on conflict condition */
  on_conflict?: Maybe<IssueComment_On_Conflict>;
};

/** aggregate avg on columns */
export type IssueComment_Avg_Fields = {
  __typename?: 'issueComment_avg_fields';
  id?: Maybe<Scalars['Float']>;
  issue_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "tbl_issue_comment" */
export type IssueComment_Avg_Order_By = {
  id?: Maybe<Order_By>;
  issue_id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "tbl_issue_comment". All fields are combined with a logical 'AND'. */
export type IssueComment_Bool_Exp = {
  _and?: Maybe<Array<IssueComment_Bool_Exp>>;
  _not?: Maybe<IssueComment_Bool_Exp>;
  _or?: Maybe<Array<IssueComment_Bool_Exp>>;
  content?: Maybe<Jsonb_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  issue?: Maybe<Issue_Bool_Exp>;
  issue_id?: Maybe<Bigint_Comparison_Exp>;
  metadata?: Maybe<Jsonb_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<User_Bool_Exp>;
  user_id?: Maybe<Bigint_Comparison_Exp>;
};

/** unique or primary key constraints on table "tbl_issue_comment" */
export enum IssueComment_Constraint {
  /** unique or primary key constraint */
  TblIssueCommentPkey = 'tbl_issue_comment_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type IssueComment_Delete_At_Path_Input = {
  content?: Maybe<Array<Scalars['String']>>;
  metadata?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type IssueComment_Delete_Elem_Input = {
  content?: Maybe<Scalars['Int']>;
  metadata?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type IssueComment_Delete_Key_Input = {
  content?: Maybe<Scalars['String']>;
  metadata?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "tbl_issue_comment" */
export type IssueComment_Inc_Input = {
  id?: Maybe<Scalars['bigint']>;
  issue_id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "tbl_issue_comment" */
export type IssueComment_Insert_Input = {
  content?: Maybe<Scalars['jsonb']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  issue?: Maybe<Issue_Obj_Rel_Insert_Input>;
  issue_id?: Maybe<Scalars['bigint']>;
  metadata?: Maybe<Scalars['jsonb']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<User_Obj_Rel_Insert_Input>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate max on columns */
export type IssueComment_Max_Fields = {
  __typename?: 'issueComment_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  issue_id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by max() on columns of table "tbl_issue_comment" */
export type IssueComment_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  issue_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type IssueComment_Min_Fields = {
  __typename?: 'issueComment_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  issue_id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by min() on columns of table "tbl_issue_comment" */
export type IssueComment_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  issue_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** response of any mutation on the table "tbl_issue_comment" */
export type IssueComment_Mutation_Response = {
  __typename?: 'issueComment_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<IssueComment>;
};

/** on conflict condition type for table "tbl_issue_comment" */
export type IssueComment_On_Conflict = {
  constraint: IssueComment_Constraint;
  update_columns: Array<IssueComment_Update_Column>;
  where?: Maybe<IssueComment_Bool_Exp>;
};

/** Ordering options when selecting data from "tbl_issue_comment". */
export type IssueComment_Order_By = {
  content?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  issue?: Maybe<Issue_Order_By>;
  issue_id?: Maybe<Order_By>;
  metadata?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user?: Maybe<User_Order_By>;
  user_id?: Maybe<Order_By>;
};

/** primary key columns input for table: issueComment */
export type IssueComment_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type IssueComment_Prepend_Input = {
  content?: Maybe<Scalars['jsonb']>;
  metadata?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "tbl_issue_comment" */
export enum IssueComment_Select_Column {
  /** column name */
  Content = 'content',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  IssueId = 'issue_id',
  /** column name */
  Metadata = 'metadata',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "tbl_issue_comment" */
export type IssueComment_Set_Input = {
  content?: Maybe<Scalars['jsonb']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  issue_id?: Maybe<Scalars['bigint']>;
  metadata?: Maybe<Scalars['jsonb']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate stddev on columns */
export type IssueComment_Stddev_Fields = {
  __typename?: 'issueComment_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  issue_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "tbl_issue_comment" */
export type IssueComment_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  issue_id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type IssueComment_Stddev_Pop_Fields = {
  __typename?: 'issueComment_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  issue_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "tbl_issue_comment" */
export type IssueComment_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  issue_id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type IssueComment_Stddev_Samp_Fields = {
  __typename?: 'issueComment_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  issue_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "tbl_issue_comment" */
export type IssueComment_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  issue_id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type IssueComment_Sum_Fields = {
  __typename?: 'issueComment_sum_fields';
  id?: Maybe<Scalars['bigint']>;
  issue_id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "tbl_issue_comment" */
export type IssueComment_Sum_Order_By = {
  id?: Maybe<Order_By>;
  issue_id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** update columns of table "tbl_issue_comment" */
export enum IssueComment_Update_Column {
  /** column name */
  Content = 'content',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  IssueId = 'issue_id',
  /** column name */
  Metadata = 'metadata',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** aggregate var_pop on columns */
export type IssueComment_Var_Pop_Fields = {
  __typename?: 'issueComment_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  issue_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "tbl_issue_comment" */
export type IssueComment_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  issue_id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type IssueComment_Var_Samp_Fields = {
  __typename?: 'issueComment_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  issue_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "tbl_issue_comment" */
export type IssueComment_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  issue_id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type IssueComment_Variance_Fields = {
  __typename?: 'issueComment_variance_fields';
  id?: Maybe<Scalars['Float']>;
  issue_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "tbl_issue_comment" */
export type IssueComment_Variance_Order_By = {
  id?: Maybe<Order_By>;
  issue_id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregated selection of "tbl_issue" */
export type Issue_Aggregate = {
  __typename?: 'issue_aggregate';
  aggregate?: Maybe<Issue_Aggregate_Fields>;
  nodes: Array<Issue>;
};

/** aggregate fields of "tbl_issue" */
export type Issue_Aggregate_Fields = {
  __typename?: 'issue_aggregate_fields';
  avg?: Maybe<Issue_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Issue_Max_Fields>;
  min?: Maybe<Issue_Min_Fields>;
  stddev?: Maybe<Issue_Stddev_Fields>;
  stddev_pop?: Maybe<Issue_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Issue_Stddev_Samp_Fields>;
  sum?: Maybe<Issue_Sum_Fields>;
  var_pop?: Maybe<Issue_Var_Pop_Fields>;
  var_samp?: Maybe<Issue_Var_Samp_Fields>;
  variance?: Maybe<Issue_Variance_Fields>;
};


/** aggregate fields of "tbl_issue" */
export type Issue_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Issue_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "tbl_issue" */
export type Issue_Aggregate_Order_By = {
  avg?: Maybe<Issue_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Issue_Max_Order_By>;
  min?: Maybe<Issue_Min_Order_By>;
  stddev?: Maybe<Issue_Stddev_Order_By>;
  stddev_pop?: Maybe<Issue_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Issue_Stddev_Samp_Order_By>;
  sum?: Maybe<Issue_Sum_Order_By>;
  var_pop?: Maybe<Issue_Var_Pop_Order_By>;
  var_samp?: Maybe<Issue_Var_Samp_Order_By>;
  variance?: Maybe<Issue_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Issue_Append_Input = {
  metadata?: Maybe<Scalars['jsonb']>;
  requirement?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "tbl_issue" */
export type Issue_Arr_Rel_Insert_Input = {
  data: Array<Issue_Insert_Input>;
  /** on conflict condition */
  on_conflict?: Maybe<Issue_On_Conflict>;
};

/** aggregate avg on columns */
export type Issue_Avg_Fields = {
  __typename?: 'issue_avg_fields';
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "tbl_issue" */
export type Issue_Avg_Order_By = {
  id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "tbl_issue". All fields are combined with a logical 'AND'. */
export type Issue_Bool_Exp = {
  _and?: Maybe<Array<Issue_Bool_Exp>>;
  _not?: Maybe<Issue_Bool_Exp>;
  _or?: Maybe<Array<Issue_Bool_Exp>>;
  comments?: Maybe<IssueComment_Bool_Exp>;
  content?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  metadata?: Maybe<Jsonb_Comparison_Exp>;
  order?: Maybe<Order_Bool_Exp>;
  order_id?: Maybe<Bigint_Comparison_Exp>;
  requirement?: Maybe<Jsonb_Comparison_Exp>;
  state?: Maybe<String_Comparison_Exp>;
  title?: Maybe<String_Comparison_Exp>;
  type?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<User_Bool_Exp>;
  user_id?: Maybe<Bigint_Comparison_Exp>;
};

/** unique or primary key constraints on table "tbl_issue" */
export enum Issue_Constraint {
  /** unique or primary key constraint */
  TblIssuePkey = 'tbl_issue_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Issue_Delete_At_Path_Input = {
  metadata?: Maybe<Array<Scalars['String']>>;
  requirement?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Issue_Delete_Elem_Input = {
  metadata?: Maybe<Scalars['Int']>;
  requirement?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Issue_Delete_Key_Input = {
  metadata?: Maybe<Scalars['String']>;
  requirement?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "tbl_issue" */
export type Issue_Inc_Input = {
  id?: Maybe<Scalars['bigint']>;
  order_id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "tbl_issue" */
export type Issue_Insert_Input = {
  comments?: Maybe<IssueComment_Arr_Rel_Insert_Input>;
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  metadata?: Maybe<Scalars['jsonb']>;
  order?: Maybe<Order_Obj_Rel_Insert_Input>;
  order_id?: Maybe<Scalars['bigint']>;
  requirement?: Maybe<Scalars['jsonb']>;
  state?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<User_Obj_Rel_Insert_Input>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate max on columns */
export type Issue_Max_Fields = {
  __typename?: 'issue_max_fields';
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  order_id?: Maybe<Scalars['bigint']>;
  state?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by max() on columns of table "tbl_issue" */
export type Issue_Max_Order_By = {
  content?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
  state?: Maybe<Order_By>;
  title?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Issue_Min_Fields = {
  __typename?: 'issue_min_fields';
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  order_id?: Maybe<Scalars['bigint']>;
  state?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by min() on columns of table "tbl_issue" */
export type Issue_Min_Order_By = {
  content?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
  state?: Maybe<Order_By>;
  title?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** response of any mutation on the table "tbl_issue" */
export type Issue_Mutation_Response = {
  __typename?: 'issue_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Issue>;
};

/** input type for inserting object relation for remote table "tbl_issue" */
export type Issue_Obj_Rel_Insert_Input = {
  data: Issue_Insert_Input;
  /** on conflict condition */
  on_conflict?: Maybe<Issue_On_Conflict>;
};

/** on conflict condition type for table "tbl_issue" */
export type Issue_On_Conflict = {
  constraint: Issue_Constraint;
  update_columns: Array<Issue_Update_Column>;
  where?: Maybe<Issue_Bool_Exp>;
};

/** Ordering options when selecting data from "tbl_issue". */
export type Issue_Order_By = {
  comments_aggregate?: Maybe<IssueComment_Aggregate_Order_By>;
  content?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  metadata?: Maybe<Order_By>;
  order?: Maybe<Order_Order_By>;
  order_id?: Maybe<Order_By>;
  requirement?: Maybe<Order_By>;
  state?: Maybe<Order_By>;
  title?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user?: Maybe<User_Order_By>;
  user_id?: Maybe<Order_By>;
};

/** primary key columns input for table: issue */
export type Issue_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Issue_Prepend_Input = {
  metadata?: Maybe<Scalars['jsonb']>;
  requirement?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "tbl_issue" */
export enum Issue_Select_Column {
  /** column name */
  Content = 'content',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  Metadata = 'metadata',
  /** column name */
  OrderId = 'order_id',
  /** column name */
  Requirement = 'requirement',
  /** column name */
  State = 'state',
  /** column name */
  Title = 'title',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "tbl_issue" */
export type Issue_Set_Input = {
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  metadata?: Maybe<Scalars['jsonb']>;
  order_id?: Maybe<Scalars['bigint']>;
  requirement?: Maybe<Scalars['jsonb']>;
  state?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate stddev on columns */
export type Issue_Stddev_Fields = {
  __typename?: 'issue_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "tbl_issue" */
export type Issue_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Issue_Stddev_Pop_Fields = {
  __typename?: 'issue_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "tbl_issue" */
export type Issue_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Issue_Stddev_Samp_Fields = {
  __typename?: 'issue_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "tbl_issue" */
export type Issue_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Issue_Sum_Fields = {
  __typename?: 'issue_sum_fields';
  id?: Maybe<Scalars['bigint']>;
  order_id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "tbl_issue" */
export type Issue_Sum_Order_By = {
  id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** update columns of table "tbl_issue" */
export enum Issue_Update_Column {
  /** column name */
  Content = 'content',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  Metadata = 'metadata',
  /** column name */
  OrderId = 'order_id',
  /** column name */
  Requirement = 'requirement',
  /** column name */
  State = 'state',
  /** column name */
  Title = 'title',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** aggregate var_pop on columns */
export type Issue_Var_Pop_Fields = {
  __typename?: 'issue_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "tbl_issue" */
export type Issue_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Issue_Var_Samp_Fields = {
  __typename?: 'issue_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "tbl_issue" */
export type Issue_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Issue_Variance_Fields = {
  __typename?: 'issue_variance_fields';
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "tbl_issue" */
export type Issue_Variance_Order_By = {
  id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};


/** Boolean expression to compare columns of type "jsonb". All fields are combined with logical 'AND'. */
export type Jsonb_Comparison_Exp = {
  /** is the column contained in the given json value */
  _contained_in?: Maybe<Scalars['jsonb']>;
  /** does the column contain the given json value at the top level */
  _contains?: Maybe<Scalars['jsonb']>;
  _eq?: Maybe<Scalars['jsonb']>;
  _gt?: Maybe<Scalars['jsonb']>;
  _gte?: Maybe<Scalars['jsonb']>;
  /** does the string exist as a top-level key in the column */
  _has_key?: Maybe<Scalars['String']>;
  /** do all of these strings exist as top-level keys in the column */
  _has_keys_all?: Maybe<Array<Scalars['String']>>;
  /** do any of these strings exist as top-level keys in the column */
  _has_keys_any?: Maybe<Array<Scalars['String']>>;
  _in?: Maybe<Array<Scalars['jsonb']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['jsonb']>;
  _lte?: Maybe<Scalars['jsonb']>;
  _neq?: Maybe<Scalars['jsonb']>;
  _nin?: Maybe<Array<Scalars['jsonb']>>;
};

/** columns and relationships of "tbl_log" */
export type Log = {
  __typename?: 'log';
  created_at: Scalars['timestamptz'];
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id: Scalars['bigint'];
  type?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "tbl_log" */
export type LogDataArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "tbl_log" */
export type Log_Aggregate = {
  __typename?: 'log_aggregate';
  aggregate?: Maybe<Log_Aggregate_Fields>;
  nodes: Array<Log>;
};

/** aggregate fields of "tbl_log" */
export type Log_Aggregate_Fields = {
  __typename?: 'log_aggregate_fields';
  avg?: Maybe<Log_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Log_Max_Fields>;
  min?: Maybe<Log_Min_Fields>;
  stddev?: Maybe<Log_Stddev_Fields>;
  stddev_pop?: Maybe<Log_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Log_Stddev_Samp_Fields>;
  sum?: Maybe<Log_Sum_Fields>;
  var_pop?: Maybe<Log_Var_Pop_Fields>;
  var_samp?: Maybe<Log_Var_Samp_Fields>;
  variance?: Maybe<Log_Variance_Fields>;
};


/** aggregate fields of "tbl_log" */
export type Log_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Log_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Log_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type Log_Avg_Fields = {
  __typename?: 'log_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "tbl_log". All fields are combined with a logical 'AND'. */
export type Log_Bool_Exp = {
  _and?: Maybe<Array<Log_Bool_Exp>>;
  _not?: Maybe<Log_Bool_Exp>;
  _or?: Maybe<Array<Log_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  type?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "tbl_log" */
export enum Log_Constraint {
  /** unique or primary key constraint */
  TblLogPkey = 'tbl_log_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Log_Delete_At_Path_Input = {
  data?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Log_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Log_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "tbl_log" */
export type Log_Inc_Input = {
  id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "tbl_log" */
export type Log_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Log_Max_Fields = {
  __typename?: 'log_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Log_Min_Fields = {
  __typename?: 'log_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "tbl_log" */
export type Log_Mutation_Response = {
  __typename?: 'log_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Log>;
};

/** on conflict condition type for table "tbl_log" */
export type Log_On_Conflict = {
  constraint: Log_Constraint;
  update_columns: Array<Log_Update_Column>;
  where?: Maybe<Log_Bool_Exp>;
};

/** Ordering options when selecting data from "tbl_log". */
export type Log_Order_By = {
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: log */
export type Log_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Log_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "tbl_log" */
export enum Log_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "tbl_log" */
export type Log_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Log_Stddev_Fields = {
  __typename?: 'log_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Log_Stddev_Pop_Fields = {
  __typename?: 'log_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Log_Stddev_Samp_Fields = {
  __typename?: 'log_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Log_Sum_Fields = {
  __typename?: 'log_sum_fields';
  id?: Maybe<Scalars['bigint']>;
};

/** update columns of table "tbl_log" */
export enum Log_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Log_Var_Pop_Fields = {
  __typename?: 'log_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Log_Var_Samp_Fields = {
  __typename?: 'log_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Log_Variance_Fields = {
  __typename?: 'log_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "tbl_memo" */
export type Memo = {
  __typename?: 'memo';
  created_at: Scalars['timestamptz'];
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id: Scalars['bigint'];
  /** An object relationship */
  privateVd?: Maybe<MemoPrivateVd>;
  updated_at: Scalars['timestamptz'];
  /** An array relationship */
  users: Array<UserMemo>;
  /** An aggregate relationship */
  users_aggregate: UserMemo_Aggregate;
};


/** columns and relationships of "tbl_memo" */
export type MemoDataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "tbl_memo" */
export type MemoUsersArgs = {
  distinct_on?: Maybe<Array<UserMemo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserMemo_Order_By>>;
  where?: Maybe<UserMemo_Bool_Exp>;
};


/** columns and relationships of "tbl_memo" */
export type MemoUsers_AggregateArgs = {
  distinct_on?: Maybe<Array<UserMemo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserMemo_Order_By>>;
  where?: Maybe<UserMemo_Bool_Exp>;
};

/** columns and relationships of "view_memo_private_vd" */
export type MemoPrivateVd = {
  __typename?: 'memoPrivateVd';
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  publicData?: Maybe<Memo>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};


/** columns and relationships of "view_memo_private_vd" */
export type MemoPrivateVdDataArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "view_memo_private_vd" */
export type MemoPrivateVd_Aggregate = {
  __typename?: 'memoPrivateVd_aggregate';
  aggregate?: Maybe<MemoPrivateVd_Aggregate_Fields>;
  nodes: Array<MemoPrivateVd>;
};

/** aggregate fields of "view_memo_private_vd" */
export type MemoPrivateVd_Aggregate_Fields = {
  __typename?: 'memoPrivateVd_aggregate_fields';
  avg?: Maybe<MemoPrivateVd_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<MemoPrivateVd_Max_Fields>;
  min?: Maybe<MemoPrivateVd_Min_Fields>;
  stddev?: Maybe<MemoPrivateVd_Stddev_Fields>;
  stddev_pop?: Maybe<MemoPrivateVd_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<MemoPrivateVd_Stddev_Samp_Fields>;
  sum?: Maybe<MemoPrivateVd_Sum_Fields>;
  var_pop?: Maybe<MemoPrivateVd_Var_Pop_Fields>;
  var_samp?: Maybe<MemoPrivateVd_Var_Samp_Fields>;
  variance?: Maybe<MemoPrivateVd_Variance_Fields>;
};


/** aggregate fields of "view_memo_private_vd" */
export type MemoPrivateVd_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<MemoPrivateVd_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type MemoPrivateVd_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type MemoPrivateVd_Avg_Fields = {
  __typename?: 'memoPrivateVd_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "view_memo_private_vd". All fields are combined with a logical 'AND'. */
export type MemoPrivateVd_Bool_Exp = {
  _and?: Maybe<Array<MemoPrivateVd_Bool_Exp>>;
  _not?: Maybe<MemoPrivateVd_Bool_Exp>;
  _or?: Maybe<Array<MemoPrivateVd_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  publicData?: Maybe<Memo_Bool_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type MemoPrivateVd_Delete_At_Path_Input = {
  data?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type MemoPrivateVd_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type MemoPrivateVd_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "view_memo_private_vd" */
export type MemoPrivateVd_Inc_Input = {
  id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "view_memo_private_vd" */
export type MemoPrivateVd_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  publicData?: Maybe<Memo_Obj_Rel_Insert_Input>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type MemoPrivateVd_Max_Fields = {
  __typename?: 'memoPrivateVd_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type MemoPrivateVd_Min_Fields = {
  __typename?: 'memoPrivateVd_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "view_memo_private_vd" */
export type MemoPrivateVd_Mutation_Response = {
  __typename?: 'memoPrivateVd_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<MemoPrivateVd>;
};

/** input type for inserting object relation for remote table "view_memo_private_vd" */
export type MemoPrivateVd_Obj_Rel_Insert_Input = {
  data: MemoPrivateVd_Insert_Input;
};

/** Ordering options when selecting data from "view_memo_private_vd". */
export type MemoPrivateVd_Order_By = {
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  publicData?: Maybe<Memo_Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type MemoPrivateVd_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "view_memo_private_vd" */
export enum MemoPrivateVd_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "view_memo_private_vd" */
export type MemoPrivateVd_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type MemoPrivateVd_Stddev_Fields = {
  __typename?: 'memoPrivateVd_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type MemoPrivateVd_Stddev_Pop_Fields = {
  __typename?: 'memoPrivateVd_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type MemoPrivateVd_Stddev_Samp_Fields = {
  __typename?: 'memoPrivateVd_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type MemoPrivateVd_Sum_Fields = {
  __typename?: 'memoPrivateVd_sum_fields';
  id?: Maybe<Scalars['bigint']>;
};

/** aggregate var_pop on columns */
export type MemoPrivateVd_Var_Pop_Fields = {
  __typename?: 'memoPrivateVd_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type MemoPrivateVd_Var_Samp_Fields = {
  __typename?: 'memoPrivateVd_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type MemoPrivateVd_Variance_Fields = {
  __typename?: 'memoPrivateVd_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregated selection of "tbl_memo" */
export type Memo_Aggregate = {
  __typename?: 'memo_aggregate';
  aggregate?: Maybe<Memo_Aggregate_Fields>;
  nodes: Array<Memo>;
};

/** aggregate fields of "tbl_memo" */
export type Memo_Aggregate_Fields = {
  __typename?: 'memo_aggregate_fields';
  avg?: Maybe<Memo_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Memo_Max_Fields>;
  min?: Maybe<Memo_Min_Fields>;
  stddev?: Maybe<Memo_Stddev_Fields>;
  stddev_pop?: Maybe<Memo_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Memo_Stddev_Samp_Fields>;
  sum?: Maybe<Memo_Sum_Fields>;
  var_pop?: Maybe<Memo_Var_Pop_Fields>;
  var_samp?: Maybe<Memo_Var_Samp_Fields>;
  variance?: Maybe<Memo_Variance_Fields>;
};


/** aggregate fields of "tbl_memo" */
export type Memo_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Memo_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Memo_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type Memo_Avg_Fields = {
  __typename?: 'memo_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "tbl_memo". All fields are combined with a logical 'AND'. */
export type Memo_Bool_Exp = {
  _and?: Maybe<Array<Memo_Bool_Exp>>;
  _not?: Maybe<Memo_Bool_Exp>;
  _or?: Maybe<Array<Memo_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  privateVd?: Maybe<MemoPrivateVd_Bool_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  users?: Maybe<UserMemo_Bool_Exp>;
};

/** unique or primary key constraints on table "tbl_memo" */
export enum Memo_Constraint {
  /** unique or primary key constraint */
  TblMemoPkey = 'tbl_memo_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Memo_Delete_At_Path_Input = {
  data?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Memo_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Memo_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "tbl_memo" */
export type Memo_Inc_Input = {
  id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "tbl_memo" */
export type Memo_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  privateVd?: Maybe<MemoPrivateVd_Obj_Rel_Insert_Input>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  users?: Maybe<UserMemo_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Memo_Max_Fields = {
  __typename?: 'memo_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Memo_Min_Fields = {
  __typename?: 'memo_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "tbl_memo" */
export type Memo_Mutation_Response = {
  __typename?: 'memo_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Memo>;
};

/** input type for inserting object relation for remote table "tbl_memo" */
export type Memo_Obj_Rel_Insert_Input = {
  data: Memo_Insert_Input;
  /** on conflict condition */
  on_conflict?: Maybe<Memo_On_Conflict>;
};

/** on conflict condition type for table "tbl_memo" */
export type Memo_On_Conflict = {
  constraint: Memo_Constraint;
  update_columns: Array<Memo_Update_Column>;
  where?: Maybe<Memo_Bool_Exp>;
};

/** Ordering options when selecting data from "tbl_memo". */
export type Memo_Order_By = {
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  privateVd?: Maybe<MemoPrivateVd_Order_By>;
  updated_at?: Maybe<Order_By>;
  users_aggregate?: Maybe<UserMemo_Aggregate_Order_By>;
};

/** primary key columns input for table: memo */
export type Memo_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Memo_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "tbl_memo" */
export enum Memo_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "tbl_memo" */
export type Memo_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Memo_Stddev_Fields = {
  __typename?: 'memo_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Memo_Stddev_Pop_Fields = {
  __typename?: 'memo_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Memo_Stddev_Samp_Fields = {
  __typename?: 'memo_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Memo_Sum_Fields = {
  __typename?: 'memo_sum_fields';
  id?: Maybe<Scalars['bigint']>;
};

/** update columns of table "tbl_memo" */
export enum Memo_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Memo_Var_Pop_Fields = {
  __typename?: 'memo_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Memo_Var_Samp_Fields = {
  __typename?: 'memo_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Memo_Variance_Fields = {
  __typename?: 'memo_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** mutation root */
export type Mutation_Root = {
  __typename?: 'mutation_root';
  /** insert a single row into the table: "tbl_account_link" */
  addAccountLink?: Maybe<AccountLink>;
  /** insert a single row into the table: "view_account_link_private_vd" */
  addAccountLinkPrivateVd?: Maybe<AccountLinkPrivateVd>;
  /** insert data into the table: "view_account_link_private_vd" */
  addAccountLinkPrivateVds?: Maybe<AccountLinkPrivateVd_Mutation_Response>;
  /** insert data into the table: "tbl_account_link" */
  addAccountLinks?: Maybe<AccountLink_Mutation_Response>;
  /** insert a single row into the table: "tbl_browser_session" */
  addBrowserSession?: Maybe<BrowserSession>;
  /** insert data into the table: "tbl_browser_session" */
  addBrowserSessions?: Maybe<BrowserSession_Mutation_Response>;
  /** insert a single row into the table: "tbl_buyer_info" */
  addBuyerInfo?: Maybe<BuyerInfo>;
  /** insert a single row into the table: "view_buyer_info_private_vd" */
  addBuyerInfoPrivateVd?: Maybe<BuyerInfoPrivateVd>;
  /** insert data into the table: "view_buyer_info_private_vd" */
  addBuyerInfoPrivateVds?: Maybe<BuyerInfoPrivateVd_Mutation_Response>;
  /** insert data into the table: "tbl_buyer_info" */
  addBuyerInfos?: Maybe<BuyerInfo_Mutation_Response>;
  /** insert a single row into the table: "tbl_campaign" */
  addCampaign?: Maybe<Campaign>;
  /** insert a single row into the table: "view_campaign_private_vd" */
  addCampaignPrivateVd?: Maybe<CampaignPrivateVd>;
  /** insert data into the table: "view_campaign_private_vd" */
  addCampaignPrivateVds?: Maybe<CampaignPrivateVd_Mutation_Response>;
  /** insert data into the table: "tbl_campaign" */
  addCampaigns?: Maybe<Campaign_Mutation_Response>;
  /** insert a single row into the table: "mn_cart_product" */
  addCartProduct?: Maybe<CartProduct>;
  /** insert a single row into the table: "view_cart_product_private_vd" */
  addCartProductPrivateVd?: Maybe<CartProductPrivateVd>;
  /** insert data into the table: "view_cart_product_private_vd" */
  addCartProductPrivateVds?: Maybe<CartProductPrivateVd_Mutation_Response>;
  /** insert data into the table: "mn_cart_product" */
  addCartProducts?: Maybe<CartProduct_Mutation_Response>;
  /** insert a single row into the table: "tbl_contact_us_message" */
  addContactUsMessage?: Maybe<ContactUsMessage>;
  /** insert data into the table: "tbl_contact_us_message" */
  addContactUsMessages?: Maybe<ContactUsMessage_Mutation_Response>;
  /** insert a single row into the table: "tbl_coupon" */
  addCoupon?: Maybe<Coupon>;
  /** insert a single row into the table: "view_coupon_private_vd" */
  addCouponPrivateVd?: Maybe<CouponPrivateVd>;
  /** insert data into the table: "view_coupon_private_vd" */
  addCouponPrivateVds?: Maybe<CouponPrivateVd_Mutation_Response>;
  /** insert a single row into the table: "tbl_coupon_record" */
  addCouponRecord?: Maybe<CouponRecord>;
  /** insert a single row into the table: "view_coupon_record_private_vd" */
  addCouponRecordPrivateVd?: Maybe<CouponRecordPrivateVd>;
  /** insert data into the table: "view_coupon_record_private_vd" */
  addCouponRecordPrivateVds?: Maybe<CouponRecordPrivateVd_Mutation_Response>;
  /** insert data into the table: "tbl_coupon_record" */
  addCouponRecords?: Maybe<CouponRecord_Mutation_Response>;
  /** insert data into the table: "tbl_coupon" */
  addCoupons?: Maybe<Coupon_Mutation_Response>;
  /** insert a single row into the table: "mn_group_invitation" */
  addGroupInvitation?: Maybe<GroupInvitation>;
  /** insert a single row into the table: "view_group_invitation_private_vd" */
  addGroupInvitationPrivateVd?: Maybe<GroupInvitationPrivateVd>;
  /** insert data into the table: "view_group_invitation_private_vd" */
  addGroupInvitationPrivateVds?: Maybe<GroupInvitationPrivateVd_Mutation_Response>;
  /** insert data into the table: "mn_group_invitation" */
  addGroupInvitations?: Maybe<GroupInvitation_Mutation_Response>;
  /** insert a single row into the table: "tbl_issue" */
  addIssue?: Maybe<Issue>;
  /** insert a single row into the table: "tbl_issue_comment" */
  addIssueComment?: Maybe<IssueComment>;
  /** insert data into the table: "tbl_issue_comment" */
  addIssueComments?: Maybe<IssueComment_Mutation_Response>;
  /** insert data into the table: "tbl_issue" */
  addIssues?: Maybe<Issue_Mutation_Response>;
  /** insert a single row into the table: "tbl_log" */
  addLog?: Maybe<Log>;
  /** insert data into the table: "tbl_log" */
  addLogs?: Maybe<Log_Mutation_Response>;
  /** insert a single row into the table: "tbl_memo" */
  addMemo?: Maybe<Memo>;
  /** insert a single row into the table: "view_memo_private_vd" */
  addMemoPrivateVd?: Maybe<MemoPrivateVd>;
  /** insert data into the table: "view_memo_private_vd" */
  addMemoPrivateVds?: Maybe<MemoPrivateVd_Mutation_Response>;
  /** insert data into the table: "tbl_memo" */
  addMemos?: Maybe<Memo_Mutation_Response>;
  /** insert a single row into the table: "tbl_notification" */
  addNotification?: Maybe<Notification>;
  /** insert data into the table: "tbl_notification" */
  addNotifications?: Maybe<Notification_Mutation_Response>;
  /** insert a single row into the table: "tbl_order" */
  addOrder?: Maybe<Order>;
  /** insert a single row into the table: "mn_order_campaign" */
  addOrderCampaign?: Maybe<OrderCampaign>;
  /** insert a single row into the table: "view_order_campaign_private_vd" */
  addOrderCampaignPrivateVd?: Maybe<OrderCampaignPrivateVd>;
  /** insert data into the table: "view_order_campaign_private_vd" */
  addOrderCampaignPrivateVds?: Maybe<OrderCampaignPrivateVd_Mutation_Response>;
  /** insert data into the table: "mn_order_campaign" */
  addOrderCampaigns?: Maybe<OrderCampaign_Mutation_Response>;
  /** insert a single row into the table: "view_order_private_vd" */
  addOrderPrivateVd?: Maybe<OrderPrivateVd>;
  /** insert data into the table: "view_order_private_vd" */
  addOrderPrivateVds?: Maybe<OrderPrivateVd_Mutation_Response>;
  /** insert a single row into the table: "mn_order_product" */
  addOrderProduct?: Maybe<OrderProduct>;
  /** insert a single row into the table: "view_order_product_private_vd" */
  addOrderProductPrivateVd?: Maybe<OrderProductPrivateVd>;
  /** insert data into the table: "view_order_product_private_vd" */
  addOrderProductPrivateVds?: Maybe<OrderProductPrivateVd_Mutation_Response>;
  /** insert data into the table: "mn_order_product" */
  addOrderProducts?: Maybe<OrderProduct_Mutation_Response>;
  /** insert data into the table: "tbl_order" */
  addOrders?: Maybe<Order_Mutation_Response>;
  /** insert a single row into the table: "tbl_organization" */
  addOrganization?: Maybe<Organization>;
  /** insert a single row into the table: "mn_organization_invitation" */
  addOrganizationInvitation?: Maybe<OrganizationInvitation>;
  /** insert a single row into the table: "view_organization_invitation_private_vd" */
  addOrganizationInvitationPrivateVd?: Maybe<OrganizationInvitationPrivateVd>;
  /** insert data into the table: "view_organization_invitation_private_vd" */
  addOrganizationInvitationPrivateVds?: Maybe<OrganizationInvitationPrivateVd_Mutation_Response>;
  /** insert data into the table: "mn_organization_invitation" */
  addOrganizationInvitations?: Maybe<OrganizationInvitation_Mutation_Response>;
  /** insert a single row into the table: "view_organization_private_vd" */
  addOrganizationPrivateVd?: Maybe<OrganizationPrivateVd>;
  /** insert data into the table: "view_organization_private_vd" */
  addOrganizationPrivateVds?: Maybe<OrganizationPrivateVd_Mutation_Response>;
  /** insert data into the table: "tbl_organization" */
  addOrganizations?: Maybe<Organization_Mutation_Response>;
  /** insert a single row into the table: "tbl_product" */
  addProduct?: Maybe<Product>;
  /** insert data into the table: "tbl_product_category" */
  addProductCategories?: Maybe<ProductCategory_Mutation_Response>;
  /** insert a single row into the table: "tbl_product_category" */
  addProductCategory?: Maybe<ProductCategory>;
  /** insert a single row into the table: "view_product_category_private_vd" */
  addProductCategoryPrivateVd?: Maybe<ProductCategoryPrivateVd>;
  /** insert data into the table: "view_product_category_private_vd" */
  addProductCategoryPrivateVds?: Maybe<ProductCategoryPrivateVd_Mutation_Response>;
  /** insert a single row into the table: "tbl_product_group" */
  addProductGroup?: Maybe<ProductGroup>;
  /** insert a single row into the table: "mn_product_group_campaign" */
  addProductGroupCampaign?: Maybe<ProductGroupCampaign>;
  /** insert a single row into the table: "view_product_group_campaign_private_vd" */
  addProductGroupCampaignPrivateVd?: Maybe<ProductGroupCampaignPrivateVd>;
  /** insert data into the table: "view_product_group_campaign_private_vd" */
  addProductGroupCampaignPrivateVds?: Maybe<ProductGroupCampaignPrivateVd_Mutation_Response>;
  /** insert data into the table: "mn_product_group_campaign" */
  addProductGroupCampaigns?: Maybe<ProductGroupCampaign_Mutation_Response>;
  /** insert a single row into the table: "view_product_group_private_vd" */
  addProductGroupPrivateVd?: Maybe<ProductGroupPrivateVd>;
  /** insert data into the table: "view_product_group_private_vd" */
  addProductGroupPrivateVds?: Maybe<ProductGroupPrivateVd_Mutation_Response>;
  /** insert data into the table: "tbl_product_group" */
  addProductGroups?: Maybe<ProductGroup_Mutation_Response>;
  /** insert a single row into the table: "view_product_private_vd" */
  addProductPrivateVd?: Maybe<ProductPrivateVd>;
  /** insert data into the table: "view_product_private_vd" */
  addProductPrivateVds?: Maybe<ProductPrivateVd_Mutation_Response>;
  /** insert a single row into the table: "tbl_product_spec" */
  addProductSpec?: Maybe<ProductSpec>;
  /** insert a single row into the table: "view_product_spec_private_vd" */
  addProductSpecPrivateVd?: Maybe<ProductSpecPrivateVd>;
  /** insert data into the table: "view_product_spec_private_vd" */
  addProductSpecPrivateVds?: Maybe<ProductSpecPrivateVd_Mutation_Response>;
  /** insert data into the table: "tbl_product_spec" */
  addProductSpecs?: Maybe<ProductSpec_Mutation_Response>;
  /** insert data into the table: "tbl_product" */
  addProducts?: Maybe<Product_Mutation_Response>;
  /** insert a single row into the table: "tbl_project" */
  addProject?: Maybe<Project>;
  /** insert a single row into the table: "mn_project_invitation" */
  addProjectInvitation?: Maybe<ProjectInvitation>;
  /** insert a single row into the table: "view_project_invitation_private_vd" */
  addProjectInvitationPrivateVd?: Maybe<ProjectInvitationPrivateVd>;
  /** insert data into the table: "view_project_invitation_private_vd" */
  addProjectInvitationPrivateVds?: Maybe<ProjectInvitationPrivateVd_Mutation_Response>;
  /** insert data into the table: "mn_project_invitation" */
  addProjectInvitations?: Maybe<ProjectInvitation_Mutation_Response>;
  /** insert a single row into the table: "view_project_private_vd" */
  addProjectPrivateVd?: Maybe<ProjectPrivateVd>;
  /** insert data into the table: "view_project_private_vd" */
  addProjectPrivateVds?: Maybe<ProjectPrivateVd_Mutation_Response>;
  /** insert data into the table: "tbl_project" */
  addProjects?: Maybe<Project_Mutation_Response>;
  /** insert a single row into the table: "tbl_recipient_info" */
  addRecipientInfo?: Maybe<RecipientInfo>;
  /** insert a single row into the table: "view_recipient_info_private_vd" */
  addRecipientInfoPrivateVd?: Maybe<RecipientInfoPrivateVd>;
  /** insert data into the table: "view_recipient_info_private_vd" */
  addRecipientInfoPrivateVds?: Maybe<RecipientInfoPrivateVd_Mutation_Response>;
  /** insert data into the table: "tbl_recipient_info" */
  addRecipientInfos?: Maybe<RecipientInfo_Mutation_Response>;
  /** insert a single row into the table: "tbl_recovery_token" */
  addRecoveryToken?: Maybe<RecoveryToken>;
  /** insert data into the table: "tbl_recovery_token" */
  addRecoveryTokens?: Maybe<RecoveryToken_Mutation_Response>;
  /** insert a single row into the table: "tbl_shipping_fee" */
  addShippingFee?: Maybe<ShippingFee>;
  /** insert a single row into the table: "view_shipping_fee_private_vd" */
  addShippingFeePrivateVd?: Maybe<ShippingFeePrivateVd>;
  /** insert data into the table: "view_shipping_fee_private_vd" */
  addShippingFeePrivateVds?: Maybe<ShippingFeePrivateVd_Mutation_Response>;
  /** insert data into the table: "tbl_shipping_fee" */
  addShippingFees?: Maybe<ShippingFee_Mutation_Response>;
  /** insert a single row into the table: "tbl_subscription_order" */
  addSubscriptionOrder?: Maybe<SubscriptionOrder>;
  /** insert a single row into the table: "view_subscription_order_private_vd" */
  addSubscriptionOrderPrivateVd?: Maybe<SubscriptionOrderPrivateVd>;
  /** insert data into the table: "view_subscription_order_private_vd" */
  addSubscriptionOrderPrivateVds?: Maybe<SubscriptionOrderPrivateVd_Mutation_Response>;
  /** insert data into the table: "tbl_subscription_order" */
  addSubscriptionOrders?: Maybe<SubscriptionOrder_Mutation_Response>;
  /** insert a single row into the table: "tbl_user" */
  addUser?: Maybe<User>;
  /** insert a single row into the table: "tbl_user_group" */
  addUserGroup?: Maybe<UserGroup>;
  /** insert a single row into the table: "view_user_group_private_vd" */
  addUserGroupPrivateVd?: Maybe<UserGroupPrivateVd>;
  /** insert data into the table: "view_user_group_private_vd" */
  addUserGroupPrivateVds?: Maybe<UserGroupPrivateVd_Mutation_Response>;
  /** insert data into the table: "tbl_user_group" */
  addUserGroups?: Maybe<UserGroup_Mutation_Response>;
  /** insert a single row into the table: "mn_user_memo" */
  addUserMemo?: Maybe<UserMemo>;
  /** insert a single row into the table: "view_user_memo_private_vd" */
  addUserMemoPrivateVd?: Maybe<UserMemoPrivateVd>;
  /** insert data into the table: "view_user_memo_private_vd" */
  addUserMemoPrivateVds?: Maybe<UserMemoPrivateVd_Mutation_Response>;
  /** insert data into the table: "mn_user_memo" */
  addUserMemos?: Maybe<UserMemo_Mutation_Response>;
  /** insert a single row into the table: "mn_user_organization" */
  addUserOrganization?: Maybe<UserOrganization>;
  /** insert a single row into the table: "view_user_organization_private_vd" */
  addUserOrganizationPrivateVd?: Maybe<UserOrganizationPrivateVd>;
  /** insert data into the table: "view_user_organization_private_vd" */
  addUserOrganizationPrivateVds?: Maybe<UserOrganizationPrivateVd_Mutation_Response>;
  /** insert data into the table: "mn_user_organization" */
  addUserOrganizations?: Maybe<UserOrganization_Mutation_Response>;
  /** insert a single row into the table: "view_user_private_vd" */
  addUserPrivateVd?: Maybe<UserPrivateVd>;
  /** insert data into the table: "view_user_private_vd" */
  addUserPrivateVds?: Maybe<UserPrivateVd_Mutation_Response>;
  /** insert a single row into the table: "mn_user_project" */
  addUserProject?: Maybe<UserProject>;
  /** insert a single row into the table: "view_user_project_private_vd" */
  addUserProjectPrivateVd?: Maybe<UserProjectPrivateVd>;
  /** insert data into the table: "view_user_project_private_vd" */
  addUserProjectPrivateVds?: Maybe<UserProjectPrivateVd_Mutation_Response>;
  /** insert data into the table: "mn_user_project" */
  addUserProjects?: Maybe<UserProject_Mutation_Response>;
  /** insert a single row into the table: "tbl_user_setting" */
  addUserSetting?: Maybe<UserSetting>;
  /** insert a single row into the table: "view_user_setting_private_vd" */
  addUserSettingPrivateVd?: Maybe<UserSettingPrivateVd>;
  /** insert data into the table: "view_user_setting_private_vd" */
  addUserSettingPrivateVds?: Maybe<UserSettingPrivateVd_Mutation_Response>;
  /** insert data into the table: "tbl_user_setting" */
  addUserSettings?: Maybe<UserSetting_Mutation_Response>;
  /** insert a single row into the table: "mn_user_user_group" */
  addUserUserGroup?: Maybe<UserUserGroup>;
  /** insert a single row into the table: "view_user_user_group_private_vd" */
  addUserUserGroupPrivateVd?: Maybe<UserUserGroupPrivateVd>;
  /** insert data into the table: "view_user_user_group_private_vd" */
  addUserUserGroupPrivateVds?: Maybe<UserUserGroupPrivateVd_Mutation_Response>;
  /** insert data into the table: "mn_user_user_group" */
  addUserUserGroups?: Maybe<UserUserGroup_Mutation_Response>;
  /** insert data into the table: "tbl_user" */
  addUsers?: Maybe<User_Mutation_Response>;
  /** delete single row from the table: "tbl_account_link" */
  deleteAccountLink?: Maybe<AccountLink>;
  /** delete data from the table: "view_account_link_private_vd" */
  deleteAccountLinkPrivateVds?: Maybe<AccountLinkPrivateVd_Mutation_Response>;
  /** delete data from the table: "tbl_account_link" */
  deleteAccountLinks?: Maybe<AccountLink_Mutation_Response>;
  /** delete single row from the table: "tbl_browser_session" */
  deleteBrowserSession?: Maybe<BrowserSession>;
  /** delete data from the table: "tbl_browser_session" */
  deleteBrowserSessions?: Maybe<BrowserSession_Mutation_Response>;
  /** delete single row from the table: "tbl_buyer_info" */
  deleteBuyerInfo?: Maybe<BuyerInfo>;
  /** delete data from the table: "view_buyer_info_private_vd" */
  deleteBuyerInfoPrivateVds?: Maybe<BuyerInfoPrivateVd_Mutation_Response>;
  /** delete data from the table: "tbl_buyer_info" */
  deleteBuyerInfos?: Maybe<BuyerInfo_Mutation_Response>;
  /** delete single row from the table: "tbl_campaign" */
  deleteCampaign?: Maybe<Campaign>;
  /** delete data from the table: "view_campaign_private_vd" */
  deleteCampaignPrivateVds?: Maybe<CampaignPrivateVd_Mutation_Response>;
  /** delete data from the table: "tbl_campaign" */
  deleteCampaigns?: Maybe<Campaign_Mutation_Response>;
  /** delete single row from the table: "mn_cart_product" */
  deleteCartProduct?: Maybe<CartProduct>;
  /** delete data from the table: "view_cart_product_private_vd" */
  deleteCartProductPrivateVds?: Maybe<CartProductPrivateVd_Mutation_Response>;
  /** delete data from the table: "mn_cart_product" */
  deleteCartProducts?: Maybe<CartProduct_Mutation_Response>;
  /** delete single row from the table: "tbl_contact_us_message" */
  deleteContactUsMessage?: Maybe<ContactUsMessage>;
  /** delete data from the table: "tbl_contact_us_message" */
  deleteContactUsMessages?: Maybe<ContactUsMessage_Mutation_Response>;
  /** delete single row from the table: "tbl_coupon" */
  deleteCoupon?: Maybe<Coupon>;
  /** delete data from the table: "view_coupon_private_vd" */
  deleteCouponPrivateVds?: Maybe<CouponPrivateVd_Mutation_Response>;
  /** delete single row from the table: "tbl_coupon_record" */
  deleteCouponRecord?: Maybe<CouponRecord>;
  /** delete data from the table: "view_coupon_record_private_vd" */
  deleteCouponRecordPrivateVds?: Maybe<CouponRecordPrivateVd_Mutation_Response>;
  /** delete data from the table: "tbl_coupon_record" */
  deleteCouponRecords?: Maybe<CouponRecord_Mutation_Response>;
  /** delete data from the table: "tbl_coupon" */
  deleteCoupons?: Maybe<Coupon_Mutation_Response>;
  /** delete single row from the table: "mn_group_invitation" */
  deleteGroupInvitation?: Maybe<GroupInvitation>;
  /** delete data from the table: "view_group_invitation_private_vd" */
  deleteGroupInvitationPrivateVds?: Maybe<GroupInvitationPrivateVd_Mutation_Response>;
  /** delete data from the table: "mn_group_invitation" */
  deleteGroupInvitations?: Maybe<GroupInvitation_Mutation_Response>;
  /** delete single row from the table: "tbl_issue" */
  deleteIssue?: Maybe<Issue>;
  /** delete single row from the table: "tbl_issue_comment" */
  deleteIssueComment?: Maybe<IssueComment>;
  /** delete data from the table: "tbl_issue_comment" */
  deleteIssueComments?: Maybe<IssueComment_Mutation_Response>;
  /** delete data from the table: "tbl_issue" */
  deleteIssues?: Maybe<Issue_Mutation_Response>;
  /** delete single row from the table: "tbl_log" */
  deleteLog?: Maybe<Log>;
  /** delete data from the table: "tbl_log" */
  deleteLogs?: Maybe<Log_Mutation_Response>;
  /** delete single row from the table: "tbl_memo" */
  deleteMemo?: Maybe<Memo>;
  /** delete data from the table: "view_memo_private_vd" */
  deleteMemoPrivateVds?: Maybe<MemoPrivateVd_Mutation_Response>;
  /** delete data from the table: "tbl_memo" */
  deleteMemos?: Maybe<Memo_Mutation_Response>;
  /** delete single row from the table: "tbl_notification" */
  deleteNotification?: Maybe<Notification>;
  /** delete data from the table: "tbl_notification" */
  deleteNotifications?: Maybe<Notification_Mutation_Response>;
  /** delete single row from the table: "tbl_order" */
  deleteOrder?: Maybe<Order>;
  /** delete single row from the table: "mn_order_campaign" */
  deleteOrderCampaign?: Maybe<OrderCampaign>;
  /** delete data from the table: "view_order_campaign_private_vd" */
  deleteOrderCampaignPrivateVds?: Maybe<OrderCampaignPrivateVd_Mutation_Response>;
  /** delete data from the table: "mn_order_campaign" */
  deleteOrderCampaigns?: Maybe<OrderCampaign_Mutation_Response>;
  /** delete data from the table: "view_order_private_vd" */
  deleteOrderPrivateVds?: Maybe<OrderPrivateVd_Mutation_Response>;
  /** delete single row from the table: "mn_order_product" */
  deleteOrderProduct?: Maybe<OrderProduct>;
  /** delete data from the table: "view_order_product_private_vd" */
  deleteOrderProductPrivateVds?: Maybe<OrderProductPrivateVd_Mutation_Response>;
  /** delete data from the table: "mn_order_product" */
  deleteOrderProducts?: Maybe<OrderProduct_Mutation_Response>;
  /** delete data from the table: "tbl_order" */
  deleteOrders?: Maybe<Order_Mutation_Response>;
  /** delete single row from the table: "tbl_organization" */
  deleteOrganization?: Maybe<Organization>;
  /** delete single row from the table: "mn_organization_invitation" */
  deleteOrganizationInvitation?: Maybe<OrganizationInvitation>;
  /** delete data from the table: "view_organization_invitation_private_vd" */
  deleteOrganizationInvitationPrivateVds?: Maybe<OrganizationInvitationPrivateVd_Mutation_Response>;
  /** delete data from the table: "mn_organization_invitation" */
  deleteOrganizationInvitations?: Maybe<OrganizationInvitation_Mutation_Response>;
  /** delete data from the table: "view_organization_private_vd" */
  deleteOrganizationPrivateVds?: Maybe<OrganizationPrivateVd_Mutation_Response>;
  /** delete data from the table: "tbl_organization" */
  deleteOrganizations?: Maybe<Organization_Mutation_Response>;
  /** delete single row from the table: "tbl_product" */
  deleteProduct?: Maybe<Product>;
  /** delete data from the table: "tbl_product_category" */
  deleteProductCategories?: Maybe<ProductCategory_Mutation_Response>;
  /** delete single row from the table: "tbl_product_category" */
  deleteProductCategory?: Maybe<ProductCategory>;
  /** delete data from the table: "view_product_category_private_vd" */
  deleteProductCategoryPrivateVds?: Maybe<ProductCategoryPrivateVd_Mutation_Response>;
  /** delete single row from the table: "tbl_product_group" */
  deleteProductGroup?: Maybe<ProductGroup>;
  /** delete single row from the table: "mn_product_group_campaign" */
  deleteProductGroupCampaign?: Maybe<ProductGroupCampaign>;
  /** delete data from the table: "view_product_group_campaign_private_vd" */
  deleteProductGroupCampaignPrivateVds?: Maybe<ProductGroupCampaignPrivateVd_Mutation_Response>;
  /** delete data from the table: "mn_product_group_campaign" */
  deleteProductGroupCampaigns?: Maybe<ProductGroupCampaign_Mutation_Response>;
  /** delete data from the table: "view_product_group_private_vd" */
  deleteProductGroupPrivateVds?: Maybe<ProductGroupPrivateVd_Mutation_Response>;
  /** delete data from the table: "tbl_product_group" */
  deleteProductGroups?: Maybe<ProductGroup_Mutation_Response>;
  /** delete data from the table: "view_product_private_vd" */
  deleteProductPrivateVds?: Maybe<ProductPrivateVd_Mutation_Response>;
  /** delete single row from the table: "tbl_product_spec" */
  deleteProductSpec?: Maybe<ProductSpec>;
  /** delete data from the table: "view_product_spec_private_vd" */
  deleteProductSpecPrivateVds?: Maybe<ProductSpecPrivateVd_Mutation_Response>;
  /** delete data from the table: "tbl_product_spec" */
  deleteProductSpecs?: Maybe<ProductSpec_Mutation_Response>;
  /** delete data from the table: "tbl_product" */
  deleteProducts?: Maybe<Product_Mutation_Response>;
  /** delete single row from the table: "tbl_project" */
  deleteProject?: Maybe<Project>;
  /** delete single row from the table: "mn_project_invitation" */
  deleteProjectInvitation?: Maybe<ProjectInvitation>;
  /** delete data from the table: "view_project_invitation_private_vd" */
  deleteProjectInvitationPrivateVds?: Maybe<ProjectInvitationPrivateVd_Mutation_Response>;
  /** delete data from the table: "mn_project_invitation" */
  deleteProjectInvitations?: Maybe<ProjectInvitation_Mutation_Response>;
  /** delete data from the table: "view_project_private_vd" */
  deleteProjectPrivateVds?: Maybe<ProjectPrivateVd_Mutation_Response>;
  /** delete data from the table: "tbl_project" */
  deleteProjects?: Maybe<Project_Mutation_Response>;
  /** delete single row from the table: "tbl_recipient_info" */
  deleteRecipientInfo?: Maybe<RecipientInfo>;
  /** delete data from the table: "view_recipient_info_private_vd" */
  deleteRecipientInfoPrivateVds?: Maybe<RecipientInfoPrivateVd_Mutation_Response>;
  /** delete data from the table: "tbl_recipient_info" */
  deleteRecipientInfos?: Maybe<RecipientInfo_Mutation_Response>;
  /** delete single row from the table: "tbl_recovery_token" */
  deleteRecoveryToken?: Maybe<RecoveryToken>;
  /** delete data from the table: "tbl_recovery_token" */
  deleteRecoveryTokens?: Maybe<RecoveryToken_Mutation_Response>;
  /** delete single row from the table: "tbl_shipping_fee" */
  deleteShippingFee?: Maybe<ShippingFee>;
  /** delete data from the table: "view_shipping_fee_private_vd" */
  deleteShippingFeePrivateVds?: Maybe<ShippingFeePrivateVd_Mutation_Response>;
  /** delete data from the table: "tbl_shipping_fee" */
  deleteShippingFees?: Maybe<ShippingFee_Mutation_Response>;
  /** delete single row from the table: "tbl_subscription_order" */
  deleteSubscriptionOrder?: Maybe<SubscriptionOrder>;
  /** delete data from the table: "view_subscription_order_private_vd" */
  deleteSubscriptionOrderPrivateVds?: Maybe<SubscriptionOrderPrivateVd_Mutation_Response>;
  /** delete data from the table: "tbl_subscription_order" */
  deleteSubscriptionOrders?: Maybe<SubscriptionOrder_Mutation_Response>;
  /** delete single row from the table: "tbl_user" */
  deleteUser?: Maybe<User>;
  /** delete single row from the table: "tbl_user_group" */
  deleteUserGroup?: Maybe<UserGroup>;
  /** delete data from the table: "view_user_group_private_vd" */
  deleteUserGroupPrivateVds?: Maybe<UserGroupPrivateVd_Mutation_Response>;
  /** delete data from the table: "tbl_user_group" */
  deleteUserGroups?: Maybe<UserGroup_Mutation_Response>;
  /** delete single row from the table: "mn_user_memo" */
  deleteUserMemo?: Maybe<UserMemo>;
  /** delete data from the table: "view_user_memo_private_vd" */
  deleteUserMemoPrivateVds?: Maybe<UserMemoPrivateVd_Mutation_Response>;
  /** delete data from the table: "mn_user_memo" */
  deleteUserMemos?: Maybe<UserMemo_Mutation_Response>;
  /** delete single row from the table: "mn_user_organization" */
  deleteUserOrganization?: Maybe<UserOrganization>;
  /** delete data from the table: "view_user_organization_private_vd" */
  deleteUserOrganizationPrivateVds?: Maybe<UserOrganizationPrivateVd_Mutation_Response>;
  /** delete data from the table: "mn_user_organization" */
  deleteUserOrganizations?: Maybe<UserOrganization_Mutation_Response>;
  /** delete data from the table: "view_user_private_vd" */
  deleteUserPrivateVds?: Maybe<UserPrivateVd_Mutation_Response>;
  /** delete single row from the table: "mn_user_project" */
  deleteUserProject?: Maybe<UserProject>;
  /** delete data from the table: "view_user_project_private_vd" */
  deleteUserProjectPrivateVds?: Maybe<UserProjectPrivateVd_Mutation_Response>;
  /** delete data from the table: "mn_user_project" */
  deleteUserProjects?: Maybe<UserProject_Mutation_Response>;
  /** delete single row from the table: "tbl_user_setting" */
  deleteUserSetting?: Maybe<UserSetting>;
  /** delete data from the table: "view_user_setting_private_vd" */
  deleteUserSettingPrivateVds?: Maybe<UserSettingPrivateVd_Mutation_Response>;
  /** delete data from the table: "tbl_user_setting" */
  deleteUserSettings?: Maybe<UserSetting_Mutation_Response>;
  /** delete single row from the table: "mn_user_user_group" */
  deleteUserUserGroup?: Maybe<UserUserGroup>;
  /** delete data from the table: "view_user_user_group_private_vd" */
  deleteUserUserGroupPrivateVds?: Maybe<UserUserGroupPrivateVd_Mutation_Response>;
  /** delete data from the table: "mn_user_user_group" */
  deleteUserUserGroups?: Maybe<UserUserGroup_Mutation_Response>;
  /** delete data from the table: "tbl_user" */
  deleteUsers?: Maybe<User_Mutation_Response>;
  /** update single row of the table: "tbl_account_link" */
  updateAccountLink?: Maybe<AccountLink>;
  /** update data of the table: "view_account_link_private_vd" */
  updateAccountLinkPrivateVds?: Maybe<AccountLinkPrivateVd_Mutation_Response>;
  /** update data of the table: "tbl_account_link" */
  updateAccountLinks?: Maybe<AccountLink_Mutation_Response>;
  /** update single row of the table: "tbl_browser_session" */
  updateBrowserSession?: Maybe<BrowserSession>;
  /** update data of the table: "tbl_browser_session" */
  updateBrowserSessions?: Maybe<BrowserSession_Mutation_Response>;
  /** update single row of the table: "tbl_buyer_info" */
  updateBuyerInfo?: Maybe<BuyerInfo>;
  /** update data of the table: "view_buyer_info_private_vd" */
  updateBuyerInfoPrivateVds?: Maybe<BuyerInfoPrivateVd_Mutation_Response>;
  /** update data of the table: "tbl_buyer_info" */
  updateBuyerInfos?: Maybe<BuyerInfo_Mutation_Response>;
  /** update single row of the table: "tbl_campaign" */
  updateCampaign?: Maybe<Campaign>;
  /** update data of the table: "view_campaign_private_vd" */
  updateCampaignPrivateVds?: Maybe<CampaignPrivateVd_Mutation_Response>;
  /** update data of the table: "tbl_campaign" */
  updateCampaigns?: Maybe<Campaign_Mutation_Response>;
  /** update single row of the table: "mn_cart_product" */
  updateCartProduct?: Maybe<CartProduct>;
  /** update data of the table: "view_cart_product_private_vd" */
  updateCartProductPrivateVds?: Maybe<CartProductPrivateVd_Mutation_Response>;
  /** update data of the table: "mn_cart_product" */
  updateCartProducts?: Maybe<CartProduct_Mutation_Response>;
  /** update single row of the table: "tbl_contact_us_message" */
  updateContactUsMessage?: Maybe<ContactUsMessage>;
  /** update data of the table: "tbl_contact_us_message" */
  updateContactUsMessages?: Maybe<ContactUsMessage_Mutation_Response>;
  /** update single row of the table: "tbl_coupon" */
  updateCoupon?: Maybe<Coupon>;
  /** update data of the table: "view_coupon_private_vd" */
  updateCouponPrivateVds?: Maybe<CouponPrivateVd_Mutation_Response>;
  /** update single row of the table: "tbl_coupon_record" */
  updateCouponRecord?: Maybe<CouponRecord>;
  /** update data of the table: "view_coupon_record_private_vd" */
  updateCouponRecordPrivateVds?: Maybe<CouponRecordPrivateVd_Mutation_Response>;
  /** update data of the table: "tbl_coupon_record" */
  updateCouponRecords?: Maybe<CouponRecord_Mutation_Response>;
  /** update data of the table: "tbl_coupon" */
  updateCoupons?: Maybe<Coupon_Mutation_Response>;
  /** update single row of the table: "mn_group_invitation" */
  updateGroupInvitation?: Maybe<GroupInvitation>;
  /** update data of the table: "view_group_invitation_private_vd" */
  updateGroupInvitationPrivateVds?: Maybe<GroupInvitationPrivateVd_Mutation_Response>;
  /** update data of the table: "mn_group_invitation" */
  updateGroupInvitations?: Maybe<GroupInvitation_Mutation_Response>;
  /** update single row of the table: "tbl_issue" */
  updateIssue?: Maybe<Issue>;
  /** update single row of the table: "tbl_issue_comment" */
  updateIssueComment?: Maybe<IssueComment>;
  /** update data of the table: "tbl_issue_comment" */
  updateIssueComments?: Maybe<IssueComment_Mutation_Response>;
  /** update data of the table: "tbl_issue" */
  updateIssues?: Maybe<Issue_Mutation_Response>;
  /** update single row of the table: "tbl_log" */
  updateLog?: Maybe<Log>;
  /** update data of the table: "tbl_log" */
  updateLogs?: Maybe<Log_Mutation_Response>;
  /** update single row of the table: "tbl_memo" */
  updateMemo?: Maybe<Memo>;
  /** update data of the table: "view_memo_private_vd" */
  updateMemoPrivateVds?: Maybe<MemoPrivateVd_Mutation_Response>;
  /** update data of the table: "tbl_memo" */
  updateMemos?: Maybe<Memo_Mutation_Response>;
  /** update single row of the table: "tbl_notification" */
  updateNotification?: Maybe<Notification>;
  /** update data of the table: "tbl_notification" */
  updateNotifications?: Maybe<Notification_Mutation_Response>;
  /** update single row of the table: "tbl_order" */
  updateOrder?: Maybe<Order>;
  /** update single row of the table: "mn_order_campaign" */
  updateOrderCampaign?: Maybe<OrderCampaign>;
  /** update data of the table: "view_order_campaign_private_vd" */
  updateOrderCampaignPrivateVds?: Maybe<OrderCampaignPrivateVd_Mutation_Response>;
  /** update data of the table: "mn_order_campaign" */
  updateOrderCampaigns?: Maybe<OrderCampaign_Mutation_Response>;
  /** update data of the table: "view_order_private_vd" */
  updateOrderPrivateVds?: Maybe<OrderPrivateVd_Mutation_Response>;
  /** update single row of the table: "mn_order_product" */
  updateOrderProduct?: Maybe<OrderProduct>;
  /** update data of the table: "view_order_product_private_vd" */
  updateOrderProductPrivateVds?: Maybe<OrderProductPrivateVd_Mutation_Response>;
  /** update data of the table: "mn_order_product" */
  updateOrderProducts?: Maybe<OrderProduct_Mutation_Response>;
  /** update data of the table: "tbl_order" */
  updateOrders?: Maybe<Order_Mutation_Response>;
  /** update single row of the table: "tbl_organization" */
  updateOrganization?: Maybe<Organization>;
  /** update single row of the table: "mn_organization_invitation" */
  updateOrganizationInvitation?: Maybe<OrganizationInvitation>;
  /** update data of the table: "view_organization_invitation_private_vd" */
  updateOrganizationInvitationPrivateVds?: Maybe<OrganizationInvitationPrivateVd_Mutation_Response>;
  /** update data of the table: "mn_organization_invitation" */
  updateOrganizationInvitations?: Maybe<OrganizationInvitation_Mutation_Response>;
  /** update data of the table: "view_organization_private_vd" */
  updateOrganizationPrivateVds?: Maybe<OrganizationPrivateVd_Mutation_Response>;
  /** update data of the table: "tbl_organization" */
  updateOrganizations?: Maybe<Organization_Mutation_Response>;
  /** update single row of the table: "tbl_product" */
  updateProduct?: Maybe<Product>;
  /** update data of the table: "tbl_product_category" */
  updateProductCategories?: Maybe<ProductCategory_Mutation_Response>;
  /** update single row of the table: "tbl_product_category" */
  updateProductCategory?: Maybe<ProductCategory>;
  /** update data of the table: "view_product_category_private_vd" */
  updateProductCategoryPrivateVds?: Maybe<ProductCategoryPrivateVd_Mutation_Response>;
  /** update single row of the table: "tbl_product_group" */
  updateProductGroup?: Maybe<ProductGroup>;
  /** update single row of the table: "mn_product_group_campaign" */
  updateProductGroupCampaign?: Maybe<ProductGroupCampaign>;
  /** update data of the table: "view_product_group_campaign_private_vd" */
  updateProductGroupCampaignPrivateVds?: Maybe<ProductGroupCampaignPrivateVd_Mutation_Response>;
  /** update data of the table: "mn_product_group_campaign" */
  updateProductGroupCampaigns?: Maybe<ProductGroupCampaign_Mutation_Response>;
  /** update data of the table: "view_product_group_private_vd" */
  updateProductGroupPrivateVds?: Maybe<ProductGroupPrivateVd_Mutation_Response>;
  /** update data of the table: "tbl_product_group" */
  updateProductGroups?: Maybe<ProductGroup_Mutation_Response>;
  /** update data of the table: "view_product_private_vd" */
  updateProductPrivateVds?: Maybe<ProductPrivateVd_Mutation_Response>;
  /** update single row of the table: "tbl_product_spec" */
  updateProductSpec?: Maybe<ProductSpec>;
  /** update data of the table: "view_product_spec_private_vd" */
  updateProductSpecPrivateVds?: Maybe<ProductSpecPrivateVd_Mutation_Response>;
  /** update data of the table: "tbl_product_spec" */
  updateProductSpecs?: Maybe<ProductSpec_Mutation_Response>;
  /** update data of the table: "tbl_product" */
  updateProducts?: Maybe<Product_Mutation_Response>;
  /** update single row of the table: "tbl_project" */
  updateProject?: Maybe<Project>;
  /** update single row of the table: "mn_project_invitation" */
  updateProjectInvitation?: Maybe<ProjectInvitation>;
  /** update data of the table: "view_project_invitation_private_vd" */
  updateProjectInvitationPrivateVds?: Maybe<ProjectInvitationPrivateVd_Mutation_Response>;
  /** update data of the table: "mn_project_invitation" */
  updateProjectInvitations?: Maybe<ProjectInvitation_Mutation_Response>;
  /** update data of the table: "view_project_private_vd" */
  updateProjectPrivateVds?: Maybe<ProjectPrivateVd_Mutation_Response>;
  /** update data of the table: "tbl_project" */
  updateProjects?: Maybe<Project_Mutation_Response>;
  /** update single row of the table: "tbl_recipient_info" */
  updateRecipientInfo?: Maybe<RecipientInfo>;
  /** update data of the table: "view_recipient_info_private_vd" */
  updateRecipientInfoPrivateVds?: Maybe<RecipientInfoPrivateVd_Mutation_Response>;
  /** update data of the table: "tbl_recipient_info" */
  updateRecipientInfos?: Maybe<RecipientInfo_Mutation_Response>;
  /** update single row of the table: "tbl_recovery_token" */
  updateRecoveryToken?: Maybe<RecoveryToken>;
  /** update data of the table: "tbl_recovery_token" */
  updateRecoveryTokens?: Maybe<RecoveryToken_Mutation_Response>;
  /** update single row of the table: "tbl_shipping_fee" */
  updateShippingFee?: Maybe<ShippingFee>;
  /** update data of the table: "view_shipping_fee_private_vd" */
  updateShippingFeePrivateVds?: Maybe<ShippingFeePrivateVd_Mutation_Response>;
  /** update data of the table: "tbl_shipping_fee" */
  updateShippingFees?: Maybe<ShippingFee_Mutation_Response>;
  /** update single row of the table: "tbl_subscription_order" */
  updateSubscriptionOrder?: Maybe<SubscriptionOrder>;
  /** update data of the table: "view_subscription_order_private_vd" */
  updateSubscriptionOrderPrivateVds?: Maybe<SubscriptionOrderPrivateVd_Mutation_Response>;
  /** update data of the table: "tbl_subscription_order" */
  updateSubscriptionOrders?: Maybe<SubscriptionOrder_Mutation_Response>;
  /** update single row of the table: "tbl_user" */
  updateUser?: Maybe<User>;
  /** update single row of the table: "tbl_user_group" */
  updateUserGroup?: Maybe<UserGroup>;
  /** update data of the table: "view_user_group_private_vd" */
  updateUserGroupPrivateVds?: Maybe<UserGroupPrivateVd_Mutation_Response>;
  /** update data of the table: "tbl_user_group" */
  updateUserGroups?: Maybe<UserGroup_Mutation_Response>;
  /** update single row of the table: "mn_user_memo" */
  updateUserMemo?: Maybe<UserMemo>;
  /** update data of the table: "view_user_memo_private_vd" */
  updateUserMemoPrivateVds?: Maybe<UserMemoPrivateVd_Mutation_Response>;
  /** update data of the table: "mn_user_memo" */
  updateUserMemos?: Maybe<UserMemo_Mutation_Response>;
  /** update single row of the table: "mn_user_organization" */
  updateUserOrganization?: Maybe<UserOrganization>;
  /** update data of the table: "view_user_organization_private_vd" */
  updateUserOrganizationPrivateVds?: Maybe<UserOrganizationPrivateVd_Mutation_Response>;
  /** update data of the table: "mn_user_organization" */
  updateUserOrganizations?: Maybe<UserOrganization_Mutation_Response>;
  /** update data of the table: "view_user_private_vd" */
  updateUserPrivateVds?: Maybe<UserPrivateVd_Mutation_Response>;
  /** update single row of the table: "mn_user_project" */
  updateUserProject?: Maybe<UserProject>;
  /** update data of the table: "view_user_project_private_vd" */
  updateUserProjectPrivateVds?: Maybe<UserProjectPrivateVd_Mutation_Response>;
  /** update data of the table: "mn_user_project" */
  updateUserProjects?: Maybe<UserProject_Mutation_Response>;
  /** update single row of the table: "tbl_user_setting" */
  updateUserSetting?: Maybe<UserSetting>;
  /** update data of the table: "view_user_setting_private_vd" */
  updateUserSettingPrivateVds?: Maybe<UserSettingPrivateVd_Mutation_Response>;
  /** update data of the table: "tbl_user_setting" */
  updateUserSettings?: Maybe<UserSetting_Mutation_Response>;
  /** update single row of the table: "mn_user_user_group" */
  updateUserUserGroup?: Maybe<UserUserGroup>;
  /** update data of the table: "view_user_user_group_private_vd" */
  updateUserUserGroupPrivateVds?: Maybe<UserUserGroupPrivateVd_Mutation_Response>;
  /** update data of the table: "mn_user_user_group" */
  updateUserUserGroups?: Maybe<UserUserGroup_Mutation_Response>;
  /** update data of the table: "tbl_user" */
  updateUsers?: Maybe<User_Mutation_Response>;
};


/** mutation root */
export type Mutation_RootAddAccountLinkArgs = {
  object: AccountLink_Insert_Input;
  on_conflict?: Maybe<AccountLink_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddAccountLinkPrivateVdArgs = {
  object: AccountLinkPrivateVd_Insert_Input;
};


/** mutation root */
export type Mutation_RootAddAccountLinkPrivateVdsArgs = {
  objects: Array<AccountLinkPrivateVd_Insert_Input>;
};


/** mutation root */
export type Mutation_RootAddAccountLinksArgs = {
  objects: Array<AccountLink_Insert_Input>;
  on_conflict?: Maybe<AccountLink_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddBrowserSessionArgs = {
  object: BrowserSession_Insert_Input;
  on_conflict?: Maybe<BrowserSession_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddBrowserSessionsArgs = {
  objects: Array<BrowserSession_Insert_Input>;
  on_conflict?: Maybe<BrowserSession_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddBuyerInfoArgs = {
  object: BuyerInfo_Insert_Input;
  on_conflict?: Maybe<BuyerInfo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddBuyerInfoPrivateVdArgs = {
  object: BuyerInfoPrivateVd_Insert_Input;
};


/** mutation root */
export type Mutation_RootAddBuyerInfoPrivateVdsArgs = {
  objects: Array<BuyerInfoPrivateVd_Insert_Input>;
};


/** mutation root */
export type Mutation_RootAddBuyerInfosArgs = {
  objects: Array<BuyerInfo_Insert_Input>;
  on_conflict?: Maybe<BuyerInfo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddCampaignArgs = {
  object: Campaign_Insert_Input;
  on_conflict?: Maybe<Campaign_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddCampaignPrivateVdArgs = {
  object: CampaignPrivateVd_Insert_Input;
};


/** mutation root */
export type Mutation_RootAddCampaignPrivateVdsArgs = {
  objects: Array<CampaignPrivateVd_Insert_Input>;
};


/** mutation root */
export type Mutation_RootAddCampaignsArgs = {
  objects: Array<Campaign_Insert_Input>;
  on_conflict?: Maybe<Campaign_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddCartProductArgs = {
  object: CartProduct_Insert_Input;
  on_conflict?: Maybe<CartProduct_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddCartProductPrivateVdArgs = {
  object: CartProductPrivateVd_Insert_Input;
};


/** mutation root */
export type Mutation_RootAddCartProductPrivateVdsArgs = {
  objects: Array<CartProductPrivateVd_Insert_Input>;
};


/** mutation root */
export type Mutation_RootAddCartProductsArgs = {
  objects: Array<CartProduct_Insert_Input>;
  on_conflict?: Maybe<CartProduct_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddContactUsMessageArgs = {
  object: ContactUsMessage_Insert_Input;
  on_conflict?: Maybe<ContactUsMessage_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddContactUsMessagesArgs = {
  objects: Array<ContactUsMessage_Insert_Input>;
  on_conflict?: Maybe<ContactUsMessage_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddCouponArgs = {
  object: Coupon_Insert_Input;
  on_conflict?: Maybe<Coupon_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddCouponPrivateVdArgs = {
  object: CouponPrivateVd_Insert_Input;
};


/** mutation root */
export type Mutation_RootAddCouponPrivateVdsArgs = {
  objects: Array<CouponPrivateVd_Insert_Input>;
};


/** mutation root */
export type Mutation_RootAddCouponRecordArgs = {
  object: CouponRecord_Insert_Input;
  on_conflict?: Maybe<CouponRecord_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddCouponRecordPrivateVdArgs = {
  object: CouponRecordPrivateVd_Insert_Input;
};


/** mutation root */
export type Mutation_RootAddCouponRecordPrivateVdsArgs = {
  objects: Array<CouponRecordPrivateVd_Insert_Input>;
};


/** mutation root */
export type Mutation_RootAddCouponRecordsArgs = {
  objects: Array<CouponRecord_Insert_Input>;
  on_conflict?: Maybe<CouponRecord_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddCouponsArgs = {
  objects: Array<Coupon_Insert_Input>;
  on_conflict?: Maybe<Coupon_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddGroupInvitationArgs = {
  object: GroupInvitation_Insert_Input;
  on_conflict?: Maybe<GroupInvitation_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddGroupInvitationPrivateVdArgs = {
  object: GroupInvitationPrivateVd_Insert_Input;
};


/** mutation root */
export type Mutation_RootAddGroupInvitationPrivateVdsArgs = {
  objects: Array<GroupInvitationPrivateVd_Insert_Input>;
};


/** mutation root */
export type Mutation_RootAddGroupInvitationsArgs = {
  objects: Array<GroupInvitation_Insert_Input>;
  on_conflict?: Maybe<GroupInvitation_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddIssueArgs = {
  object: Issue_Insert_Input;
  on_conflict?: Maybe<Issue_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddIssueCommentArgs = {
  object: IssueComment_Insert_Input;
  on_conflict?: Maybe<IssueComment_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddIssueCommentsArgs = {
  objects: Array<IssueComment_Insert_Input>;
  on_conflict?: Maybe<IssueComment_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddIssuesArgs = {
  objects: Array<Issue_Insert_Input>;
  on_conflict?: Maybe<Issue_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddLogArgs = {
  object: Log_Insert_Input;
  on_conflict?: Maybe<Log_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddLogsArgs = {
  objects: Array<Log_Insert_Input>;
  on_conflict?: Maybe<Log_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddMemoArgs = {
  object: Memo_Insert_Input;
  on_conflict?: Maybe<Memo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddMemoPrivateVdArgs = {
  object: MemoPrivateVd_Insert_Input;
};


/** mutation root */
export type Mutation_RootAddMemoPrivateVdsArgs = {
  objects: Array<MemoPrivateVd_Insert_Input>;
};


/** mutation root */
export type Mutation_RootAddMemosArgs = {
  objects: Array<Memo_Insert_Input>;
  on_conflict?: Maybe<Memo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddNotificationArgs = {
  object: Notification_Insert_Input;
  on_conflict?: Maybe<Notification_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddNotificationsArgs = {
  objects: Array<Notification_Insert_Input>;
  on_conflict?: Maybe<Notification_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddOrderArgs = {
  object: Order_Insert_Input;
  on_conflict?: Maybe<Order_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddOrderCampaignArgs = {
  object: OrderCampaign_Insert_Input;
  on_conflict?: Maybe<OrderCampaign_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddOrderCampaignPrivateVdArgs = {
  object: OrderCampaignPrivateVd_Insert_Input;
};


/** mutation root */
export type Mutation_RootAddOrderCampaignPrivateVdsArgs = {
  objects: Array<OrderCampaignPrivateVd_Insert_Input>;
};


/** mutation root */
export type Mutation_RootAddOrderCampaignsArgs = {
  objects: Array<OrderCampaign_Insert_Input>;
  on_conflict?: Maybe<OrderCampaign_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddOrderPrivateVdArgs = {
  object: OrderPrivateVd_Insert_Input;
};


/** mutation root */
export type Mutation_RootAddOrderPrivateVdsArgs = {
  objects: Array<OrderPrivateVd_Insert_Input>;
};


/** mutation root */
export type Mutation_RootAddOrderProductArgs = {
  object: OrderProduct_Insert_Input;
  on_conflict?: Maybe<OrderProduct_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddOrderProductPrivateVdArgs = {
  object: OrderProductPrivateVd_Insert_Input;
};


/** mutation root */
export type Mutation_RootAddOrderProductPrivateVdsArgs = {
  objects: Array<OrderProductPrivateVd_Insert_Input>;
};


/** mutation root */
export type Mutation_RootAddOrderProductsArgs = {
  objects: Array<OrderProduct_Insert_Input>;
  on_conflict?: Maybe<OrderProduct_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddOrdersArgs = {
  objects: Array<Order_Insert_Input>;
  on_conflict?: Maybe<Order_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddOrganizationArgs = {
  object: Organization_Insert_Input;
  on_conflict?: Maybe<Organization_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddOrganizationInvitationArgs = {
  object: OrganizationInvitation_Insert_Input;
  on_conflict?: Maybe<OrganizationInvitation_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddOrganizationInvitationPrivateVdArgs = {
  object: OrganizationInvitationPrivateVd_Insert_Input;
};


/** mutation root */
export type Mutation_RootAddOrganizationInvitationPrivateVdsArgs = {
  objects: Array<OrganizationInvitationPrivateVd_Insert_Input>;
};


/** mutation root */
export type Mutation_RootAddOrganizationInvitationsArgs = {
  objects: Array<OrganizationInvitation_Insert_Input>;
  on_conflict?: Maybe<OrganizationInvitation_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddOrganizationPrivateVdArgs = {
  object: OrganizationPrivateVd_Insert_Input;
};


/** mutation root */
export type Mutation_RootAddOrganizationPrivateVdsArgs = {
  objects: Array<OrganizationPrivateVd_Insert_Input>;
};


/** mutation root */
export type Mutation_RootAddOrganizationsArgs = {
  objects: Array<Organization_Insert_Input>;
  on_conflict?: Maybe<Organization_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddProductArgs = {
  object: Product_Insert_Input;
  on_conflict?: Maybe<Product_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddProductCategoriesArgs = {
  objects: Array<ProductCategory_Insert_Input>;
  on_conflict?: Maybe<ProductCategory_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddProductCategoryArgs = {
  object: ProductCategory_Insert_Input;
  on_conflict?: Maybe<ProductCategory_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddProductCategoryPrivateVdArgs = {
  object: ProductCategoryPrivateVd_Insert_Input;
};


/** mutation root */
export type Mutation_RootAddProductCategoryPrivateVdsArgs = {
  objects: Array<ProductCategoryPrivateVd_Insert_Input>;
};


/** mutation root */
export type Mutation_RootAddProductGroupArgs = {
  object: ProductGroup_Insert_Input;
  on_conflict?: Maybe<ProductGroup_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddProductGroupCampaignArgs = {
  object: ProductGroupCampaign_Insert_Input;
  on_conflict?: Maybe<ProductGroupCampaign_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddProductGroupCampaignPrivateVdArgs = {
  object: ProductGroupCampaignPrivateVd_Insert_Input;
};


/** mutation root */
export type Mutation_RootAddProductGroupCampaignPrivateVdsArgs = {
  objects: Array<ProductGroupCampaignPrivateVd_Insert_Input>;
};


/** mutation root */
export type Mutation_RootAddProductGroupCampaignsArgs = {
  objects: Array<ProductGroupCampaign_Insert_Input>;
  on_conflict?: Maybe<ProductGroupCampaign_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddProductGroupPrivateVdArgs = {
  object: ProductGroupPrivateVd_Insert_Input;
};


/** mutation root */
export type Mutation_RootAddProductGroupPrivateVdsArgs = {
  objects: Array<ProductGroupPrivateVd_Insert_Input>;
};


/** mutation root */
export type Mutation_RootAddProductGroupsArgs = {
  objects: Array<ProductGroup_Insert_Input>;
  on_conflict?: Maybe<ProductGroup_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddProductPrivateVdArgs = {
  object: ProductPrivateVd_Insert_Input;
};


/** mutation root */
export type Mutation_RootAddProductPrivateVdsArgs = {
  objects: Array<ProductPrivateVd_Insert_Input>;
};


/** mutation root */
export type Mutation_RootAddProductSpecArgs = {
  object: ProductSpec_Insert_Input;
  on_conflict?: Maybe<ProductSpec_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddProductSpecPrivateVdArgs = {
  object: ProductSpecPrivateVd_Insert_Input;
};


/** mutation root */
export type Mutation_RootAddProductSpecPrivateVdsArgs = {
  objects: Array<ProductSpecPrivateVd_Insert_Input>;
};


/** mutation root */
export type Mutation_RootAddProductSpecsArgs = {
  objects: Array<ProductSpec_Insert_Input>;
  on_conflict?: Maybe<ProductSpec_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddProductsArgs = {
  objects: Array<Product_Insert_Input>;
  on_conflict?: Maybe<Product_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddProjectArgs = {
  object: Project_Insert_Input;
  on_conflict?: Maybe<Project_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddProjectInvitationArgs = {
  object: ProjectInvitation_Insert_Input;
  on_conflict?: Maybe<ProjectInvitation_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddProjectInvitationPrivateVdArgs = {
  object: ProjectInvitationPrivateVd_Insert_Input;
};


/** mutation root */
export type Mutation_RootAddProjectInvitationPrivateVdsArgs = {
  objects: Array<ProjectInvitationPrivateVd_Insert_Input>;
};


/** mutation root */
export type Mutation_RootAddProjectInvitationsArgs = {
  objects: Array<ProjectInvitation_Insert_Input>;
  on_conflict?: Maybe<ProjectInvitation_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddProjectPrivateVdArgs = {
  object: ProjectPrivateVd_Insert_Input;
};


/** mutation root */
export type Mutation_RootAddProjectPrivateVdsArgs = {
  objects: Array<ProjectPrivateVd_Insert_Input>;
};


/** mutation root */
export type Mutation_RootAddProjectsArgs = {
  objects: Array<Project_Insert_Input>;
  on_conflict?: Maybe<Project_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddRecipientInfoArgs = {
  object: RecipientInfo_Insert_Input;
  on_conflict?: Maybe<RecipientInfo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddRecipientInfoPrivateVdArgs = {
  object: RecipientInfoPrivateVd_Insert_Input;
};


/** mutation root */
export type Mutation_RootAddRecipientInfoPrivateVdsArgs = {
  objects: Array<RecipientInfoPrivateVd_Insert_Input>;
};


/** mutation root */
export type Mutation_RootAddRecipientInfosArgs = {
  objects: Array<RecipientInfo_Insert_Input>;
  on_conflict?: Maybe<RecipientInfo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddRecoveryTokenArgs = {
  object: RecoveryToken_Insert_Input;
  on_conflict?: Maybe<RecoveryToken_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddRecoveryTokensArgs = {
  objects: Array<RecoveryToken_Insert_Input>;
  on_conflict?: Maybe<RecoveryToken_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddShippingFeeArgs = {
  object: ShippingFee_Insert_Input;
  on_conflict?: Maybe<ShippingFee_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddShippingFeePrivateVdArgs = {
  object: ShippingFeePrivateVd_Insert_Input;
};


/** mutation root */
export type Mutation_RootAddShippingFeePrivateVdsArgs = {
  objects: Array<ShippingFeePrivateVd_Insert_Input>;
};


/** mutation root */
export type Mutation_RootAddShippingFeesArgs = {
  objects: Array<ShippingFee_Insert_Input>;
  on_conflict?: Maybe<ShippingFee_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddSubscriptionOrderArgs = {
  object: SubscriptionOrder_Insert_Input;
  on_conflict?: Maybe<SubscriptionOrder_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddSubscriptionOrderPrivateVdArgs = {
  object: SubscriptionOrderPrivateVd_Insert_Input;
};


/** mutation root */
export type Mutation_RootAddSubscriptionOrderPrivateVdsArgs = {
  objects: Array<SubscriptionOrderPrivateVd_Insert_Input>;
};


/** mutation root */
export type Mutation_RootAddSubscriptionOrdersArgs = {
  objects: Array<SubscriptionOrder_Insert_Input>;
  on_conflict?: Maybe<SubscriptionOrder_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddUserArgs = {
  object: User_Insert_Input;
  on_conflict?: Maybe<User_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddUserGroupArgs = {
  object: UserGroup_Insert_Input;
  on_conflict?: Maybe<UserGroup_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddUserGroupPrivateVdArgs = {
  object: UserGroupPrivateVd_Insert_Input;
};


/** mutation root */
export type Mutation_RootAddUserGroupPrivateVdsArgs = {
  objects: Array<UserGroupPrivateVd_Insert_Input>;
};


/** mutation root */
export type Mutation_RootAddUserGroupsArgs = {
  objects: Array<UserGroup_Insert_Input>;
  on_conflict?: Maybe<UserGroup_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddUserMemoArgs = {
  object: UserMemo_Insert_Input;
  on_conflict?: Maybe<UserMemo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddUserMemoPrivateVdArgs = {
  object: UserMemoPrivateVd_Insert_Input;
};


/** mutation root */
export type Mutation_RootAddUserMemoPrivateVdsArgs = {
  objects: Array<UserMemoPrivateVd_Insert_Input>;
};


/** mutation root */
export type Mutation_RootAddUserMemosArgs = {
  objects: Array<UserMemo_Insert_Input>;
  on_conflict?: Maybe<UserMemo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddUserOrganizationArgs = {
  object: UserOrganization_Insert_Input;
  on_conflict?: Maybe<UserOrganization_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddUserOrganizationPrivateVdArgs = {
  object: UserOrganizationPrivateVd_Insert_Input;
};


/** mutation root */
export type Mutation_RootAddUserOrganizationPrivateVdsArgs = {
  objects: Array<UserOrganizationPrivateVd_Insert_Input>;
};


/** mutation root */
export type Mutation_RootAddUserOrganizationsArgs = {
  objects: Array<UserOrganization_Insert_Input>;
  on_conflict?: Maybe<UserOrganization_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddUserPrivateVdArgs = {
  object: UserPrivateVd_Insert_Input;
};


/** mutation root */
export type Mutation_RootAddUserPrivateVdsArgs = {
  objects: Array<UserPrivateVd_Insert_Input>;
};


/** mutation root */
export type Mutation_RootAddUserProjectArgs = {
  object: UserProject_Insert_Input;
  on_conflict?: Maybe<UserProject_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddUserProjectPrivateVdArgs = {
  object: UserProjectPrivateVd_Insert_Input;
};


/** mutation root */
export type Mutation_RootAddUserProjectPrivateVdsArgs = {
  objects: Array<UserProjectPrivateVd_Insert_Input>;
};


/** mutation root */
export type Mutation_RootAddUserProjectsArgs = {
  objects: Array<UserProject_Insert_Input>;
  on_conflict?: Maybe<UserProject_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddUserSettingArgs = {
  object: UserSetting_Insert_Input;
  on_conflict?: Maybe<UserSetting_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddUserSettingPrivateVdArgs = {
  object: UserSettingPrivateVd_Insert_Input;
};


/** mutation root */
export type Mutation_RootAddUserSettingPrivateVdsArgs = {
  objects: Array<UserSettingPrivateVd_Insert_Input>;
};


/** mutation root */
export type Mutation_RootAddUserSettingsArgs = {
  objects: Array<UserSetting_Insert_Input>;
  on_conflict?: Maybe<UserSetting_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddUserUserGroupArgs = {
  object: UserUserGroup_Insert_Input;
  on_conflict?: Maybe<UserUserGroup_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddUserUserGroupPrivateVdArgs = {
  object: UserUserGroupPrivateVd_Insert_Input;
};


/** mutation root */
export type Mutation_RootAddUserUserGroupPrivateVdsArgs = {
  objects: Array<UserUserGroupPrivateVd_Insert_Input>;
};


/** mutation root */
export type Mutation_RootAddUserUserGroupsArgs = {
  objects: Array<UserUserGroup_Insert_Input>;
  on_conflict?: Maybe<UserUserGroup_On_Conflict>;
};


/** mutation root */
export type Mutation_RootAddUsersArgs = {
  objects: Array<User_Insert_Input>;
  on_conflict?: Maybe<User_On_Conflict>;
};


/** mutation root */
export type Mutation_RootDeleteAccountLinkArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type Mutation_RootDeleteAccountLinkPrivateVdsArgs = {
  where: AccountLinkPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteAccountLinksArgs = {
  where: AccountLink_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteBrowserSessionArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type Mutation_RootDeleteBrowserSessionsArgs = {
  where: BrowserSession_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteBuyerInfoArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type Mutation_RootDeleteBuyerInfoPrivateVdsArgs = {
  where: BuyerInfoPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteBuyerInfosArgs = {
  where: BuyerInfo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteCampaignArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type Mutation_RootDeleteCampaignPrivateVdsArgs = {
  where: CampaignPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteCampaignsArgs = {
  where: Campaign_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteCartProductArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type Mutation_RootDeleteCartProductPrivateVdsArgs = {
  where: CartProductPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteCartProductsArgs = {
  where: CartProduct_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteContactUsMessageArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type Mutation_RootDeleteContactUsMessagesArgs = {
  where: ContactUsMessage_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteCouponArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type Mutation_RootDeleteCouponPrivateVdsArgs = {
  where: CouponPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteCouponRecordArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type Mutation_RootDeleteCouponRecordPrivateVdsArgs = {
  where: CouponRecordPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteCouponRecordsArgs = {
  where: CouponRecord_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteCouponsArgs = {
  where: Coupon_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteGroupInvitationArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type Mutation_RootDeleteGroupInvitationPrivateVdsArgs = {
  where: GroupInvitationPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteGroupInvitationsArgs = {
  where: GroupInvitation_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteIssueArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type Mutation_RootDeleteIssueCommentArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type Mutation_RootDeleteIssueCommentsArgs = {
  where: IssueComment_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteIssuesArgs = {
  where: Issue_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteLogArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type Mutation_RootDeleteLogsArgs = {
  where: Log_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteMemoArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type Mutation_RootDeleteMemoPrivateVdsArgs = {
  where: MemoPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteMemosArgs = {
  where: Memo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteNotificationArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type Mutation_RootDeleteNotificationsArgs = {
  where: Notification_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteOrderArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type Mutation_RootDeleteOrderCampaignArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type Mutation_RootDeleteOrderCampaignPrivateVdsArgs = {
  where: OrderCampaignPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteOrderCampaignsArgs = {
  where: OrderCampaign_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteOrderPrivateVdsArgs = {
  where: OrderPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteOrderProductArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type Mutation_RootDeleteOrderProductPrivateVdsArgs = {
  where: OrderProductPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteOrderProductsArgs = {
  where: OrderProduct_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteOrdersArgs = {
  where: Order_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteOrganizationArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type Mutation_RootDeleteOrganizationInvitationArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type Mutation_RootDeleteOrganizationInvitationPrivateVdsArgs = {
  where: OrganizationInvitationPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteOrganizationInvitationsArgs = {
  where: OrganizationInvitation_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteOrganizationPrivateVdsArgs = {
  where: OrganizationPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteOrganizationsArgs = {
  where: Organization_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteProductArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type Mutation_RootDeleteProductCategoriesArgs = {
  where: ProductCategory_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteProductCategoryArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type Mutation_RootDeleteProductCategoryPrivateVdsArgs = {
  where: ProductCategoryPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteProductGroupArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type Mutation_RootDeleteProductGroupCampaignArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type Mutation_RootDeleteProductGroupCampaignPrivateVdsArgs = {
  where: ProductGroupCampaignPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteProductGroupCampaignsArgs = {
  where: ProductGroupCampaign_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteProductGroupPrivateVdsArgs = {
  where: ProductGroupPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteProductGroupsArgs = {
  where: ProductGroup_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteProductPrivateVdsArgs = {
  where: ProductPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteProductSpecArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type Mutation_RootDeleteProductSpecPrivateVdsArgs = {
  where: ProductSpecPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteProductSpecsArgs = {
  where: ProductSpec_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteProductsArgs = {
  where: Product_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteProjectArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type Mutation_RootDeleteProjectInvitationArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type Mutation_RootDeleteProjectInvitationPrivateVdsArgs = {
  where: ProjectInvitationPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteProjectInvitationsArgs = {
  where: ProjectInvitation_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteProjectPrivateVdsArgs = {
  where: ProjectPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteProjectsArgs = {
  where: Project_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteRecipientInfoArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type Mutation_RootDeleteRecipientInfoPrivateVdsArgs = {
  where: RecipientInfoPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteRecipientInfosArgs = {
  where: RecipientInfo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteRecoveryTokenArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type Mutation_RootDeleteRecoveryTokensArgs = {
  where: RecoveryToken_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteShippingFeeArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type Mutation_RootDeleteShippingFeePrivateVdsArgs = {
  where: ShippingFeePrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteShippingFeesArgs = {
  where: ShippingFee_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteSubscriptionOrderArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type Mutation_RootDeleteSubscriptionOrderPrivateVdsArgs = {
  where: SubscriptionOrderPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteSubscriptionOrdersArgs = {
  where: SubscriptionOrder_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteUserArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type Mutation_RootDeleteUserGroupArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type Mutation_RootDeleteUserGroupPrivateVdsArgs = {
  where: UserGroupPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteUserGroupsArgs = {
  where: UserGroup_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteUserMemoArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type Mutation_RootDeleteUserMemoPrivateVdsArgs = {
  where: UserMemoPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteUserMemosArgs = {
  where: UserMemo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteUserOrganizationArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type Mutation_RootDeleteUserOrganizationPrivateVdsArgs = {
  where: UserOrganizationPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteUserOrganizationsArgs = {
  where: UserOrganization_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteUserPrivateVdsArgs = {
  where: UserPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteUserProjectArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type Mutation_RootDeleteUserProjectPrivateVdsArgs = {
  where: UserProjectPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteUserProjectsArgs = {
  where: UserProject_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteUserSettingArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type Mutation_RootDeleteUserSettingPrivateVdsArgs = {
  where: UserSettingPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteUserSettingsArgs = {
  where: UserSetting_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteUserUserGroupArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type Mutation_RootDeleteUserUserGroupPrivateVdsArgs = {
  where: UserUserGroupPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteUserUserGroupsArgs = {
  where: UserUserGroup_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDeleteUsersArgs = {
  where: User_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateAccountLinkArgs = {
  _append?: Maybe<AccountLink_Append_Input>;
  _delete_at_path?: Maybe<AccountLink_Delete_At_Path_Input>;
  _delete_elem?: Maybe<AccountLink_Delete_Elem_Input>;
  _delete_key?: Maybe<AccountLink_Delete_Key_Input>;
  _inc?: Maybe<AccountLink_Inc_Input>;
  _prepend?: Maybe<AccountLink_Prepend_Input>;
  _set?: Maybe<AccountLink_Set_Input>;
  pk_columns: AccountLink_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdateAccountLinkPrivateVdsArgs = {
  _append?: Maybe<AccountLinkPrivateVd_Append_Input>;
  _delete_at_path?: Maybe<AccountLinkPrivateVd_Delete_At_Path_Input>;
  _delete_elem?: Maybe<AccountLinkPrivateVd_Delete_Elem_Input>;
  _delete_key?: Maybe<AccountLinkPrivateVd_Delete_Key_Input>;
  _inc?: Maybe<AccountLinkPrivateVd_Inc_Input>;
  _prepend?: Maybe<AccountLinkPrivateVd_Prepend_Input>;
  _set?: Maybe<AccountLinkPrivateVd_Set_Input>;
  where: AccountLinkPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateAccountLinksArgs = {
  _append?: Maybe<AccountLink_Append_Input>;
  _delete_at_path?: Maybe<AccountLink_Delete_At_Path_Input>;
  _delete_elem?: Maybe<AccountLink_Delete_Elem_Input>;
  _delete_key?: Maybe<AccountLink_Delete_Key_Input>;
  _inc?: Maybe<AccountLink_Inc_Input>;
  _prepend?: Maybe<AccountLink_Prepend_Input>;
  _set?: Maybe<AccountLink_Set_Input>;
  where: AccountLink_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateBrowserSessionArgs = {
  _append?: Maybe<BrowserSession_Append_Input>;
  _delete_at_path?: Maybe<BrowserSession_Delete_At_Path_Input>;
  _delete_elem?: Maybe<BrowserSession_Delete_Elem_Input>;
  _delete_key?: Maybe<BrowserSession_Delete_Key_Input>;
  _inc?: Maybe<BrowserSession_Inc_Input>;
  _prepend?: Maybe<BrowserSession_Prepend_Input>;
  _set?: Maybe<BrowserSession_Set_Input>;
  pk_columns: BrowserSession_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdateBrowserSessionsArgs = {
  _append?: Maybe<BrowserSession_Append_Input>;
  _delete_at_path?: Maybe<BrowserSession_Delete_At_Path_Input>;
  _delete_elem?: Maybe<BrowserSession_Delete_Elem_Input>;
  _delete_key?: Maybe<BrowserSession_Delete_Key_Input>;
  _inc?: Maybe<BrowserSession_Inc_Input>;
  _prepend?: Maybe<BrowserSession_Prepend_Input>;
  _set?: Maybe<BrowserSession_Set_Input>;
  where: BrowserSession_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateBuyerInfoArgs = {
  _append?: Maybe<BuyerInfo_Append_Input>;
  _delete_at_path?: Maybe<BuyerInfo_Delete_At_Path_Input>;
  _delete_elem?: Maybe<BuyerInfo_Delete_Elem_Input>;
  _delete_key?: Maybe<BuyerInfo_Delete_Key_Input>;
  _inc?: Maybe<BuyerInfo_Inc_Input>;
  _prepend?: Maybe<BuyerInfo_Prepend_Input>;
  _set?: Maybe<BuyerInfo_Set_Input>;
  pk_columns: BuyerInfo_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdateBuyerInfoPrivateVdsArgs = {
  _append?: Maybe<BuyerInfoPrivateVd_Append_Input>;
  _delete_at_path?: Maybe<BuyerInfoPrivateVd_Delete_At_Path_Input>;
  _delete_elem?: Maybe<BuyerInfoPrivateVd_Delete_Elem_Input>;
  _delete_key?: Maybe<BuyerInfoPrivateVd_Delete_Key_Input>;
  _inc?: Maybe<BuyerInfoPrivateVd_Inc_Input>;
  _prepend?: Maybe<BuyerInfoPrivateVd_Prepend_Input>;
  _set?: Maybe<BuyerInfoPrivateVd_Set_Input>;
  where: BuyerInfoPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateBuyerInfosArgs = {
  _append?: Maybe<BuyerInfo_Append_Input>;
  _delete_at_path?: Maybe<BuyerInfo_Delete_At_Path_Input>;
  _delete_elem?: Maybe<BuyerInfo_Delete_Elem_Input>;
  _delete_key?: Maybe<BuyerInfo_Delete_Key_Input>;
  _inc?: Maybe<BuyerInfo_Inc_Input>;
  _prepend?: Maybe<BuyerInfo_Prepend_Input>;
  _set?: Maybe<BuyerInfo_Set_Input>;
  where: BuyerInfo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateCampaignArgs = {
  _append?: Maybe<Campaign_Append_Input>;
  _delete_at_path?: Maybe<Campaign_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Campaign_Delete_Elem_Input>;
  _delete_key?: Maybe<Campaign_Delete_Key_Input>;
  _inc?: Maybe<Campaign_Inc_Input>;
  _prepend?: Maybe<Campaign_Prepend_Input>;
  _set?: Maybe<Campaign_Set_Input>;
  pk_columns: Campaign_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdateCampaignPrivateVdsArgs = {
  _append?: Maybe<CampaignPrivateVd_Append_Input>;
  _delete_at_path?: Maybe<CampaignPrivateVd_Delete_At_Path_Input>;
  _delete_elem?: Maybe<CampaignPrivateVd_Delete_Elem_Input>;
  _delete_key?: Maybe<CampaignPrivateVd_Delete_Key_Input>;
  _inc?: Maybe<CampaignPrivateVd_Inc_Input>;
  _prepend?: Maybe<CampaignPrivateVd_Prepend_Input>;
  _set?: Maybe<CampaignPrivateVd_Set_Input>;
  where: CampaignPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateCampaignsArgs = {
  _append?: Maybe<Campaign_Append_Input>;
  _delete_at_path?: Maybe<Campaign_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Campaign_Delete_Elem_Input>;
  _delete_key?: Maybe<Campaign_Delete_Key_Input>;
  _inc?: Maybe<Campaign_Inc_Input>;
  _prepend?: Maybe<Campaign_Prepend_Input>;
  _set?: Maybe<Campaign_Set_Input>;
  where: Campaign_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateCartProductArgs = {
  _append?: Maybe<CartProduct_Append_Input>;
  _delete_at_path?: Maybe<CartProduct_Delete_At_Path_Input>;
  _delete_elem?: Maybe<CartProduct_Delete_Elem_Input>;
  _delete_key?: Maybe<CartProduct_Delete_Key_Input>;
  _inc?: Maybe<CartProduct_Inc_Input>;
  _prepend?: Maybe<CartProduct_Prepend_Input>;
  _set?: Maybe<CartProduct_Set_Input>;
  pk_columns: CartProduct_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdateCartProductPrivateVdsArgs = {
  _append?: Maybe<CartProductPrivateVd_Append_Input>;
  _delete_at_path?: Maybe<CartProductPrivateVd_Delete_At_Path_Input>;
  _delete_elem?: Maybe<CartProductPrivateVd_Delete_Elem_Input>;
  _delete_key?: Maybe<CartProductPrivateVd_Delete_Key_Input>;
  _inc?: Maybe<CartProductPrivateVd_Inc_Input>;
  _prepend?: Maybe<CartProductPrivateVd_Prepend_Input>;
  _set?: Maybe<CartProductPrivateVd_Set_Input>;
  where: CartProductPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateCartProductsArgs = {
  _append?: Maybe<CartProduct_Append_Input>;
  _delete_at_path?: Maybe<CartProduct_Delete_At_Path_Input>;
  _delete_elem?: Maybe<CartProduct_Delete_Elem_Input>;
  _delete_key?: Maybe<CartProduct_Delete_Key_Input>;
  _inc?: Maybe<CartProduct_Inc_Input>;
  _prepend?: Maybe<CartProduct_Prepend_Input>;
  _set?: Maybe<CartProduct_Set_Input>;
  where: CartProduct_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateContactUsMessageArgs = {
  _append?: Maybe<ContactUsMessage_Append_Input>;
  _delete_at_path?: Maybe<ContactUsMessage_Delete_At_Path_Input>;
  _delete_elem?: Maybe<ContactUsMessage_Delete_Elem_Input>;
  _delete_key?: Maybe<ContactUsMessage_Delete_Key_Input>;
  _inc?: Maybe<ContactUsMessage_Inc_Input>;
  _prepend?: Maybe<ContactUsMessage_Prepend_Input>;
  _set?: Maybe<ContactUsMessage_Set_Input>;
  pk_columns: ContactUsMessage_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdateContactUsMessagesArgs = {
  _append?: Maybe<ContactUsMessage_Append_Input>;
  _delete_at_path?: Maybe<ContactUsMessage_Delete_At_Path_Input>;
  _delete_elem?: Maybe<ContactUsMessage_Delete_Elem_Input>;
  _delete_key?: Maybe<ContactUsMessage_Delete_Key_Input>;
  _inc?: Maybe<ContactUsMessage_Inc_Input>;
  _prepend?: Maybe<ContactUsMessage_Prepend_Input>;
  _set?: Maybe<ContactUsMessage_Set_Input>;
  where: ContactUsMessage_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateCouponArgs = {
  _append?: Maybe<Coupon_Append_Input>;
  _delete_at_path?: Maybe<Coupon_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Coupon_Delete_Elem_Input>;
  _delete_key?: Maybe<Coupon_Delete_Key_Input>;
  _inc?: Maybe<Coupon_Inc_Input>;
  _prepend?: Maybe<Coupon_Prepend_Input>;
  _set?: Maybe<Coupon_Set_Input>;
  pk_columns: Coupon_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdateCouponPrivateVdsArgs = {
  _append?: Maybe<CouponPrivateVd_Append_Input>;
  _delete_at_path?: Maybe<CouponPrivateVd_Delete_At_Path_Input>;
  _delete_elem?: Maybe<CouponPrivateVd_Delete_Elem_Input>;
  _delete_key?: Maybe<CouponPrivateVd_Delete_Key_Input>;
  _inc?: Maybe<CouponPrivateVd_Inc_Input>;
  _prepend?: Maybe<CouponPrivateVd_Prepend_Input>;
  _set?: Maybe<CouponPrivateVd_Set_Input>;
  where: CouponPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateCouponRecordArgs = {
  _append?: Maybe<CouponRecord_Append_Input>;
  _delete_at_path?: Maybe<CouponRecord_Delete_At_Path_Input>;
  _delete_elem?: Maybe<CouponRecord_Delete_Elem_Input>;
  _delete_key?: Maybe<CouponRecord_Delete_Key_Input>;
  _inc?: Maybe<CouponRecord_Inc_Input>;
  _prepend?: Maybe<CouponRecord_Prepend_Input>;
  _set?: Maybe<CouponRecord_Set_Input>;
  pk_columns: CouponRecord_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdateCouponRecordPrivateVdsArgs = {
  _append?: Maybe<CouponRecordPrivateVd_Append_Input>;
  _delete_at_path?: Maybe<CouponRecordPrivateVd_Delete_At_Path_Input>;
  _delete_elem?: Maybe<CouponRecordPrivateVd_Delete_Elem_Input>;
  _delete_key?: Maybe<CouponRecordPrivateVd_Delete_Key_Input>;
  _inc?: Maybe<CouponRecordPrivateVd_Inc_Input>;
  _prepend?: Maybe<CouponRecordPrivateVd_Prepend_Input>;
  _set?: Maybe<CouponRecordPrivateVd_Set_Input>;
  where: CouponRecordPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateCouponRecordsArgs = {
  _append?: Maybe<CouponRecord_Append_Input>;
  _delete_at_path?: Maybe<CouponRecord_Delete_At_Path_Input>;
  _delete_elem?: Maybe<CouponRecord_Delete_Elem_Input>;
  _delete_key?: Maybe<CouponRecord_Delete_Key_Input>;
  _inc?: Maybe<CouponRecord_Inc_Input>;
  _prepend?: Maybe<CouponRecord_Prepend_Input>;
  _set?: Maybe<CouponRecord_Set_Input>;
  where: CouponRecord_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateCouponsArgs = {
  _append?: Maybe<Coupon_Append_Input>;
  _delete_at_path?: Maybe<Coupon_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Coupon_Delete_Elem_Input>;
  _delete_key?: Maybe<Coupon_Delete_Key_Input>;
  _inc?: Maybe<Coupon_Inc_Input>;
  _prepend?: Maybe<Coupon_Prepend_Input>;
  _set?: Maybe<Coupon_Set_Input>;
  where: Coupon_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateGroupInvitationArgs = {
  _inc?: Maybe<GroupInvitation_Inc_Input>;
  _set?: Maybe<GroupInvitation_Set_Input>;
  pk_columns: GroupInvitation_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdateGroupInvitationPrivateVdsArgs = {
  _inc?: Maybe<GroupInvitationPrivateVd_Inc_Input>;
  _set?: Maybe<GroupInvitationPrivateVd_Set_Input>;
  where: GroupInvitationPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateGroupInvitationsArgs = {
  _inc?: Maybe<GroupInvitation_Inc_Input>;
  _set?: Maybe<GroupInvitation_Set_Input>;
  where: GroupInvitation_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateIssueArgs = {
  _append?: Maybe<Issue_Append_Input>;
  _delete_at_path?: Maybe<Issue_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Issue_Delete_Elem_Input>;
  _delete_key?: Maybe<Issue_Delete_Key_Input>;
  _inc?: Maybe<Issue_Inc_Input>;
  _prepend?: Maybe<Issue_Prepend_Input>;
  _set?: Maybe<Issue_Set_Input>;
  pk_columns: Issue_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdateIssueCommentArgs = {
  _append?: Maybe<IssueComment_Append_Input>;
  _delete_at_path?: Maybe<IssueComment_Delete_At_Path_Input>;
  _delete_elem?: Maybe<IssueComment_Delete_Elem_Input>;
  _delete_key?: Maybe<IssueComment_Delete_Key_Input>;
  _inc?: Maybe<IssueComment_Inc_Input>;
  _prepend?: Maybe<IssueComment_Prepend_Input>;
  _set?: Maybe<IssueComment_Set_Input>;
  pk_columns: IssueComment_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdateIssueCommentsArgs = {
  _append?: Maybe<IssueComment_Append_Input>;
  _delete_at_path?: Maybe<IssueComment_Delete_At_Path_Input>;
  _delete_elem?: Maybe<IssueComment_Delete_Elem_Input>;
  _delete_key?: Maybe<IssueComment_Delete_Key_Input>;
  _inc?: Maybe<IssueComment_Inc_Input>;
  _prepend?: Maybe<IssueComment_Prepend_Input>;
  _set?: Maybe<IssueComment_Set_Input>;
  where: IssueComment_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateIssuesArgs = {
  _append?: Maybe<Issue_Append_Input>;
  _delete_at_path?: Maybe<Issue_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Issue_Delete_Elem_Input>;
  _delete_key?: Maybe<Issue_Delete_Key_Input>;
  _inc?: Maybe<Issue_Inc_Input>;
  _prepend?: Maybe<Issue_Prepend_Input>;
  _set?: Maybe<Issue_Set_Input>;
  where: Issue_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateLogArgs = {
  _append?: Maybe<Log_Append_Input>;
  _delete_at_path?: Maybe<Log_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Log_Delete_Elem_Input>;
  _delete_key?: Maybe<Log_Delete_Key_Input>;
  _inc?: Maybe<Log_Inc_Input>;
  _prepend?: Maybe<Log_Prepend_Input>;
  _set?: Maybe<Log_Set_Input>;
  pk_columns: Log_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdateLogsArgs = {
  _append?: Maybe<Log_Append_Input>;
  _delete_at_path?: Maybe<Log_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Log_Delete_Elem_Input>;
  _delete_key?: Maybe<Log_Delete_Key_Input>;
  _inc?: Maybe<Log_Inc_Input>;
  _prepend?: Maybe<Log_Prepend_Input>;
  _set?: Maybe<Log_Set_Input>;
  where: Log_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateMemoArgs = {
  _append?: Maybe<Memo_Append_Input>;
  _delete_at_path?: Maybe<Memo_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Memo_Delete_Elem_Input>;
  _delete_key?: Maybe<Memo_Delete_Key_Input>;
  _inc?: Maybe<Memo_Inc_Input>;
  _prepend?: Maybe<Memo_Prepend_Input>;
  _set?: Maybe<Memo_Set_Input>;
  pk_columns: Memo_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdateMemoPrivateVdsArgs = {
  _append?: Maybe<MemoPrivateVd_Append_Input>;
  _delete_at_path?: Maybe<MemoPrivateVd_Delete_At_Path_Input>;
  _delete_elem?: Maybe<MemoPrivateVd_Delete_Elem_Input>;
  _delete_key?: Maybe<MemoPrivateVd_Delete_Key_Input>;
  _inc?: Maybe<MemoPrivateVd_Inc_Input>;
  _prepend?: Maybe<MemoPrivateVd_Prepend_Input>;
  _set?: Maybe<MemoPrivateVd_Set_Input>;
  where: MemoPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateMemosArgs = {
  _append?: Maybe<Memo_Append_Input>;
  _delete_at_path?: Maybe<Memo_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Memo_Delete_Elem_Input>;
  _delete_key?: Maybe<Memo_Delete_Key_Input>;
  _inc?: Maybe<Memo_Inc_Input>;
  _prepend?: Maybe<Memo_Prepend_Input>;
  _set?: Maybe<Memo_Set_Input>;
  where: Memo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateNotificationArgs = {
  _append?: Maybe<Notification_Append_Input>;
  _delete_at_path?: Maybe<Notification_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Notification_Delete_Elem_Input>;
  _delete_key?: Maybe<Notification_Delete_Key_Input>;
  _inc?: Maybe<Notification_Inc_Input>;
  _prepend?: Maybe<Notification_Prepend_Input>;
  _set?: Maybe<Notification_Set_Input>;
  pk_columns: Notification_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdateNotificationsArgs = {
  _append?: Maybe<Notification_Append_Input>;
  _delete_at_path?: Maybe<Notification_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Notification_Delete_Elem_Input>;
  _delete_key?: Maybe<Notification_Delete_Key_Input>;
  _inc?: Maybe<Notification_Inc_Input>;
  _prepend?: Maybe<Notification_Prepend_Input>;
  _set?: Maybe<Notification_Set_Input>;
  where: Notification_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateOrderArgs = {
  _append?: Maybe<Order_Append_Input>;
  _delete_at_path?: Maybe<Order_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Order_Delete_Elem_Input>;
  _delete_key?: Maybe<Order_Delete_Key_Input>;
  _inc?: Maybe<Order_Inc_Input>;
  _prepend?: Maybe<Order_Prepend_Input>;
  _set?: Maybe<Order_Set_Input>;
  pk_columns: Order_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdateOrderCampaignArgs = {
  _append?: Maybe<OrderCampaign_Append_Input>;
  _delete_at_path?: Maybe<OrderCampaign_Delete_At_Path_Input>;
  _delete_elem?: Maybe<OrderCampaign_Delete_Elem_Input>;
  _delete_key?: Maybe<OrderCampaign_Delete_Key_Input>;
  _inc?: Maybe<OrderCampaign_Inc_Input>;
  _prepend?: Maybe<OrderCampaign_Prepend_Input>;
  _set?: Maybe<OrderCampaign_Set_Input>;
  pk_columns: OrderCampaign_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdateOrderCampaignPrivateVdsArgs = {
  _append?: Maybe<OrderCampaignPrivateVd_Append_Input>;
  _delete_at_path?: Maybe<OrderCampaignPrivateVd_Delete_At_Path_Input>;
  _delete_elem?: Maybe<OrderCampaignPrivateVd_Delete_Elem_Input>;
  _delete_key?: Maybe<OrderCampaignPrivateVd_Delete_Key_Input>;
  _inc?: Maybe<OrderCampaignPrivateVd_Inc_Input>;
  _prepend?: Maybe<OrderCampaignPrivateVd_Prepend_Input>;
  _set?: Maybe<OrderCampaignPrivateVd_Set_Input>;
  where: OrderCampaignPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateOrderCampaignsArgs = {
  _append?: Maybe<OrderCampaign_Append_Input>;
  _delete_at_path?: Maybe<OrderCampaign_Delete_At_Path_Input>;
  _delete_elem?: Maybe<OrderCampaign_Delete_Elem_Input>;
  _delete_key?: Maybe<OrderCampaign_Delete_Key_Input>;
  _inc?: Maybe<OrderCampaign_Inc_Input>;
  _prepend?: Maybe<OrderCampaign_Prepend_Input>;
  _set?: Maybe<OrderCampaign_Set_Input>;
  where: OrderCampaign_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateOrderPrivateVdsArgs = {
  _append?: Maybe<OrderPrivateVd_Append_Input>;
  _delete_at_path?: Maybe<OrderPrivateVd_Delete_At_Path_Input>;
  _delete_elem?: Maybe<OrderPrivateVd_Delete_Elem_Input>;
  _delete_key?: Maybe<OrderPrivateVd_Delete_Key_Input>;
  _inc?: Maybe<OrderPrivateVd_Inc_Input>;
  _prepend?: Maybe<OrderPrivateVd_Prepend_Input>;
  _set?: Maybe<OrderPrivateVd_Set_Input>;
  where: OrderPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateOrderProductArgs = {
  _append?: Maybe<OrderProduct_Append_Input>;
  _delete_at_path?: Maybe<OrderProduct_Delete_At_Path_Input>;
  _delete_elem?: Maybe<OrderProduct_Delete_Elem_Input>;
  _delete_key?: Maybe<OrderProduct_Delete_Key_Input>;
  _inc?: Maybe<OrderProduct_Inc_Input>;
  _prepend?: Maybe<OrderProduct_Prepend_Input>;
  _set?: Maybe<OrderProduct_Set_Input>;
  pk_columns: OrderProduct_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdateOrderProductPrivateVdsArgs = {
  _append?: Maybe<OrderProductPrivateVd_Append_Input>;
  _delete_at_path?: Maybe<OrderProductPrivateVd_Delete_At_Path_Input>;
  _delete_elem?: Maybe<OrderProductPrivateVd_Delete_Elem_Input>;
  _delete_key?: Maybe<OrderProductPrivateVd_Delete_Key_Input>;
  _inc?: Maybe<OrderProductPrivateVd_Inc_Input>;
  _prepend?: Maybe<OrderProductPrivateVd_Prepend_Input>;
  _set?: Maybe<OrderProductPrivateVd_Set_Input>;
  where: OrderProductPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateOrderProductsArgs = {
  _append?: Maybe<OrderProduct_Append_Input>;
  _delete_at_path?: Maybe<OrderProduct_Delete_At_Path_Input>;
  _delete_elem?: Maybe<OrderProduct_Delete_Elem_Input>;
  _delete_key?: Maybe<OrderProduct_Delete_Key_Input>;
  _inc?: Maybe<OrderProduct_Inc_Input>;
  _prepend?: Maybe<OrderProduct_Prepend_Input>;
  _set?: Maybe<OrderProduct_Set_Input>;
  where: OrderProduct_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateOrdersArgs = {
  _append?: Maybe<Order_Append_Input>;
  _delete_at_path?: Maybe<Order_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Order_Delete_Elem_Input>;
  _delete_key?: Maybe<Order_Delete_Key_Input>;
  _inc?: Maybe<Order_Inc_Input>;
  _prepend?: Maybe<Order_Prepend_Input>;
  _set?: Maybe<Order_Set_Input>;
  where: Order_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateOrganizationArgs = {
  _append?: Maybe<Organization_Append_Input>;
  _delete_at_path?: Maybe<Organization_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Organization_Delete_Elem_Input>;
  _delete_key?: Maybe<Organization_Delete_Key_Input>;
  _inc?: Maybe<Organization_Inc_Input>;
  _prepend?: Maybe<Organization_Prepend_Input>;
  _set?: Maybe<Organization_Set_Input>;
  pk_columns: Organization_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdateOrganizationInvitationArgs = {
  _inc?: Maybe<OrganizationInvitation_Inc_Input>;
  _set?: Maybe<OrganizationInvitation_Set_Input>;
  pk_columns: OrganizationInvitation_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdateOrganizationInvitationPrivateVdsArgs = {
  _inc?: Maybe<OrganizationInvitationPrivateVd_Inc_Input>;
  _set?: Maybe<OrganizationInvitationPrivateVd_Set_Input>;
  where: OrganizationInvitationPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateOrganizationInvitationsArgs = {
  _inc?: Maybe<OrganizationInvitation_Inc_Input>;
  _set?: Maybe<OrganizationInvitation_Set_Input>;
  where: OrganizationInvitation_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateOrganizationPrivateVdsArgs = {
  _append?: Maybe<OrganizationPrivateVd_Append_Input>;
  _delete_at_path?: Maybe<OrganizationPrivateVd_Delete_At_Path_Input>;
  _delete_elem?: Maybe<OrganizationPrivateVd_Delete_Elem_Input>;
  _delete_key?: Maybe<OrganizationPrivateVd_Delete_Key_Input>;
  _inc?: Maybe<OrganizationPrivateVd_Inc_Input>;
  _prepend?: Maybe<OrganizationPrivateVd_Prepend_Input>;
  _set?: Maybe<OrganizationPrivateVd_Set_Input>;
  where: OrganizationPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateOrganizationsArgs = {
  _append?: Maybe<Organization_Append_Input>;
  _delete_at_path?: Maybe<Organization_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Organization_Delete_Elem_Input>;
  _delete_key?: Maybe<Organization_Delete_Key_Input>;
  _inc?: Maybe<Organization_Inc_Input>;
  _prepend?: Maybe<Organization_Prepend_Input>;
  _set?: Maybe<Organization_Set_Input>;
  where: Organization_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateProductArgs = {
  _append?: Maybe<Product_Append_Input>;
  _delete_at_path?: Maybe<Product_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Product_Delete_Elem_Input>;
  _delete_key?: Maybe<Product_Delete_Key_Input>;
  _inc?: Maybe<Product_Inc_Input>;
  _prepend?: Maybe<Product_Prepend_Input>;
  _set?: Maybe<Product_Set_Input>;
  pk_columns: Product_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdateProductCategoriesArgs = {
  _append?: Maybe<ProductCategory_Append_Input>;
  _delete_at_path?: Maybe<ProductCategory_Delete_At_Path_Input>;
  _delete_elem?: Maybe<ProductCategory_Delete_Elem_Input>;
  _delete_key?: Maybe<ProductCategory_Delete_Key_Input>;
  _inc?: Maybe<ProductCategory_Inc_Input>;
  _prepend?: Maybe<ProductCategory_Prepend_Input>;
  _set?: Maybe<ProductCategory_Set_Input>;
  where: ProductCategory_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateProductCategoryArgs = {
  _append?: Maybe<ProductCategory_Append_Input>;
  _delete_at_path?: Maybe<ProductCategory_Delete_At_Path_Input>;
  _delete_elem?: Maybe<ProductCategory_Delete_Elem_Input>;
  _delete_key?: Maybe<ProductCategory_Delete_Key_Input>;
  _inc?: Maybe<ProductCategory_Inc_Input>;
  _prepend?: Maybe<ProductCategory_Prepend_Input>;
  _set?: Maybe<ProductCategory_Set_Input>;
  pk_columns: ProductCategory_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdateProductCategoryPrivateVdsArgs = {
  _append?: Maybe<ProductCategoryPrivateVd_Append_Input>;
  _delete_at_path?: Maybe<ProductCategoryPrivateVd_Delete_At_Path_Input>;
  _delete_elem?: Maybe<ProductCategoryPrivateVd_Delete_Elem_Input>;
  _delete_key?: Maybe<ProductCategoryPrivateVd_Delete_Key_Input>;
  _inc?: Maybe<ProductCategoryPrivateVd_Inc_Input>;
  _prepend?: Maybe<ProductCategoryPrivateVd_Prepend_Input>;
  _set?: Maybe<ProductCategoryPrivateVd_Set_Input>;
  where: ProductCategoryPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateProductGroupArgs = {
  _append?: Maybe<ProductGroup_Append_Input>;
  _delete_at_path?: Maybe<ProductGroup_Delete_At_Path_Input>;
  _delete_elem?: Maybe<ProductGroup_Delete_Elem_Input>;
  _delete_key?: Maybe<ProductGroup_Delete_Key_Input>;
  _inc?: Maybe<ProductGroup_Inc_Input>;
  _prepend?: Maybe<ProductGroup_Prepend_Input>;
  _set?: Maybe<ProductGroup_Set_Input>;
  pk_columns: ProductGroup_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdateProductGroupCampaignArgs = {
  _append?: Maybe<ProductGroupCampaign_Append_Input>;
  _delete_at_path?: Maybe<ProductGroupCampaign_Delete_At_Path_Input>;
  _delete_elem?: Maybe<ProductGroupCampaign_Delete_Elem_Input>;
  _delete_key?: Maybe<ProductGroupCampaign_Delete_Key_Input>;
  _inc?: Maybe<ProductGroupCampaign_Inc_Input>;
  _prepend?: Maybe<ProductGroupCampaign_Prepend_Input>;
  _set?: Maybe<ProductGroupCampaign_Set_Input>;
  pk_columns: ProductGroupCampaign_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdateProductGroupCampaignPrivateVdsArgs = {
  _append?: Maybe<ProductGroupCampaignPrivateVd_Append_Input>;
  _delete_at_path?: Maybe<ProductGroupCampaignPrivateVd_Delete_At_Path_Input>;
  _delete_elem?: Maybe<ProductGroupCampaignPrivateVd_Delete_Elem_Input>;
  _delete_key?: Maybe<ProductGroupCampaignPrivateVd_Delete_Key_Input>;
  _inc?: Maybe<ProductGroupCampaignPrivateVd_Inc_Input>;
  _prepend?: Maybe<ProductGroupCampaignPrivateVd_Prepend_Input>;
  _set?: Maybe<ProductGroupCampaignPrivateVd_Set_Input>;
  where: ProductGroupCampaignPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateProductGroupCampaignsArgs = {
  _append?: Maybe<ProductGroupCampaign_Append_Input>;
  _delete_at_path?: Maybe<ProductGroupCampaign_Delete_At_Path_Input>;
  _delete_elem?: Maybe<ProductGroupCampaign_Delete_Elem_Input>;
  _delete_key?: Maybe<ProductGroupCampaign_Delete_Key_Input>;
  _inc?: Maybe<ProductGroupCampaign_Inc_Input>;
  _prepend?: Maybe<ProductGroupCampaign_Prepend_Input>;
  _set?: Maybe<ProductGroupCampaign_Set_Input>;
  where: ProductGroupCampaign_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateProductGroupPrivateVdsArgs = {
  _append?: Maybe<ProductGroupPrivateVd_Append_Input>;
  _delete_at_path?: Maybe<ProductGroupPrivateVd_Delete_At_Path_Input>;
  _delete_elem?: Maybe<ProductGroupPrivateVd_Delete_Elem_Input>;
  _delete_key?: Maybe<ProductGroupPrivateVd_Delete_Key_Input>;
  _inc?: Maybe<ProductGroupPrivateVd_Inc_Input>;
  _prepend?: Maybe<ProductGroupPrivateVd_Prepend_Input>;
  _set?: Maybe<ProductGroupPrivateVd_Set_Input>;
  where: ProductGroupPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateProductGroupsArgs = {
  _append?: Maybe<ProductGroup_Append_Input>;
  _delete_at_path?: Maybe<ProductGroup_Delete_At_Path_Input>;
  _delete_elem?: Maybe<ProductGroup_Delete_Elem_Input>;
  _delete_key?: Maybe<ProductGroup_Delete_Key_Input>;
  _inc?: Maybe<ProductGroup_Inc_Input>;
  _prepend?: Maybe<ProductGroup_Prepend_Input>;
  _set?: Maybe<ProductGroup_Set_Input>;
  where: ProductGroup_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateProductPrivateVdsArgs = {
  _append?: Maybe<ProductPrivateVd_Append_Input>;
  _delete_at_path?: Maybe<ProductPrivateVd_Delete_At_Path_Input>;
  _delete_elem?: Maybe<ProductPrivateVd_Delete_Elem_Input>;
  _delete_key?: Maybe<ProductPrivateVd_Delete_Key_Input>;
  _inc?: Maybe<ProductPrivateVd_Inc_Input>;
  _prepend?: Maybe<ProductPrivateVd_Prepend_Input>;
  _set?: Maybe<ProductPrivateVd_Set_Input>;
  where: ProductPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateProductSpecArgs = {
  _append?: Maybe<ProductSpec_Append_Input>;
  _delete_at_path?: Maybe<ProductSpec_Delete_At_Path_Input>;
  _delete_elem?: Maybe<ProductSpec_Delete_Elem_Input>;
  _delete_key?: Maybe<ProductSpec_Delete_Key_Input>;
  _inc?: Maybe<ProductSpec_Inc_Input>;
  _prepend?: Maybe<ProductSpec_Prepend_Input>;
  _set?: Maybe<ProductSpec_Set_Input>;
  pk_columns: ProductSpec_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdateProductSpecPrivateVdsArgs = {
  _append?: Maybe<ProductSpecPrivateVd_Append_Input>;
  _delete_at_path?: Maybe<ProductSpecPrivateVd_Delete_At_Path_Input>;
  _delete_elem?: Maybe<ProductSpecPrivateVd_Delete_Elem_Input>;
  _delete_key?: Maybe<ProductSpecPrivateVd_Delete_Key_Input>;
  _inc?: Maybe<ProductSpecPrivateVd_Inc_Input>;
  _prepend?: Maybe<ProductSpecPrivateVd_Prepend_Input>;
  _set?: Maybe<ProductSpecPrivateVd_Set_Input>;
  where: ProductSpecPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateProductSpecsArgs = {
  _append?: Maybe<ProductSpec_Append_Input>;
  _delete_at_path?: Maybe<ProductSpec_Delete_At_Path_Input>;
  _delete_elem?: Maybe<ProductSpec_Delete_Elem_Input>;
  _delete_key?: Maybe<ProductSpec_Delete_Key_Input>;
  _inc?: Maybe<ProductSpec_Inc_Input>;
  _prepend?: Maybe<ProductSpec_Prepend_Input>;
  _set?: Maybe<ProductSpec_Set_Input>;
  where: ProductSpec_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateProductsArgs = {
  _append?: Maybe<Product_Append_Input>;
  _delete_at_path?: Maybe<Product_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Product_Delete_Elem_Input>;
  _delete_key?: Maybe<Product_Delete_Key_Input>;
  _inc?: Maybe<Product_Inc_Input>;
  _prepend?: Maybe<Product_Prepend_Input>;
  _set?: Maybe<Product_Set_Input>;
  where: Product_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateProjectArgs = {
  _append?: Maybe<Project_Append_Input>;
  _delete_at_path?: Maybe<Project_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Project_Delete_Elem_Input>;
  _delete_key?: Maybe<Project_Delete_Key_Input>;
  _inc?: Maybe<Project_Inc_Input>;
  _prepend?: Maybe<Project_Prepend_Input>;
  _set?: Maybe<Project_Set_Input>;
  pk_columns: Project_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdateProjectInvitationArgs = {
  _inc?: Maybe<ProjectInvitation_Inc_Input>;
  _set?: Maybe<ProjectInvitation_Set_Input>;
  pk_columns: ProjectInvitation_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdateProjectInvitationPrivateVdsArgs = {
  _inc?: Maybe<ProjectInvitationPrivateVd_Inc_Input>;
  _set?: Maybe<ProjectInvitationPrivateVd_Set_Input>;
  where: ProjectInvitationPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateProjectInvitationsArgs = {
  _inc?: Maybe<ProjectInvitation_Inc_Input>;
  _set?: Maybe<ProjectInvitation_Set_Input>;
  where: ProjectInvitation_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateProjectPrivateVdsArgs = {
  _append?: Maybe<ProjectPrivateVd_Append_Input>;
  _delete_at_path?: Maybe<ProjectPrivateVd_Delete_At_Path_Input>;
  _delete_elem?: Maybe<ProjectPrivateVd_Delete_Elem_Input>;
  _delete_key?: Maybe<ProjectPrivateVd_Delete_Key_Input>;
  _inc?: Maybe<ProjectPrivateVd_Inc_Input>;
  _prepend?: Maybe<ProjectPrivateVd_Prepend_Input>;
  _set?: Maybe<ProjectPrivateVd_Set_Input>;
  where: ProjectPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateProjectsArgs = {
  _append?: Maybe<Project_Append_Input>;
  _delete_at_path?: Maybe<Project_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Project_Delete_Elem_Input>;
  _delete_key?: Maybe<Project_Delete_Key_Input>;
  _inc?: Maybe<Project_Inc_Input>;
  _prepend?: Maybe<Project_Prepend_Input>;
  _set?: Maybe<Project_Set_Input>;
  where: Project_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateRecipientInfoArgs = {
  _append?: Maybe<RecipientInfo_Append_Input>;
  _delete_at_path?: Maybe<RecipientInfo_Delete_At_Path_Input>;
  _delete_elem?: Maybe<RecipientInfo_Delete_Elem_Input>;
  _delete_key?: Maybe<RecipientInfo_Delete_Key_Input>;
  _inc?: Maybe<RecipientInfo_Inc_Input>;
  _prepend?: Maybe<RecipientInfo_Prepend_Input>;
  _set?: Maybe<RecipientInfo_Set_Input>;
  pk_columns: RecipientInfo_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdateRecipientInfoPrivateVdsArgs = {
  _append?: Maybe<RecipientInfoPrivateVd_Append_Input>;
  _delete_at_path?: Maybe<RecipientInfoPrivateVd_Delete_At_Path_Input>;
  _delete_elem?: Maybe<RecipientInfoPrivateVd_Delete_Elem_Input>;
  _delete_key?: Maybe<RecipientInfoPrivateVd_Delete_Key_Input>;
  _inc?: Maybe<RecipientInfoPrivateVd_Inc_Input>;
  _prepend?: Maybe<RecipientInfoPrivateVd_Prepend_Input>;
  _set?: Maybe<RecipientInfoPrivateVd_Set_Input>;
  where: RecipientInfoPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateRecipientInfosArgs = {
  _append?: Maybe<RecipientInfo_Append_Input>;
  _delete_at_path?: Maybe<RecipientInfo_Delete_At_Path_Input>;
  _delete_elem?: Maybe<RecipientInfo_Delete_Elem_Input>;
  _delete_key?: Maybe<RecipientInfo_Delete_Key_Input>;
  _inc?: Maybe<RecipientInfo_Inc_Input>;
  _prepend?: Maybe<RecipientInfo_Prepend_Input>;
  _set?: Maybe<RecipientInfo_Set_Input>;
  where: RecipientInfo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateRecoveryTokenArgs = {
  _inc?: Maybe<RecoveryToken_Inc_Input>;
  _set?: Maybe<RecoveryToken_Set_Input>;
  pk_columns: RecoveryToken_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdateRecoveryTokensArgs = {
  _inc?: Maybe<RecoveryToken_Inc_Input>;
  _set?: Maybe<RecoveryToken_Set_Input>;
  where: RecoveryToken_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateShippingFeeArgs = {
  _inc?: Maybe<ShippingFee_Inc_Input>;
  _set?: Maybe<ShippingFee_Set_Input>;
  pk_columns: ShippingFee_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdateShippingFeePrivateVdsArgs = {
  _inc?: Maybe<ShippingFeePrivateVd_Inc_Input>;
  _set?: Maybe<ShippingFeePrivateVd_Set_Input>;
  where: ShippingFeePrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateShippingFeesArgs = {
  _inc?: Maybe<ShippingFee_Inc_Input>;
  _set?: Maybe<ShippingFee_Set_Input>;
  where: ShippingFee_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateSubscriptionOrderArgs = {
  _append?: Maybe<SubscriptionOrder_Append_Input>;
  _delete_at_path?: Maybe<SubscriptionOrder_Delete_At_Path_Input>;
  _delete_elem?: Maybe<SubscriptionOrder_Delete_Elem_Input>;
  _delete_key?: Maybe<SubscriptionOrder_Delete_Key_Input>;
  _inc?: Maybe<SubscriptionOrder_Inc_Input>;
  _prepend?: Maybe<SubscriptionOrder_Prepend_Input>;
  _set?: Maybe<SubscriptionOrder_Set_Input>;
  pk_columns: SubscriptionOrder_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdateSubscriptionOrderPrivateVdsArgs = {
  _append?: Maybe<SubscriptionOrderPrivateVd_Append_Input>;
  _delete_at_path?: Maybe<SubscriptionOrderPrivateVd_Delete_At_Path_Input>;
  _delete_elem?: Maybe<SubscriptionOrderPrivateVd_Delete_Elem_Input>;
  _delete_key?: Maybe<SubscriptionOrderPrivateVd_Delete_Key_Input>;
  _inc?: Maybe<SubscriptionOrderPrivateVd_Inc_Input>;
  _prepend?: Maybe<SubscriptionOrderPrivateVd_Prepend_Input>;
  _set?: Maybe<SubscriptionOrderPrivateVd_Set_Input>;
  where: SubscriptionOrderPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateSubscriptionOrdersArgs = {
  _append?: Maybe<SubscriptionOrder_Append_Input>;
  _delete_at_path?: Maybe<SubscriptionOrder_Delete_At_Path_Input>;
  _delete_elem?: Maybe<SubscriptionOrder_Delete_Elem_Input>;
  _delete_key?: Maybe<SubscriptionOrder_Delete_Key_Input>;
  _inc?: Maybe<SubscriptionOrder_Inc_Input>;
  _prepend?: Maybe<SubscriptionOrder_Prepend_Input>;
  _set?: Maybe<SubscriptionOrder_Set_Input>;
  where: SubscriptionOrder_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateUserArgs = {
  _append?: Maybe<User_Append_Input>;
  _delete_at_path?: Maybe<User_Delete_At_Path_Input>;
  _delete_elem?: Maybe<User_Delete_Elem_Input>;
  _delete_key?: Maybe<User_Delete_Key_Input>;
  _inc?: Maybe<User_Inc_Input>;
  _prepend?: Maybe<User_Prepend_Input>;
  _set?: Maybe<User_Set_Input>;
  pk_columns: User_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdateUserGroupArgs = {
  _inc?: Maybe<UserGroup_Inc_Input>;
  _set?: Maybe<UserGroup_Set_Input>;
  pk_columns: UserGroup_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdateUserGroupPrivateVdsArgs = {
  _inc?: Maybe<UserGroupPrivateVd_Inc_Input>;
  _set?: Maybe<UserGroupPrivateVd_Set_Input>;
  where: UserGroupPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateUserGroupsArgs = {
  _inc?: Maybe<UserGroup_Inc_Input>;
  _set?: Maybe<UserGroup_Set_Input>;
  where: UserGroup_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateUserMemoArgs = {
  _inc?: Maybe<UserMemo_Inc_Input>;
  _set?: Maybe<UserMemo_Set_Input>;
  pk_columns: UserMemo_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdateUserMemoPrivateVdsArgs = {
  _inc?: Maybe<UserMemoPrivateVd_Inc_Input>;
  _set?: Maybe<UserMemoPrivateVd_Set_Input>;
  where: UserMemoPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateUserMemosArgs = {
  _inc?: Maybe<UserMemo_Inc_Input>;
  _set?: Maybe<UserMemo_Set_Input>;
  where: UserMemo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateUserOrganizationArgs = {
  _append?: Maybe<UserOrganization_Append_Input>;
  _delete_at_path?: Maybe<UserOrganization_Delete_At_Path_Input>;
  _delete_elem?: Maybe<UserOrganization_Delete_Elem_Input>;
  _delete_key?: Maybe<UserOrganization_Delete_Key_Input>;
  _inc?: Maybe<UserOrganization_Inc_Input>;
  _prepend?: Maybe<UserOrganization_Prepend_Input>;
  _set?: Maybe<UserOrganization_Set_Input>;
  pk_columns: UserOrganization_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdateUserOrganizationPrivateVdsArgs = {
  _append?: Maybe<UserOrganizationPrivateVd_Append_Input>;
  _delete_at_path?: Maybe<UserOrganizationPrivateVd_Delete_At_Path_Input>;
  _delete_elem?: Maybe<UserOrganizationPrivateVd_Delete_Elem_Input>;
  _delete_key?: Maybe<UserOrganizationPrivateVd_Delete_Key_Input>;
  _inc?: Maybe<UserOrganizationPrivateVd_Inc_Input>;
  _prepend?: Maybe<UserOrganizationPrivateVd_Prepend_Input>;
  _set?: Maybe<UserOrganizationPrivateVd_Set_Input>;
  where: UserOrganizationPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateUserOrganizationsArgs = {
  _append?: Maybe<UserOrganization_Append_Input>;
  _delete_at_path?: Maybe<UserOrganization_Delete_At_Path_Input>;
  _delete_elem?: Maybe<UserOrganization_Delete_Elem_Input>;
  _delete_key?: Maybe<UserOrganization_Delete_Key_Input>;
  _inc?: Maybe<UserOrganization_Inc_Input>;
  _prepend?: Maybe<UserOrganization_Prepend_Input>;
  _set?: Maybe<UserOrganization_Set_Input>;
  where: UserOrganization_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateUserPrivateVdsArgs = {
  _append?: Maybe<UserPrivateVd_Append_Input>;
  _delete_at_path?: Maybe<UserPrivateVd_Delete_At_Path_Input>;
  _delete_elem?: Maybe<UserPrivateVd_Delete_Elem_Input>;
  _delete_key?: Maybe<UserPrivateVd_Delete_Key_Input>;
  _inc?: Maybe<UserPrivateVd_Inc_Input>;
  _prepend?: Maybe<UserPrivateVd_Prepend_Input>;
  _set?: Maybe<UserPrivateVd_Set_Input>;
  where: UserPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateUserProjectArgs = {
  _append?: Maybe<UserProject_Append_Input>;
  _delete_at_path?: Maybe<UserProject_Delete_At_Path_Input>;
  _delete_elem?: Maybe<UserProject_Delete_Elem_Input>;
  _delete_key?: Maybe<UserProject_Delete_Key_Input>;
  _inc?: Maybe<UserProject_Inc_Input>;
  _prepend?: Maybe<UserProject_Prepend_Input>;
  _set?: Maybe<UserProject_Set_Input>;
  pk_columns: UserProject_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdateUserProjectPrivateVdsArgs = {
  _append?: Maybe<UserProjectPrivateVd_Append_Input>;
  _delete_at_path?: Maybe<UserProjectPrivateVd_Delete_At_Path_Input>;
  _delete_elem?: Maybe<UserProjectPrivateVd_Delete_Elem_Input>;
  _delete_key?: Maybe<UserProjectPrivateVd_Delete_Key_Input>;
  _inc?: Maybe<UserProjectPrivateVd_Inc_Input>;
  _prepend?: Maybe<UserProjectPrivateVd_Prepend_Input>;
  _set?: Maybe<UserProjectPrivateVd_Set_Input>;
  where: UserProjectPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateUserProjectsArgs = {
  _append?: Maybe<UserProject_Append_Input>;
  _delete_at_path?: Maybe<UserProject_Delete_At_Path_Input>;
  _delete_elem?: Maybe<UserProject_Delete_Elem_Input>;
  _delete_key?: Maybe<UserProject_Delete_Key_Input>;
  _inc?: Maybe<UserProject_Inc_Input>;
  _prepend?: Maybe<UserProject_Prepend_Input>;
  _set?: Maybe<UserProject_Set_Input>;
  where: UserProject_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateUserSettingArgs = {
  _append?: Maybe<UserSetting_Append_Input>;
  _delete_at_path?: Maybe<UserSetting_Delete_At_Path_Input>;
  _delete_elem?: Maybe<UserSetting_Delete_Elem_Input>;
  _delete_key?: Maybe<UserSetting_Delete_Key_Input>;
  _inc?: Maybe<UserSetting_Inc_Input>;
  _prepend?: Maybe<UserSetting_Prepend_Input>;
  _set?: Maybe<UserSetting_Set_Input>;
  pk_columns: UserSetting_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdateUserSettingPrivateVdsArgs = {
  _append?: Maybe<UserSettingPrivateVd_Append_Input>;
  _delete_at_path?: Maybe<UserSettingPrivateVd_Delete_At_Path_Input>;
  _delete_elem?: Maybe<UserSettingPrivateVd_Delete_Elem_Input>;
  _delete_key?: Maybe<UserSettingPrivateVd_Delete_Key_Input>;
  _inc?: Maybe<UserSettingPrivateVd_Inc_Input>;
  _prepend?: Maybe<UserSettingPrivateVd_Prepend_Input>;
  _set?: Maybe<UserSettingPrivateVd_Set_Input>;
  where: UserSettingPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateUserSettingsArgs = {
  _append?: Maybe<UserSetting_Append_Input>;
  _delete_at_path?: Maybe<UserSetting_Delete_At_Path_Input>;
  _delete_elem?: Maybe<UserSetting_Delete_Elem_Input>;
  _delete_key?: Maybe<UserSetting_Delete_Key_Input>;
  _inc?: Maybe<UserSetting_Inc_Input>;
  _prepend?: Maybe<UserSetting_Prepend_Input>;
  _set?: Maybe<UserSetting_Set_Input>;
  where: UserSetting_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateUserUserGroupArgs = {
  _inc?: Maybe<UserUserGroup_Inc_Input>;
  _set?: Maybe<UserUserGroup_Set_Input>;
  pk_columns: UserUserGroup_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdateUserUserGroupPrivateVdsArgs = {
  _inc?: Maybe<UserUserGroupPrivateVd_Inc_Input>;
  _set?: Maybe<UserUserGroupPrivateVd_Set_Input>;
  where: UserUserGroupPrivateVd_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateUserUserGroupsArgs = {
  _inc?: Maybe<UserUserGroup_Inc_Input>;
  _set?: Maybe<UserUserGroup_Set_Input>;
  where: UserUserGroup_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdateUsersArgs = {
  _append?: Maybe<User_Append_Input>;
  _delete_at_path?: Maybe<User_Delete_At_Path_Input>;
  _delete_elem?: Maybe<User_Delete_Elem_Input>;
  _delete_key?: Maybe<User_Delete_Key_Input>;
  _inc?: Maybe<User_Inc_Input>;
  _prepend?: Maybe<User_Prepend_Input>;
  _set?: Maybe<User_Set_Input>;
  where: User_Bool_Exp;
};

/** columns and relationships of "tbl_notification" */
export type Notification = {
  __typename?: 'notification';
  created_at: Scalars['timestamptz'];
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id: Scalars['bigint'];
  sessionId?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user: User;
  user_id?: Maybe<Scalars['bigint']>;
};


/** columns and relationships of "tbl_notification" */
export type NotificationDataArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "tbl_notification" */
export type Notification_Aggregate = {
  __typename?: 'notification_aggregate';
  aggregate?: Maybe<Notification_Aggregate_Fields>;
  nodes: Array<Notification>;
};

/** aggregate fields of "tbl_notification" */
export type Notification_Aggregate_Fields = {
  __typename?: 'notification_aggregate_fields';
  avg?: Maybe<Notification_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Notification_Max_Fields>;
  min?: Maybe<Notification_Min_Fields>;
  stddev?: Maybe<Notification_Stddev_Fields>;
  stddev_pop?: Maybe<Notification_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Notification_Stddev_Samp_Fields>;
  sum?: Maybe<Notification_Sum_Fields>;
  var_pop?: Maybe<Notification_Var_Pop_Fields>;
  var_samp?: Maybe<Notification_Var_Samp_Fields>;
  variance?: Maybe<Notification_Variance_Fields>;
};


/** aggregate fields of "tbl_notification" */
export type Notification_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Notification_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "tbl_notification" */
export type Notification_Aggregate_Order_By = {
  avg?: Maybe<Notification_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Notification_Max_Order_By>;
  min?: Maybe<Notification_Min_Order_By>;
  stddev?: Maybe<Notification_Stddev_Order_By>;
  stddev_pop?: Maybe<Notification_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Notification_Stddev_Samp_Order_By>;
  sum?: Maybe<Notification_Sum_Order_By>;
  var_pop?: Maybe<Notification_Var_Pop_Order_By>;
  var_samp?: Maybe<Notification_Var_Samp_Order_By>;
  variance?: Maybe<Notification_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Notification_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "tbl_notification" */
export type Notification_Arr_Rel_Insert_Input = {
  data: Array<Notification_Insert_Input>;
  /** on conflict condition */
  on_conflict?: Maybe<Notification_On_Conflict>;
};

/** aggregate avg on columns */
export type Notification_Avg_Fields = {
  __typename?: 'notification_avg_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "tbl_notification" */
export type Notification_Avg_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "tbl_notification". All fields are combined with a logical 'AND'. */
export type Notification_Bool_Exp = {
  _and?: Maybe<Array<Notification_Bool_Exp>>;
  _not?: Maybe<Notification_Bool_Exp>;
  _or?: Maybe<Array<Notification_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  sessionId?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<User_Bool_Exp>;
  user_id?: Maybe<Bigint_Comparison_Exp>;
};

/** unique or primary key constraints on table "tbl_notification" */
export enum Notification_Constraint {
  /** unique or primary key constraint */
  TblNotificationPkey = 'tbl_notification_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Notification_Delete_At_Path_Input = {
  data?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Notification_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Notification_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "tbl_notification" */
export type Notification_Inc_Input = {
  id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "tbl_notification" */
export type Notification_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  sessionId?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<User_Obj_Rel_Insert_Input>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate max on columns */
export type Notification_Max_Fields = {
  __typename?: 'notification_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  sessionId?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by max() on columns of table "tbl_notification" */
export type Notification_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  sessionId?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Notification_Min_Fields = {
  __typename?: 'notification_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  sessionId?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by min() on columns of table "tbl_notification" */
export type Notification_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  sessionId?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** response of any mutation on the table "tbl_notification" */
export type Notification_Mutation_Response = {
  __typename?: 'notification_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Notification>;
};

/** on conflict condition type for table "tbl_notification" */
export type Notification_On_Conflict = {
  constraint: Notification_Constraint;
  update_columns: Array<Notification_Update_Column>;
  where?: Maybe<Notification_Bool_Exp>;
};

/** Ordering options when selecting data from "tbl_notification". */
export type Notification_Order_By = {
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  sessionId?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user?: Maybe<User_Order_By>;
  user_id?: Maybe<Order_By>;
};

/** primary key columns input for table: notification */
export type Notification_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Notification_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "tbl_notification" */
export enum Notification_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  SessionId = 'sessionId',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "tbl_notification" */
export type Notification_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  sessionId?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate stddev on columns */
export type Notification_Stddev_Fields = {
  __typename?: 'notification_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "tbl_notification" */
export type Notification_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Notification_Stddev_Pop_Fields = {
  __typename?: 'notification_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "tbl_notification" */
export type Notification_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Notification_Stddev_Samp_Fields = {
  __typename?: 'notification_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "tbl_notification" */
export type Notification_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Notification_Sum_Fields = {
  __typename?: 'notification_sum_fields';
  id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "tbl_notification" */
export type Notification_Sum_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** update columns of table "tbl_notification" */
export enum Notification_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  SessionId = 'sessionId',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** aggregate var_pop on columns */
export type Notification_Var_Pop_Fields = {
  __typename?: 'notification_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "tbl_notification" */
export type Notification_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Notification_Var_Samp_Fields = {
  __typename?: 'notification_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "tbl_notification" */
export type Notification_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Notification_Variance_Fields = {
  __typename?: 'notification_variance_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "tbl_notification" */
export type Notification_Variance_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** columns and relationships of "tbl_order" */
export type Order = {
  __typename?: 'order';
  atmAccount?: Maybe<Scalars['String']>;
  buyer?: Maybe<Scalars['jsonb']>;
  buyerName?: Maybe<Scalars['String']>;
  /** An array relationship */
  campaigns: Array<OrderCampaign>;
  /** An aggregate relationship */
  campaigns_aggregate: OrderCampaign_Aggregate;
  countryCode?: Maybe<Scalars['String']>;
  /** An array relationship */
  couponRecord: Array<CouponRecord>;
  /** An aggregate relationship */
  couponRecord_aggregate: CouponRecord_Aggregate;
  created_at: Scalars['timestamptz'];
  cvsName?: Maybe<Scalars['String']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  esunData?: Maybe<Scalars['String']>;
  esunOrderId?: Maybe<Scalars['String']>;
  esunTradeInfo?: Maybe<Scalars['String']>;
  esunTradeState?: Maybe<Scalars['String']>;
  expiredAt?: Maybe<Scalars['timestamptz']>;
  foreign?: Maybe<Scalars['Boolean']>;
  id: Scalars['bigint'];
  invoiceNumber?: Maybe<Scalars['String']>;
  invoiceStatus?: Maybe<Scalars['String']>;
  /** An array relationship */
  issues: Array<Issue>;
  /** An aggregate relationship */
  issues_aggregate: Issue_Aggregate;
  legacyData?: Maybe<Scalars['jsonb']>;
  logistics?: Maybe<Scalars['String']>;
  memo?: Maybe<Scalars['String']>;
  metadata?: Maybe<Scalars['jsonb']>;
  paidAt?: Maybe<Scalars['timestamptz']>;
  payWay?: Maybe<Scalars['String']>;
  paypalData?: Maybe<Scalars['String']>;
  paypalToken?: Maybe<Scalars['String']>;
  /** An object relationship */
  privateVd?: Maybe<OrderPrivateVd>;
  /** An array relationship */
  products: Array<OrderProduct>;
  /** An aggregate relationship */
  products_aggregate: OrderProduct_Aggregate;
  recipient?: Maybe<Scalars['jsonb']>;
  recipientName?: Maybe<Scalars['String']>;
  selectedAt?: Maybe<Scalars['timestamptz']>;
  shipmentId?: Maybe<Scalars['String']>;
  shippedAt?: Maybe<Scalars['timestamptz']>;
  smseData?: Maybe<Scalars['String']>;
  smsePayno?: Maybe<Scalars['String']>;
  smseSmilepayno?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user: User;
  user_id?: Maybe<Scalars['bigint']>;
};


/** columns and relationships of "tbl_order" */
export type OrderBuyerArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "tbl_order" */
export type OrderCampaignsArgs = {
  distinct_on?: Maybe<Array<OrderCampaign_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrderCampaign_Order_By>>;
  where?: Maybe<OrderCampaign_Bool_Exp>;
};


/** columns and relationships of "tbl_order" */
export type OrderCampaigns_AggregateArgs = {
  distinct_on?: Maybe<Array<OrderCampaign_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrderCampaign_Order_By>>;
  where?: Maybe<OrderCampaign_Bool_Exp>;
};


/** columns and relationships of "tbl_order" */
export type OrderCouponRecordArgs = {
  distinct_on?: Maybe<Array<CouponRecord_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<CouponRecord_Order_By>>;
  where?: Maybe<CouponRecord_Bool_Exp>;
};


/** columns and relationships of "tbl_order" */
export type OrderCouponRecord_AggregateArgs = {
  distinct_on?: Maybe<Array<CouponRecord_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<CouponRecord_Order_By>>;
  where?: Maybe<CouponRecord_Bool_Exp>;
};


/** columns and relationships of "tbl_order" */
export type OrderDataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "tbl_order" */
export type OrderIssuesArgs = {
  distinct_on?: Maybe<Array<Issue_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Issue_Order_By>>;
  where?: Maybe<Issue_Bool_Exp>;
};


/** columns and relationships of "tbl_order" */
export type OrderIssues_AggregateArgs = {
  distinct_on?: Maybe<Array<Issue_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Issue_Order_By>>;
  where?: Maybe<Issue_Bool_Exp>;
};


/** columns and relationships of "tbl_order" */
export type OrderLegacyDataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "tbl_order" */
export type OrderMetadataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "tbl_order" */
export type OrderProductsArgs = {
  distinct_on?: Maybe<Array<OrderProduct_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrderProduct_Order_By>>;
  where?: Maybe<OrderProduct_Bool_Exp>;
};


/** columns and relationships of "tbl_order" */
export type OrderProducts_AggregateArgs = {
  distinct_on?: Maybe<Array<OrderProduct_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrderProduct_Order_By>>;
  where?: Maybe<OrderProduct_Bool_Exp>;
};


/** columns and relationships of "tbl_order" */
export type OrderRecipientArgs = {
  path?: Maybe<Scalars['String']>;
};

/** columns and relationships of "mn_order_campaign" */
export type OrderCampaign = {
  __typename?: 'orderCampaign';
  /** An object relationship */
  campaign: Campaign;
  campaign_id?: Maybe<Scalars['bigint']>;
  created_at: Scalars['timestamptz'];
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id: Scalars['bigint'];
  /** An object relationship */
  order: Order;
  order_id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  privateVd?: Maybe<OrderCampaignPrivateVd>;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "mn_order_campaign" */
export type OrderCampaignDataArgs = {
  path?: Maybe<Scalars['String']>;
};

/** columns and relationships of "view_order_campaign_private_vd" */
export type OrderCampaignPrivateVd = {
  __typename?: 'orderCampaignPrivateVd';
  /** An object relationship */
  campaign?: Maybe<Campaign>;
  campaign_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  order?: Maybe<Order>;
  order_id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  publicData?: Maybe<OrderCampaign>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};


/** columns and relationships of "view_order_campaign_private_vd" */
export type OrderCampaignPrivateVdDataArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "view_order_campaign_private_vd" */
export type OrderCampaignPrivateVd_Aggregate = {
  __typename?: 'orderCampaignPrivateVd_aggregate';
  aggregate?: Maybe<OrderCampaignPrivateVd_Aggregate_Fields>;
  nodes: Array<OrderCampaignPrivateVd>;
};

/** aggregate fields of "view_order_campaign_private_vd" */
export type OrderCampaignPrivateVd_Aggregate_Fields = {
  __typename?: 'orderCampaignPrivateVd_aggregate_fields';
  avg?: Maybe<OrderCampaignPrivateVd_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<OrderCampaignPrivateVd_Max_Fields>;
  min?: Maybe<OrderCampaignPrivateVd_Min_Fields>;
  stddev?: Maybe<OrderCampaignPrivateVd_Stddev_Fields>;
  stddev_pop?: Maybe<OrderCampaignPrivateVd_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<OrderCampaignPrivateVd_Stddev_Samp_Fields>;
  sum?: Maybe<OrderCampaignPrivateVd_Sum_Fields>;
  var_pop?: Maybe<OrderCampaignPrivateVd_Var_Pop_Fields>;
  var_samp?: Maybe<OrderCampaignPrivateVd_Var_Samp_Fields>;
  variance?: Maybe<OrderCampaignPrivateVd_Variance_Fields>;
};


/** aggregate fields of "view_order_campaign_private_vd" */
export type OrderCampaignPrivateVd_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<OrderCampaignPrivateVd_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type OrderCampaignPrivateVd_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type OrderCampaignPrivateVd_Avg_Fields = {
  __typename?: 'orderCampaignPrivateVd_avg_fields';
  campaign_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "view_order_campaign_private_vd". All fields are combined with a logical 'AND'. */
export type OrderCampaignPrivateVd_Bool_Exp = {
  _and?: Maybe<Array<OrderCampaignPrivateVd_Bool_Exp>>;
  _not?: Maybe<OrderCampaignPrivateVd_Bool_Exp>;
  _or?: Maybe<Array<OrderCampaignPrivateVd_Bool_Exp>>;
  campaign?: Maybe<Campaign_Bool_Exp>;
  campaign_id?: Maybe<Bigint_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  order?: Maybe<Order_Bool_Exp>;
  order_id?: Maybe<Bigint_Comparison_Exp>;
  publicData?: Maybe<OrderCampaign_Bool_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type OrderCampaignPrivateVd_Delete_At_Path_Input = {
  data?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type OrderCampaignPrivateVd_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type OrderCampaignPrivateVd_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "view_order_campaign_private_vd" */
export type OrderCampaignPrivateVd_Inc_Input = {
  campaign_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  order_id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "view_order_campaign_private_vd" */
export type OrderCampaignPrivateVd_Insert_Input = {
  campaign?: Maybe<Campaign_Obj_Rel_Insert_Input>;
  campaign_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  order?: Maybe<Order_Obj_Rel_Insert_Input>;
  order_id?: Maybe<Scalars['bigint']>;
  publicData?: Maybe<OrderCampaign_Obj_Rel_Insert_Input>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type OrderCampaignPrivateVd_Max_Fields = {
  __typename?: 'orderCampaignPrivateVd_max_fields';
  campaign_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  order_id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type OrderCampaignPrivateVd_Min_Fields = {
  __typename?: 'orderCampaignPrivateVd_min_fields';
  campaign_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  order_id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "view_order_campaign_private_vd" */
export type OrderCampaignPrivateVd_Mutation_Response = {
  __typename?: 'orderCampaignPrivateVd_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<OrderCampaignPrivateVd>;
};

/** input type for inserting object relation for remote table "view_order_campaign_private_vd" */
export type OrderCampaignPrivateVd_Obj_Rel_Insert_Input = {
  data: OrderCampaignPrivateVd_Insert_Input;
};

/** Ordering options when selecting data from "view_order_campaign_private_vd". */
export type OrderCampaignPrivateVd_Order_By = {
  campaign?: Maybe<Campaign_Order_By>;
  campaign_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  order?: Maybe<Order_Order_By>;
  order_id?: Maybe<Order_By>;
  publicData?: Maybe<OrderCampaign_Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type OrderCampaignPrivateVd_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "view_order_campaign_private_vd" */
export enum OrderCampaignPrivateVd_Select_Column {
  /** column name */
  CampaignId = 'campaign_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  OrderId = 'order_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "view_order_campaign_private_vd" */
export type OrderCampaignPrivateVd_Set_Input = {
  campaign_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  order_id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type OrderCampaignPrivateVd_Stddev_Fields = {
  __typename?: 'orderCampaignPrivateVd_stddev_fields';
  campaign_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type OrderCampaignPrivateVd_Stddev_Pop_Fields = {
  __typename?: 'orderCampaignPrivateVd_stddev_pop_fields';
  campaign_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type OrderCampaignPrivateVd_Stddev_Samp_Fields = {
  __typename?: 'orderCampaignPrivateVd_stddev_samp_fields';
  campaign_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type OrderCampaignPrivateVd_Sum_Fields = {
  __typename?: 'orderCampaignPrivateVd_sum_fields';
  campaign_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  order_id?: Maybe<Scalars['bigint']>;
};

/** aggregate var_pop on columns */
export type OrderCampaignPrivateVd_Var_Pop_Fields = {
  __typename?: 'orderCampaignPrivateVd_var_pop_fields';
  campaign_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type OrderCampaignPrivateVd_Var_Samp_Fields = {
  __typename?: 'orderCampaignPrivateVd_var_samp_fields';
  campaign_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type OrderCampaignPrivateVd_Variance_Fields = {
  __typename?: 'orderCampaignPrivateVd_variance_fields';
  campaign_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
};

/** aggregated selection of "mn_order_campaign" */
export type OrderCampaign_Aggregate = {
  __typename?: 'orderCampaign_aggregate';
  aggregate?: Maybe<OrderCampaign_Aggregate_Fields>;
  nodes: Array<OrderCampaign>;
};

/** aggregate fields of "mn_order_campaign" */
export type OrderCampaign_Aggregate_Fields = {
  __typename?: 'orderCampaign_aggregate_fields';
  avg?: Maybe<OrderCampaign_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<OrderCampaign_Max_Fields>;
  min?: Maybe<OrderCampaign_Min_Fields>;
  stddev?: Maybe<OrderCampaign_Stddev_Fields>;
  stddev_pop?: Maybe<OrderCampaign_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<OrderCampaign_Stddev_Samp_Fields>;
  sum?: Maybe<OrderCampaign_Sum_Fields>;
  var_pop?: Maybe<OrderCampaign_Var_Pop_Fields>;
  var_samp?: Maybe<OrderCampaign_Var_Samp_Fields>;
  variance?: Maybe<OrderCampaign_Variance_Fields>;
};


/** aggregate fields of "mn_order_campaign" */
export type OrderCampaign_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<OrderCampaign_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "mn_order_campaign" */
export type OrderCampaign_Aggregate_Order_By = {
  avg?: Maybe<OrderCampaign_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<OrderCampaign_Max_Order_By>;
  min?: Maybe<OrderCampaign_Min_Order_By>;
  stddev?: Maybe<OrderCampaign_Stddev_Order_By>;
  stddev_pop?: Maybe<OrderCampaign_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<OrderCampaign_Stddev_Samp_Order_By>;
  sum?: Maybe<OrderCampaign_Sum_Order_By>;
  var_pop?: Maybe<OrderCampaign_Var_Pop_Order_By>;
  var_samp?: Maybe<OrderCampaign_Var_Samp_Order_By>;
  variance?: Maybe<OrderCampaign_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type OrderCampaign_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "mn_order_campaign" */
export type OrderCampaign_Arr_Rel_Insert_Input = {
  data: Array<OrderCampaign_Insert_Input>;
  /** on conflict condition */
  on_conflict?: Maybe<OrderCampaign_On_Conflict>;
};

/** aggregate avg on columns */
export type OrderCampaign_Avg_Fields = {
  __typename?: 'orderCampaign_avg_fields';
  campaign_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "mn_order_campaign" */
export type OrderCampaign_Avg_Order_By = {
  campaign_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "mn_order_campaign". All fields are combined with a logical 'AND'. */
export type OrderCampaign_Bool_Exp = {
  _and?: Maybe<Array<OrderCampaign_Bool_Exp>>;
  _not?: Maybe<OrderCampaign_Bool_Exp>;
  _or?: Maybe<Array<OrderCampaign_Bool_Exp>>;
  campaign?: Maybe<Campaign_Bool_Exp>;
  campaign_id?: Maybe<Bigint_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  order?: Maybe<Order_Bool_Exp>;
  order_id?: Maybe<Bigint_Comparison_Exp>;
  privateVd?: Maybe<OrderCampaignPrivateVd_Bool_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "mn_order_campaign" */
export enum OrderCampaign_Constraint {
  /** unique or primary key constraint */
  MnOrderCampaignPkey = 'mn_order_campaign_pkey',
  /** unique or primary key constraint */
  OrderCampaignUniqueness = 'order_campaign_uniqueness'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type OrderCampaign_Delete_At_Path_Input = {
  data?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type OrderCampaign_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type OrderCampaign_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "mn_order_campaign" */
export type OrderCampaign_Inc_Input = {
  campaign_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  order_id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "mn_order_campaign" */
export type OrderCampaign_Insert_Input = {
  campaign?: Maybe<Campaign_Obj_Rel_Insert_Input>;
  campaign_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  order?: Maybe<Order_Obj_Rel_Insert_Input>;
  order_id?: Maybe<Scalars['bigint']>;
  privateVd?: Maybe<OrderCampaignPrivateVd_Obj_Rel_Insert_Input>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type OrderCampaign_Max_Fields = {
  __typename?: 'orderCampaign_max_fields';
  campaign_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  order_id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "mn_order_campaign" */
export type OrderCampaign_Max_Order_By = {
  campaign_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type OrderCampaign_Min_Fields = {
  __typename?: 'orderCampaign_min_fields';
  campaign_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  order_id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "mn_order_campaign" */
export type OrderCampaign_Min_Order_By = {
  campaign_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "mn_order_campaign" */
export type OrderCampaign_Mutation_Response = {
  __typename?: 'orderCampaign_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<OrderCampaign>;
};

/** input type for inserting object relation for remote table "mn_order_campaign" */
export type OrderCampaign_Obj_Rel_Insert_Input = {
  data: OrderCampaign_Insert_Input;
  /** on conflict condition */
  on_conflict?: Maybe<OrderCampaign_On_Conflict>;
};

/** on conflict condition type for table "mn_order_campaign" */
export type OrderCampaign_On_Conflict = {
  constraint: OrderCampaign_Constraint;
  update_columns: Array<OrderCampaign_Update_Column>;
  where?: Maybe<OrderCampaign_Bool_Exp>;
};

/** Ordering options when selecting data from "mn_order_campaign". */
export type OrderCampaign_Order_By = {
  campaign?: Maybe<Campaign_Order_By>;
  campaign_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  order?: Maybe<Order_Order_By>;
  order_id?: Maybe<Order_By>;
  privateVd?: Maybe<OrderCampaignPrivateVd_Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: orderCampaign */
export type OrderCampaign_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type OrderCampaign_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "mn_order_campaign" */
export enum OrderCampaign_Select_Column {
  /** column name */
  CampaignId = 'campaign_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  OrderId = 'order_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "mn_order_campaign" */
export type OrderCampaign_Set_Input = {
  campaign_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  order_id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type OrderCampaign_Stddev_Fields = {
  __typename?: 'orderCampaign_stddev_fields';
  campaign_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "mn_order_campaign" */
export type OrderCampaign_Stddev_Order_By = {
  campaign_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type OrderCampaign_Stddev_Pop_Fields = {
  __typename?: 'orderCampaign_stddev_pop_fields';
  campaign_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "mn_order_campaign" */
export type OrderCampaign_Stddev_Pop_Order_By = {
  campaign_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type OrderCampaign_Stddev_Samp_Fields = {
  __typename?: 'orderCampaign_stddev_samp_fields';
  campaign_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "mn_order_campaign" */
export type OrderCampaign_Stddev_Samp_Order_By = {
  campaign_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type OrderCampaign_Sum_Fields = {
  __typename?: 'orderCampaign_sum_fields';
  campaign_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  order_id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "mn_order_campaign" */
export type OrderCampaign_Sum_Order_By = {
  campaign_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
};

/** update columns of table "mn_order_campaign" */
export enum OrderCampaign_Update_Column {
  /** column name */
  CampaignId = 'campaign_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  OrderId = 'order_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type OrderCampaign_Var_Pop_Fields = {
  __typename?: 'orderCampaign_var_pop_fields';
  campaign_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "mn_order_campaign" */
export type OrderCampaign_Var_Pop_Order_By = {
  campaign_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type OrderCampaign_Var_Samp_Fields = {
  __typename?: 'orderCampaign_var_samp_fields';
  campaign_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "mn_order_campaign" */
export type OrderCampaign_Var_Samp_Order_By = {
  campaign_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type OrderCampaign_Variance_Fields = {
  __typename?: 'orderCampaign_variance_fields';
  campaign_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "mn_order_campaign" */
export type OrderCampaign_Variance_Order_By = {
  campaign_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
};

/** columns and relationships of "view_order_private_vd" */
export type OrderPrivateVd = {
  __typename?: 'orderPrivateVd';
  atmAccount?: Maybe<Scalars['String']>;
  buyer?: Maybe<Scalars['jsonb']>;
  buyerName?: Maybe<Scalars['String']>;
  /** An array relationship */
  campaigns: Array<OrderCampaign>;
  /** An aggregate relationship */
  campaigns_aggregate: OrderCampaign_Aggregate;
  countryCode?: Maybe<Scalars['String']>;
  /** An array relationship */
  couponRecord: Array<CouponRecord>;
  /** An aggregate relationship */
  couponRecord_aggregate: CouponRecord_Aggregate;
  created_at?: Maybe<Scalars['timestamptz']>;
  cvsName?: Maybe<Scalars['String']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  esunData?: Maybe<Scalars['String']>;
  esunOrderId?: Maybe<Scalars['String']>;
  esunTradeInfo?: Maybe<Scalars['String']>;
  esunTradeState?: Maybe<Scalars['String']>;
  expiredAt?: Maybe<Scalars['timestamptz']>;
  foreign?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['bigint']>;
  invoiceNumber?: Maybe<Scalars['String']>;
  invoiceStatus?: Maybe<Scalars['String']>;
  /** An array relationship */
  issues: Array<Issue>;
  /** An aggregate relationship */
  issues_aggregate: Issue_Aggregate;
  legacyData?: Maybe<Scalars['jsonb']>;
  logistics?: Maybe<Scalars['String']>;
  memo?: Maybe<Scalars['String']>;
  metadata?: Maybe<Scalars['jsonb']>;
  paidAt?: Maybe<Scalars['timestamptz']>;
  payWay?: Maybe<Scalars['String']>;
  paypalData?: Maybe<Scalars['String']>;
  paypalToken?: Maybe<Scalars['String']>;
  /** An array relationship */
  products: Array<OrderProduct>;
  /** An aggregate relationship */
  products_aggregate: OrderProduct_Aggregate;
  /** An object relationship */
  publicData?: Maybe<Order>;
  recipient?: Maybe<Scalars['jsonb']>;
  recipientName?: Maybe<Scalars['String']>;
  selectedAt?: Maybe<Scalars['timestamptz']>;
  shipmentId?: Maybe<Scalars['String']>;
  shippedAt?: Maybe<Scalars['timestamptz']>;
  smseData?: Maybe<Scalars['String']>;
  smsePayno?: Maybe<Scalars['String']>;
  smseSmilepayno?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  user?: Maybe<User>;
  user_id?: Maybe<Scalars['bigint']>;
};


/** columns and relationships of "view_order_private_vd" */
export type OrderPrivateVdBuyerArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "view_order_private_vd" */
export type OrderPrivateVdCampaignsArgs = {
  distinct_on?: Maybe<Array<OrderCampaign_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrderCampaign_Order_By>>;
  where?: Maybe<OrderCampaign_Bool_Exp>;
};


/** columns and relationships of "view_order_private_vd" */
export type OrderPrivateVdCampaigns_AggregateArgs = {
  distinct_on?: Maybe<Array<OrderCampaign_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrderCampaign_Order_By>>;
  where?: Maybe<OrderCampaign_Bool_Exp>;
};


/** columns and relationships of "view_order_private_vd" */
export type OrderPrivateVdCouponRecordArgs = {
  distinct_on?: Maybe<Array<CouponRecord_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<CouponRecord_Order_By>>;
  where?: Maybe<CouponRecord_Bool_Exp>;
};


/** columns and relationships of "view_order_private_vd" */
export type OrderPrivateVdCouponRecord_AggregateArgs = {
  distinct_on?: Maybe<Array<CouponRecord_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<CouponRecord_Order_By>>;
  where?: Maybe<CouponRecord_Bool_Exp>;
};


/** columns and relationships of "view_order_private_vd" */
export type OrderPrivateVdDataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "view_order_private_vd" */
export type OrderPrivateVdIssuesArgs = {
  distinct_on?: Maybe<Array<Issue_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Issue_Order_By>>;
  where?: Maybe<Issue_Bool_Exp>;
};


/** columns and relationships of "view_order_private_vd" */
export type OrderPrivateVdIssues_AggregateArgs = {
  distinct_on?: Maybe<Array<Issue_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Issue_Order_By>>;
  where?: Maybe<Issue_Bool_Exp>;
};


/** columns and relationships of "view_order_private_vd" */
export type OrderPrivateVdLegacyDataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "view_order_private_vd" */
export type OrderPrivateVdMetadataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "view_order_private_vd" */
export type OrderPrivateVdProductsArgs = {
  distinct_on?: Maybe<Array<OrderProduct_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrderProduct_Order_By>>;
  where?: Maybe<OrderProduct_Bool_Exp>;
};


/** columns and relationships of "view_order_private_vd" */
export type OrderPrivateVdProducts_AggregateArgs = {
  distinct_on?: Maybe<Array<OrderProduct_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrderProduct_Order_By>>;
  where?: Maybe<OrderProduct_Bool_Exp>;
};


/** columns and relationships of "view_order_private_vd" */
export type OrderPrivateVdRecipientArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "view_order_private_vd" */
export type OrderPrivateVd_Aggregate = {
  __typename?: 'orderPrivateVd_aggregate';
  aggregate?: Maybe<OrderPrivateVd_Aggregate_Fields>;
  nodes: Array<OrderPrivateVd>;
};

/** aggregate fields of "view_order_private_vd" */
export type OrderPrivateVd_Aggregate_Fields = {
  __typename?: 'orderPrivateVd_aggregate_fields';
  avg?: Maybe<OrderPrivateVd_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<OrderPrivateVd_Max_Fields>;
  min?: Maybe<OrderPrivateVd_Min_Fields>;
  stddev?: Maybe<OrderPrivateVd_Stddev_Fields>;
  stddev_pop?: Maybe<OrderPrivateVd_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<OrderPrivateVd_Stddev_Samp_Fields>;
  sum?: Maybe<OrderPrivateVd_Sum_Fields>;
  var_pop?: Maybe<OrderPrivateVd_Var_Pop_Fields>;
  var_samp?: Maybe<OrderPrivateVd_Var_Samp_Fields>;
  variance?: Maybe<OrderPrivateVd_Variance_Fields>;
};


/** aggregate fields of "view_order_private_vd" */
export type OrderPrivateVd_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<OrderPrivateVd_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type OrderPrivateVd_Append_Input = {
  buyer?: Maybe<Scalars['jsonb']>;
  data?: Maybe<Scalars['jsonb']>;
  legacyData?: Maybe<Scalars['jsonb']>;
  metadata?: Maybe<Scalars['jsonb']>;
  recipient?: Maybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type OrderPrivateVd_Avg_Fields = {
  __typename?: 'orderPrivateVd_avg_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "view_order_private_vd". All fields are combined with a logical 'AND'. */
export type OrderPrivateVd_Bool_Exp = {
  _and?: Maybe<Array<OrderPrivateVd_Bool_Exp>>;
  _not?: Maybe<OrderPrivateVd_Bool_Exp>;
  _or?: Maybe<Array<OrderPrivateVd_Bool_Exp>>;
  atmAccount?: Maybe<String_Comparison_Exp>;
  buyer?: Maybe<Jsonb_Comparison_Exp>;
  buyerName?: Maybe<String_Comparison_Exp>;
  campaigns?: Maybe<OrderCampaign_Bool_Exp>;
  countryCode?: Maybe<String_Comparison_Exp>;
  couponRecord?: Maybe<CouponRecord_Bool_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  cvsName?: Maybe<String_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  esunData?: Maybe<String_Comparison_Exp>;
  esunOrderId?: Maybe<String_Comparison_Exp>;
  esunTradeInfo?: Maybe<String_Comparison_Exp>;
  esunTradeState?: Maybe<String_Comparison_Exp>;
  expiredAt?: Maybe<Timestamptz_Comparison_Exp>;
  foreign?: Maybe<Boolean_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  invoiceNumber?: Maybe<String_Comparison_Exp>;
  invoiceStatus?: Maybe<String_Comparison_Exp>;
  issues?: Maybe<Issue_Bool_Exp>;
  legacyData?: Maybe<Jsonb_Comparison_Exp>;
  logistics?: Maybe<String_Comparison_Exp>;
  memo?: Maybe<String_Comparison_Exp>;
  metadata?: Maybe<Jsonb_Comparison_Exp>;
  paidAt?: Maybe<Timestamptz_Comparison_Exp>;
  payWay?: Maybe<String_Comparison_Exp>;
  paypalData?: Maybe<String_Comparison_Exp>;
  paypalToken?: Maybe<String_Comparison_Exp>;
  products?: Maybe<OrderProduct_Bool_Exp>;
  publicData?: Maybe<Order_Bool_Exp>;
  recipient?: Maybe<Jsonb_Comparison_Exp>;
  recipientName?: Maybe<String_Comparison_Exp>;
  selectedAt?: Maybe<Timestamptz_Comparison_Exp>;
  shipmentId?: Maybe<String_Comparison_Exp>;
  shippedAt?: Maybe<Timestamptz_Comparison_Exp>;
  smseData?: Maybe<String_Comparison_Exp>;
  smsePayno?: Maybe<String_Comparison_Exp>;
  smseSmilepayno?: Maybe<String_Comparison_Exp>;
  state?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<User_Bool_Exp>;
  user_id?: Maybe<Bigint_Comparison_Exp>;
};

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type OrderPrivateVd_Delete_At_Path_Input = {
  buyer?: Maybe<Array<Scalars['String']>>;
  data?: Maybe<Array<Scalars['String']>>;
  legacyData?: Maybe<Array<Scalars['String']>>;
  metadata?: Maybe<Array<Scalars['String']>>;
  recipient?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type OrderPrivateVd_Delete_Elem_Input = {
  buyer?: Maybe<Scalars['Int']>;
  data?: Maybe<Scalars['Int']>;
  legacyData?: Maybe<Scalars['Int']>;
  metadata?: Maybe<Scalars['Int']>;
  recipient?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type OrderPrivateVd_Delete_Key_Input = {
  buyer?: Maybe<Scalars['String']>;
  data?: Maybe<Scalars['String']>;
  legacyData?: Maybe<Scalars['String']>;
  metadata?: Maybe<Scalars['String']>;
  recipient?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "view_order_private_vd" */
export type OrderPrivateVd_Inc_Input = {
  id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "view_order_private_vd" */
export type OrderPrivateVd_Insert_Input = {
  atmAccount?: Maybe<Scalars['String']>;
  buyer?: Maybe<Scalars['jsonb']>;
  buyerName?: Maybe<Scalars['String']>;
  campaigns?: Maybe<OrderCampaign_Arr_Rel_Insert_Input>;
  countryCode?: Maybe<Scalars['String']>;
  couponRecord?: Maybe<CouponRecord_Arr_Rel_Insert_Input>;
  created_at?: Maybe<Scalars['timestamptz']>;
  cvsName?: Maybe<Scalars['String']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  esunData?: Maybe<Scalars['String']>;
  esunOrderId?: Maybe<Scalars['String']>;
  esunTradeInfo?: Maybe<Scalars['String']>;
  esunTradeState?: Maybe<Scalars['String']>;
  expiredAt?: Maybe<Scalars['timestamptz']>;
  foreign?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['bigint']>;
  invoiceNumber?: Maybe<Scalars['String']>;
  invoiceStatus?: Maybe<Scalars['String']>;
  issues?: Maybe<Issue_Arr_Rel_Insert_Input>;
  legacyData?: Maybe<Scalars['jsonb']>;
  logistics?: Maybe<Scalars['String']>;
  memo?: Maybe<Scalars['String']>;
  metadata?: Maybe<Scalars['jsonb']>;
  paidAt?: Maybe<Scalars['timestamptz']>;
  payWay?: Maybe<Scalars['String']>;
  paypalData?: Maybe<Scalars['String']>;
  paypalToken?: Maybe<Scalars['String']>;
  products?: Maybe<OrderProduct_Arr_Rel_Insert_Input>;
  publicData?: Maybe<Order_Obj_Rel_Insert_Input>;
  recipient?: Maybe<Scalars['jsonb']>;
  recipientName?: Maybe<Scalars['String']>;
  selectedAt?: Maybe<Scalars['timestamptz']>;
  shipmentId?: Maybe<Scalars['String']>;
  shippedAt?: Maybe<Scalars['timestamptz']>;
  smseData?: Maybe<Scalars['String']>;
  smsePayno?: Maybe<Scalars['String']>;
  smseSmilepayno?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<User_Obj_Rel_Insert_Input>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate max on columns */
export type OrderPrivateVd_Max_Fields = {
  __typename?: 'orderPrivateVd_max_fields';
  atmAccount?: Maybe<Scalars['String']>;
  buyerName?: Maybe<Scalars['String']>;
  countryCode?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  cvsName?: Maybe<Scalars['String']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  esunData?: Maybe<Scalars['String']>;
  esunOrderId?: Maybe<Scalars['String']>;
  esunTradeInfo?: Maybe<Scalars['String']>;
  esunTradeState?: Maybe<Scalars['String']>;
  expiredAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  invoiceNumber?: Maybe<Scalars['String']>;
  invoiceStatus?: Maybe<Scalars['String']>;
  logistics?: Maybe<Scalars['String']>;
  memo?: Maybe<Scalars['String']>;
  paidAt?: Maybe<Scalars['timestamptz']>;
  payWay?: Maybe<Scalars['String']>;
  paypalData?: Maybe<Scalars['String']>;
  paypalToken?: Maybe<Scalars['String']>;
  recipientName?: Maybe<Scalars['String']>;
  selectedAt?: Maybe<Scalars['timestamptz']>;
  shipmentId?: Maybe<Scalars['String']>;
  shippedAt?: Maybe<Scalars['timestamptz']>;
  smseData?: Maybe<Scalars['String']>;
  smsePayno?: Maybe<Scalars['String']>;
  smseSmilepayno?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate min on columns */
export type OrderPrivateVd_Min_Fields = {
  __typename?: 'orderPrivateVd_min_fields';
  atmAccount?: Maybe<Scalars['String']>;
  buyerName?: Maybe<Scalars['String']>;
  countryCode?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  cvsName?: Maybe<Scalars['String']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  esunData?: Maybe<Scalars['String']>;
  esunOrderId?: Maybe<Scalars['String']>;
  esunTradeInfo?: Maybe<Scalars['String']>;
  esunTradeState?: Maybe<Scalars['String']>;
  expiredAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  invoiceNumber?: Maybe<Scalars['String']>;
  invoiceStatus?: Maybe<Scalars['String']>;
  logistics?: Maybe<Scalars['String']>;
  memo?: Maybe<Scalars['String']>;
  paidAt?: Maybe<Scalars['timestamptz']>;
  payWay?: Maybe<Scalars['String']>;
  paypalData?: Maybe<Scalars['String']>;
  paypalToken?: Maybe<Scalars['String']>;
  recipientName?: Maybe<Scalars['String']>;
  selectedAt?: Maybe<Scalars['timestamptz']>;
  shipmentId?: Maybe<Scalars['String']>;
  shippedAt?: Maybe<Scalars['timestamptz']>;
  smseData?: Maybe<Scalars['String']>;
  smsePayno?: Maybe<Scalars['String']>;
  smseSmilepayno?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** response of any mutation on the table "view_order_private_vd" */
export type OrderPrivateVd_Mutation_Response = {
  __typename?: 'orderPrivateVd_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<OrderPrivateVd>;
};

/** input type for inserting object relation for remote table "view_order_private_vd" */
export type OrderPrivateVd_Obj_Rel_Insert_Input = {
  data: OrderPrivateVd_Insert_Input;
};

/** Ordering options when selecting data from "view_order_private_vd". */
export type OrderPrivateVd_Order_By = {
  atmAccount?: Maybe<Order_By>;
  buyer?: Maybe<Order_By>;
  buyerName?: Maybe<Order_By>;
  campaigns_aggregate?: Maybe<OrderCampaign_Aggregate_Order_By>;
  countryCode?: Maybe<Order_By>;
  couponRecord_aggregate?: Maybe<CouponRecord_Aggregate_Order_By>;
  created_at?: Maybe<Order_By>;
  cvsName?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  esunData?: Maybe<Order_By>;
  esunOrderId?: Maybe<Order_By>;
  esunTradeInfo?: Maybe<Order_By>;
  esunTradeState?: Maybe<Order_By>;
  expiredAt?: Maybe<Order_By>;
  foreign?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  invoiceNumber?: Maybe<Order_By>;
  invoiceStatus?: Maybe<Order_By>;
  issues_aggregate?: Maybe<Issue_Aggregate_Order_By>;
  legacyData?: Maybe<Order_By>;
  logistics?: Maybe<Order_By>;
  memo?: Maybe<Order_By>;
  metadata?: Maybe<Order_By>;
  paidAt?: Maybe<Order_By>;
  payWay?: Maybe<Order_By>;
  paypalData?: Maybe<Order_By>;
  paypalToken?: Maybe<Order_By>;
  products_aggregate?: Maybe<OrderProduct_Aggregate_Order_By>;
  publicData?: Maybe<Order_Order_By>;
  recipient?: Maybe<Order_By>;
  recipientName?: Maybe<Order_By>;
  selectedAt?: Maybe<Order_By>;
  shipmentId?: Maybe<Order_By>;
  shippedAt?: Maybe<Order_By>;
  smseData?: Maybe<Order_By>;
  smsePayno?: Maybe<Order_By>;
  smseSmilepayno?: Maybe<Order_By>;
  state?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user?: Maybe<User_Order_By>;
  user_id?: Maybe<Order_By>;
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type OrderPrivateVd_Prepend_Input = {
  buyer?: Maybe<Scalars['jsonb']>;
  data?: Maybe<Scalars['jsonb']>;
  legacyData?: Maybe<Scalars['jsonb']>;
  metadata?: Maybe<Scalars['jsonb']>;
  recipient?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "view_order_private_vd" */
export enum OrderPrivateVd_Select_Column {
  /** column name */
  AtmAccount = 'atmAccount',
  /** column name */
  Buyer = 'buyer',
  /** column name */
  BuyerName = 'buyerName',
  /** column name */
  CountryCode = 'countryCode',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CvsName = 'cvsName',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EsunData = 'esunData',
  /** column name */
  EsunOrderId = 'esunOrderId',
  /** column name */
  EsunTradeInfo = 'esunTradeInfo',
  /** column name */
  EsunTradeState = 'esunTradeState',
  /** column name */
  ExpiredAt = 'expiredAt',
  /** column name */
  Foreign = 'foreign',
  /** column name */
  Id = 'id',
  /** column name */
  InvoiceNumber = 'invoiceNumber',
  /** column name */
  InvoiceStatus = 'invoiceStatus',
  /** column name */
  LegacyData = 'legacyData',
  /** column name */
  Logistics = 'logistics',
  /** column name */
  Memo = 'memo',
  /** column name */
  Metadata = 'metadata',
  /** column name */
  PaidAt = 'paidAt',
  /** column name */
  PayWay = 'payWay',
  /** column name */
  PaypalData = 'paypalData',
  /** column name */
  PaypalToken = 'paypalToken',
  /** column name */
  Recipient = 'recipient',
  /** column name */
  RecipientName = 'recipientName',
  /** column name */
  SelectedAt = 'selectedAt',
  /** column name */
  ShipmentId = 'shipmentId',
  /** column name */
  ShippedAt = 'shippedAt',
  /** column name */
  SmseData = 'smseData',
  /** column name */
  SmsePayno = 'smsePayno',
  /** column name */
  SmseSmilepayno = 'smseSmilepayno',
  /** column name */
  State = 'state',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "view_order_private_vd" */
export type OrderPrivateVd_Set_Input = {
  atmAccount?: Maybe<Scalars['String']>;
  buyer?: Maybe<Scalars['jsonb']>;
  buyerName?: Maybe<Scalars['String']>;
  countryCode?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  cvsName?: Maybe<Scalars['String']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  esunData?: Maybe<Scalars['String']>;
  esunOrderId?: Maybe<Scalars['String']>;
  esunTradeInfo?: Maybe<Scalars['String']>;
  esunTradeState?: Maybe<Scalars['String']>;
  expiredAt?: Maybe<Scalars['timestamptz']>;
  foreign?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['bigint']>;
  invoiceNumber?: Maybe<Scalars['String']>;
  invoiceStatus?: Maybe<Scalars['String']>;
  legacyData?: Maybe<Scalars['jsonb']>;
  logistics?: Maybe<Scalars['String']>;
  memo?: Maybe<Scalars['String']>;
  metadata?: Maybe<Scalars['jsonb']>;
  paidAt?: Maybe<Scalars['timestamptz']>;
  payWay?: Maybe<Scalars['String']>;
  paypalData?: Maybe<Scalars['String']>;
  paypalToken?: Maybe<Scalars['String']>;
  recipient?: Maybe<Scalars['jsonb']>;
  recipientName?: Maybe<Scalars['String']>;
  selectedAt?: Maybe<Scalars['timestamptz']>;
  shipmentId?: Maybe<Scalars['String']>;
  shippedAt?: Maybe<Scalars['timestamptz']>;
  smseData?: Maybe<Scalars['String']>;
  smsePayno?: Maybe<Scalars['String']>;
  smseSmilepayno?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate stddev on columns */
export type OrderPrivateVd_Stddev_Fields = {
  __typename?: 'orderPrivateVd_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type OrderPrivateVd_Stddev_Pop_Fields = {
  __typename?: 'orderPrivateVd_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type OrderPrivateVd_Stddev_Samp_Fields = {
  __typename?: 'orderPrivateVd_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type OrderPrivateVd_Sum_Fields = {
  __typename?: 'orderPrivateVd_sum_fields';
  id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate var_pop on columns */
export type OrderPrivateVd_Var_Pop_Fields = {
  __typename?: 'orderPrivateVd_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type OrderPrivateVd_Var_Samp_Fields = {
  __typename?: 'orderPrivateVd_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type OrderPrivateVd_Variance_Fields = {
  __typename?: 'orderPrivateVd_variance_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "mn_order_product" */
export type OrderProduct = {
  __typename?: 'orderProduct';
  assignedQuantity?: Maybe<Scalars['Int']>;
  created_at: Scalars['timestamptz'];
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  fulfilled?: Maybe<Scalars['Boolean']>;
  id: Scalars['bigint'];
  /** An object relationship */
  order: Order;
  order_id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  /** An object relationship */
  privateVd?: Maybe<OrderProductPrivateVd>;
  /** An object relationship */
  product: Product;
  product_id?: Maybe<Scalars['bigint']>;
  quantity?: Maybe<Scalars['Int']>;
  returnedQuantity?: Maybe<Scalars['Int']>;
  snapshot?: Maybe<Scalars['jsonb']>;
  soldout?: Maybe<Scalars['Boolean']>;
  subtotal?: Maybe<Scalars['Int']>;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "mn_order_product" */
export type OrderProductDataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "mn_order_product" */
export type OrderProductSnapshotArgs = {
  path?: Maybe<Scalars['String']>;
};

/** columns and relationships of "view_order_product_private_vd" */
export type OrderProductPrivateVd = {
  __typename?: 'orderProductPrivateVd';
  assignedQuantity?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  fulfilled?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  order?: Maybe<Order>;
  order_id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  /** An object relationship */
  product?: Maybe<Product>;
  product_id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  publicData?: Maybe<OrderProduct>;
  quantity?: Maybe<Scalars['Int']>;
  returnedQuantity?: Maybe<Scalars['Int']>;
  snapshot?: Maybe<Scalars['jsonb']>;
  soldout?: Maybe<Scalars['Boolean']>;
  subtotal?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};


/** columns and relationships of "view_order_product_private_vd" */
export type OrderProductPrivateVdDataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "view_order_product_private_vd" */
export type OrderProductPrivateVdSnapshotArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "view_order_product_private_vd" */
export type OrderProductPrivateVd_Aggregate = {
  __typename?: 'orderProductPrivateVd_aggregate';
  aggregate?: Maybe<OrderProductPrivateVd_Aggregate_Fields>;
  nodes: Array<OrderProductPrivateVd>;
};

/** aggregate fields of "view_order_product_private_vd" */
export type OrderProductPrivateVd_Aggregate_Fields = {
  __typename?: 'orderProductPrivateVd_aggregate_fields';
  avg?: Maybe<OrderProductPrivateVd_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<OrderProductPrivateVd_Max_Fields>;
  min?: Maybe<OrderProductPrivateVd_Min_Fields>;
  stddev?: Maybe<OrderProductPrivateVd_Stddev_Fields>;
  stddev_pop?: Maybe<OrderProductPrivateVd_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<OrderProductPrivateVd_Stddev_Samp_Fields>;
  sum?: Maybe<OrderProductPrivateVd_Sum_Fields>;
  var_pop?: Maybe<OrderProductPrivateVd_Var_Pop_Fields>;
  var_samp?: Maybe<OrderProductPrivateVd_Var_Samp_Fields>;
  variance?: Maybe<OrderProductPrivateVd_Variance_Fields>;
};


/** aggregate fields of "view_order_product_private_vd" */
export type OrderProductPrivateVd_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<OrderProductPrivateVd_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type OrderProductPrivateVd_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
  snapshot?: Maybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type OrderProductPrivateVd_Avg_Fields = {
  __typename?: 'orderProductPrivateVd_avg_fields';
  assignedQuantity?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
  returnedQuantity?: Maybe<Scalars['Float']>;
  subtotal?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "view_order_product_private_vd". All fields are combined with a logical 'AND'. */
export type OrderProductPrivateVd_Bool_Exp = {
  _and?: Maybe<Array<OrderProductPrivateVd_Bool_Exp>>;
  _not?: Maybe<OrderProductPrivateVd_Bool_Exp>;
  _or?: Maybe<Array<OrderProductPrivateVd_Bool_Exp>>;
  assignedQuantity?: Maybe<Int_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  fulfilled?: Maybe<Boolean_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  order?: Maybe<Order_Bool_Exp>;
  order_id?: Maybe<Bigint_Comparison_Exp>;
  price?: Maybe<Int_Comparison_Exp>;
  product?: Maybe<Product_Bool_Exp>;
  product_id?: Maybe<Bigint_Comparison_Exp>;
  publicData?: Maybe<OrderProduct_Bool_Exp>;
  quantity?: Maybe<Int_Comparison_Exp>;
  returnedQuantity?: Maybe<Int_Comparison_Exp>;
  snapshot?: Maybe<Jsonb_Comparison_Exp>;
  soldout?: Maybe<Boolean_Comparison_Exp>;
  subtotal?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type OrderProductPrivateVd_Delete_At_Path_Input = {
  data?: Maybe<Array<Scalars['String']>>;
  snapshot?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type OrderProductPrivateVd_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
  snapshot?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type OrderProductPrivateVd_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
  snapshot?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "view_order_product_private_vd" */
export type OrderProductPrivateVd_Inc_Input = {
  assignedQuantity?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['bigint']>;
  order_id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  product_id?: Maybe<Scalars['bigint']>;
  quantity?: Maybe<Scalars['Int']>;
  returnedQuantity?: Maybe<Scalars['Int']>;
  subtotal?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "view_order_product_private_vd" */
export type OrderProductPrivateVd_Insert_Input = {
  assignedQuantity?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  fulfilled?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['bigint']>;
  order?: Maybe<Order_Obj_Rel_Insert_Input>;
  order_id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  product?: Maybe<Product_Obj_Rel_Insert_Input>;
  product_id?: Maybe<Scalars['bigint']>;
  publicData?: Maybe<OrderProduct_Obj_Rel_Insert_Input>;
  quantity?: Maybe<Scalars['Int']>;
  returnedQuantity?: Maybe<Scalars['Int']>;
  snapshot?: Maybe<Scalars['jsonb']>;
  soldout?: Maybe<Scalars['Boolean']>;
  subtotal?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type OrderProductPrivateVd_Max_Fields = {
  __typename?: 'orderProductPrivateVd_max_fields';
  assignedQuantity?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  order_id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  product_id?: Maybe<Scalars['bigint']>;
  quantity?: Maybe<Scalars['Int']>;
  returnedQuantity?: Maybe<Scalars['Int']>;
  subtotal?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type OrderProductPrivateVd_Min_Fields = {
  __typename?: 'orderProductPrivateVd_min_fields';
  assignedQuantity?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  order_id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  product_id?: Maybe<Scalars['bigint']>;
  quantity?: Maybe<Scalars['Int']>;
  returnedQuantity?: Maybe<Scalars['Int']>;
  subtotal?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "view_order_product_private_vd" */
export type OrderProductPrivateVd_Mutation_Response = {
  __typename?: 'orderProductPrivateVd_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<OrderProductPrivateVd>;
};

/** input type for inserting object relation for remote table "view_order_product_private_vd" */
export type OrderProductPrivateVd_Obj_Rel_Insert_Input = {
  data: OrderProductPrivateVd_Insert_Input;
};

/** Ordering options when selecting data from "view_order_product_private_vd". */
export type OrderProductPrivateVd_Order_By = {
  assignedQuantity?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  fulfilled?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  order?: Maybe<Order_Order_By>;
  order_id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  product?: Maybe<Product_Order_By>;
  product_id?: Maybe<Order_By>;
  publicData?: Maybe<OrderProduct_Order_By>;
  quantity?: Maybe<Order_By>;
  returnedQuantity?: Maybe<Order_By>;
  snapshot?: Maybe<Order_By>;
  soldout?: Maybe<Order_By>;
  subtotal?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type OrderProductPrivateVd_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
  snapshot?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "view_order_product_private_vd" */
export enum OrderProductPrivateVd_Select_Column {
  /** column name */
  AssignedQuantity = 'assignedQuantity',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Fulfilled = 'fulfilled',
  /** column name */
  Id = 'id',
  /** column name */
  OrderId = 'order_id',
  /** column name */
  Price = 'price',
  /** column name */
  ProductId = 'product_id',
  /** column name */
  Quantity = 'quantity',
  /** column name */
  ReturnedQuantity = 'returnedQuantity',
  /** column name */
  Snapshot = 'snapshot',
  /** column name */
  Soldout = 'soldout',
  /** column name */
  Subtotal = 'subtotal',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "view_order_product_private_vd" */
export type OrderProductPrivateVd_Set_Input = {
  assignedQuantity?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  fulfilled?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['bigint']>;
  order_id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  product_id?: Maybe<Scalars['bigint']>;
  quantity?: Maybe<Scalars['Int']>;
  returnedQuantity?: Maybe<Scalars['Int']>;
  snapshot?: Maybe<Scalars['jsonb']>;
  soldout?: Maybe<Scalars['Boolean']>;
  subtotal?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type OrderProductPrivateVd_Stddev_Fields = {
  __typename?: 'orderProductPrivateVd_stddev_fields';
  assignedQuantity?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
  returnedQuantity?: Maybe<Scalars['Float']>;
  subtotal?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type OrderProductPrivateVd_Stddev_Pop_Fields = {
  __typename?: 'orderProductPrivateVd_stddev_pop_fields';
  assignedQuantity?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
  returnedQuantity?: Maybe<Scalars['Float']>;
  subtotal?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type OrderProductPrivateVd_Stddev_Samp_Fields = {
  __typename?: 'orderProductPrivateVd_stddev_samp_fields';
  assignedQuantity?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
  returnedQuantity?: Maybe<Scalars['Float']>;
  subtotal?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type OrderProductPrivateVd_Sum_Fields = {
  __typename?: 'orderProductPrivateVd_sum_fields';
  assignedQuantity?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['bigint']>;
  order_id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  product_id?: Maybe<Scalars['bigint']>;
  quantity?: Maybe<Scalars['Int']>;
  returnedQuantity?: Maybe<Scalars['Int']>;
  subtotal?: Maybe<Scalars['Int']>;
};

/** aggregate var_pop on columns */
export type OrderProductPrivateVd_Var_Pop_Fields = {
  __typename?: 'orderProductPrivateVd_var_pop_fields';
  assignedQuantity?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
  returnedQuantity?: Maybe<Scalars['Float']>;
  subtotal?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type OrderProductPrivateVd_Var_Samp_Fields = {
  __typename?: 'orderProductPrivateVd_var_samp_fields';
  assignedQuantity?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
  returnedQuantity?: Maybe<Scalars['Float']>;
  subtotal?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type OrderProductPrivateVd_Variance_Fields = {
  __typename?: 'orderProductPrivateVd_variance_fields';
  assignedQuantity?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
  returnedQuantity?: Maybe<Scalars['Float']>;
  subtotal?: Maybe<Scalars['Float']>;
};

/** aggregated selection of "mn_order_product" */
export type OrderProduct_Aggregate = {
  __typename?: 'orderProduct_aggregate';
  aggregate?: Maybe<OrderProduct_Aggregate_Fields>;
  nodes: Array<OrderProduct>;
};

/** aggregate fields of "mn_order_product" */
export type OrderProduct_Aggregate_Fields = {
  __typename?: 'orderProduct_aggregate_fields';
  avg?: Maybe<OrderProduct_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<OrderProduct_Max_Fields>;
  min?: Maybe<OrderProduct_Min_Fields>;
  stddev?: Maybe<OrderProduct_Stddev_Fields>;
  stddev_pop?: Maybe<OrderProduct_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<OrderProduct_Stddev_Samp_Fields>;
  sum?: Maybe<OrderProduct_Sum_Fields>;
  var_pop?: Maybe<OrderProduct_Var_Pop_Fields>;
  var_samp?: Maybe<OrderProduct_Var_Samp_Fields>;
  variance?: Maybe<OrderProduct_Variance_Fields>;
};


/** aggregate fields of "mn_order_product" */
export type OrderProduct_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<OrderProduct_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "mn_order_product" */
export type OrderProduct_Aggregate_Order_By = {
  avg?: Maybe<OrderProduct_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<OrderProduct_Max_Order_By>;
  min?: Maybe<OrderProduct_Min_Order_By>;
  stddev?: Maybe<OrderProduct_Stddev_Order_By>;
  stddev_pop?: Maybe<OrderProduct_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<OrderProduct_Stddev_Samp_Order_By>;
  sum?: Maybe<OrderProduct_Sum_Order_By>;
  var_pop?: Maybe<OrderProduct_Var_Pop_Order_By>;
  var_samp?: Maybe<OrderProduct_Var_Samp_Order_By>;
  variance?: Maybe<OrderProduct_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type OrderProduct_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
  snapshot?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "mn_order_product" */
export type OrderProduct_Arr_Rel_Insert_Input = {
  data: Array<OrderProduct_Insert_Input>;
  /** on conflict condition */
  on_conflict?: Maybe<OrderProduct_On_Conflict>;
};

/** aggregate avg on columns */
export type OrderProduct_Avg_Fields = {
  __typename?: 'orderProduct_avg_fields';
  assignedQuantity?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
  returnedQuantity?: Maybe<Scalars['Float']>;
  subtotal?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "mn_order_product" */
export type OrderProduct_Avg_Order_By = {
  assignedQuantity?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
  quantity?: Maybe<Order_By>;
  returnedQuantity?: Maybe<Order_By>;
  subtotal?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "mn_order_product". All fields are combined with a logical 'AND'. */
export type OrderProduct_Bool_Exp = {
  _and?: Maybe<Array<OrderProduct_Bool_Exp>>;
  _not?: Maybe<OrderProduct_Bool_Exp>;
  _or?: Maybe<Array<OrderProduct_Bool_Exp>>;
  assignedQuantity?: Maybe<Int_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  fulfilled?: Maybe<Boolean_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  order?: Maybe<Order_Bool_Exp>;
  order_id?: Maybe<Bigint_Comparison_Exp>;
  price?: Maybe<Int_Comparison_Exp>;
  privateVd?: Maybe<OrderProductPrivateVd_Bool_Exp>;
  product?: Maybe<Product_Bool_Exp>;
  product_id?: Maybe<Bigint_Comparison_Exp>;
  quantity?: Maybe<Int_Comparison_Exp>;
  returnedQuantity?: Maybe<Int_Comparison_Exp>;
  snapshot?: Maybe<Jsonb_Comparison_Exp>;
  soldout?: Maybe<Boolean_Comparison_Exp>;
  subtotal?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "mn_order_product" */
export enum OrderProduct_Constraint {
  /** unique or primary key constraint */
  MnOrderProductPkey = 'mn_order_product_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type OrderProduct_Delete_At_Path_Input = {
  data?: Maybe<Array<Scalars['String']>>;
  snapshot?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type OrderProduct_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
  snapshot?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type OrderProduct_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
  snapshot?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "mn_order_product" */
export type OrderProduct_Inc_Input = {
  assignedQuantity?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['bigint']>;
  order_id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  product_id?: Maybe<Scalars['bigint']>;
  quantity?: Maybe<Scalars['Int']>;
  returnedQuantity?: Maybe<Scalars['Int']>;
  subtotal?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "mn_order_product" */
export type OrderProduct_Insert_Input = {
  assignedQuantity?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  fulfilled?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['bigint']>;
  order?: Maybe<Order_Obj_Rel_Insert_Input>;
  order_id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  privateVd?: Maybe<OrderProductPrivateVd_Obj_Rel_Insert_Input>;
  product?: Maybe<Product_Obj_Rel_Insert_Input>;
  product_id?: Maybe<Scalars['bigint']>;
  quantity?: Maybe<Scalars['Int']>;
  returnedQuantity?: Maybe<Scalars['Int']>;
  snapshot?: Maybe<Scalars['jsonb']>;
  soldout?: Maybe<Scalars['Boolean']>;
  subtotal?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type OrderProduct_Max_Fields = {
  __typename?: 'orderProduct_max_fields';
  assignedQuantity?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  order_id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  product_id?: Maybe<Scalars['bigint']>;
  quantity?: Maybe<Scalars['Int']>;
  returnedQuantity?: Maybe<Scalars['Int']>;
  subtotal?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "mn_order_product" */
export type OrderProduct_Max_Order_By = {
  assignedQuantity?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
  quantity?: Maybe<Order_By>;
  returnedQuantity?: Maybe<Order_By>;
  subtotal?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type OrderProduct_Min_Fields = {
  __typename?: 'orderProduct_min_fields';
  assignedQuantity?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  order_id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  product_id?: Maybe<Scalars['bigint']>;
  quantity?: Maybe<Scalars['Int']>;
  returnedQuantity?: Maybe<Scalars['Int']>;
  subtotal?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "mn_order_product" */
export type OrderProduct_Min_Order_By = {
  assignedQuantity?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
  quantity?: Maybe<Order_By>;
  returnedQuantity?: Maybe<Order_By>;
  subtotal?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "mn_order_product" */
export type OrderProduct_Mutation_Response = {
  __typename?: 'orderProduct_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<OrderProduct>;
};

/** input type for inserting object relation for remote table "mn_order_product" */
export type OrderProduct_Obj_Rel_Insert_Input = {
  data: OrderProduct_Insert_Input;
  /** on conflict condition */
  on_conflict?: Maybe<OrderProduct_On_Conflict>;
};

/** on conflict condition type for table "mn_order_product" */
export type OrderProduct_On_Conflict = {
  constraint: OrderProduct_Constraint;
  update_columns: Array<OrderProduct_Update_Column>;
  where?: Maybe<OrderProduct_Bool_Exp>;
};

/** Ordering options when selecting data from "mn_order_product". */
export type OrderProduct_Order_By = {
  assignedQuantity?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  fulfilled?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  order?: Maybe<Order_Order_By>;
  order_id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  privateVd?: Maybe<OrderProductPrivateVd_Order_By>;
  product?: Maybe<Product_Order_By>;
  product_id?: Maybe<Order_By>;
  quantity?: Maybe<Order_By>;
  returnedQuantity?: Maybe<Order_By>;
  snapshot?: Maybe<Order_By>;
  soldout?: Maybe<Order_By>;
  subtotal?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: orderProduct */
export type OrderProduct_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type OrderProduct_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
  snapshot?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "mn_order_product" */
export enum OrderProduct_Select_Column {
  /** column name */
  AssignedQuantity = 'assignedQuantity',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Fulfilled = 'fulfilled',
  /** column name */
  Id = 'id',
  /** column name */
  OrderId = 'order_id',
  /** column name */
  Price = 'price',
  /** column name */
  ProductId = 'product_id',
  /** column name */
  Quantity = 'quantity',
  /** column name */
  ReturnedQuantity = 'returnedQuantity',
  /** column name */
  Snapshot = 'snapshot',
  /** column name */
  Soldout = 'soldout',
  /** column name */
  Subtotal = 'subtotal',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "mn_order_product" */
export type OrderProduct_Set_Input = {
  assignedQuantity?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  fulfilled?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['bigint']>;
  order_id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  product_id?: Maybe<Scalars['bigint']>;
  quantity?: Maybe<Scalars['Int']>;
  returnedQuantity?: Maybe<Scalars['Int']>;
  snapshot?: Maybe<Scalars['jsonb']>;
  soldout?: Maybe<Scalars['Boolean']>;
  subtotal?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type OrderProduct_Stddev_Fields = {
  __typename?: 'orderProduct_stddev_fields';
  assignedQuantity?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
  returnedQuantity?: Maybe<Scalars['Float']>;
  subtotal?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "mn_order_product" */
export type OrderProduct_Stddev_Order_By = {
  assignedQuantity?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
  quantity?: Maybe<Order_By>;
  returnedQuantity?: Maybe<Order_By>;
  subtotal?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type OrderProduct_Stddev_Pop_Fields = {
  __typename?: 'orderProduct_stddev_pop_fields';
  assignedQuantity?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
  returnedQuantity?: Maybe<Scalars['Float']>;
  subtotal?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "mn_order_product" */
export type OrderProduct_Stddev_Pop_Order_By = {
  assignedQuantity?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
  quantity?: Maybe<Order_By>;
  returnedQuantity?: Maybe<Order_By>;
  subtotal?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type OrderProduct_Stddev_Samp_Fields = {
  __typename?: 'orderProduct_stddev_samp_fields';
  assignedQuantity?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
  returnedQuantity?: Maybe<Scalars['Float']>;
  subtotal?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "mn_order_product" */
export type OrderProduct_Stddev_Samp_Order_By = {
  assignedQuantity?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
  quantity?: Maybe<Order_By>;
  returnedQuantity?: Maybe<Order_By>;
  subtotal?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type OrderProduct_Sum_Fields = {
  __typename?: 'orderProduct_sum_fields';
  assignedQuantity?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['bigint']>;
  order_id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  product_id?: Maybe<Scalars['bigint']>;
  quantity?: Maybe<Scalars['Int']>;
  returnedQuantity?: Maybe<Scalars['Int']>;
  subtotal?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "mn_order_product" */
export type OrderProduct_Sum_Order_By = {
  assignedQuantity?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
  quantity?: Maybe<Order_By>;
  returnedQuantity?: Maybe<Order_By>;
  subtotal?: Maybe<Order_By>;
};

/** update columns of table "mn_order_product" */
export enum OrderProduct_Update_Column {
  /** column name */
  AssignedQuantity = 'assignedQuantity',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Fulfilled = 'fulfilled',
  /** column name */
  Id = 'id',
  /** column name */
  OrderId = 'order_id',
  /** column name */
  Price = 'price',
  /** column name */
  ProductId = 'product_id',
  /** column name */
  Quantity = 'quantity',
  /** column name */
  ReturnedQuantity = 'returnedQuantity',
  /** column name */
  Snapshot = 'snapshot',
  /** column name */
  Soldout = 'soldout',
  /** column name */
  Subtotal = 'subtotal',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type OrderProduct_Var_Pop_Fields = {
  __typename?: 'orderProduct_var_pop_fields';
  assignedQuantity?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
  returnedQuantity?: Maybe<Scalars['Float']>;
  subtotal?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "mn_order_product" */
export type OrderProduct_Var_Pop_Order_By = {
  assignedQuantity?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
  quantity?: Maybe<Order_By>;
  returnedQuantity?: Maybe<Order_By>;
  subtotal?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type OrderProduct_Var_Samp_Fields = {
  __typename?: 'orderProduct_var_samp_fields';
  assignedQuantity?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
  returnedQuantity?: Maybe<Scalars['Float']>;
  subtotal?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "mn_order_product" */
export type OrderProduct_Var_Samp_Order_By = {
  assignedQuantity?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
  quantity?: Maybe<Order_By>;
  returnedQuantity?: Maybe<Order_By>;
  subtotal?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type OrderProduct_Variance_Fields = {
  __typename?: 'orderProduct_variance_fields';
  assignedQuantity?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  product_id?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
  returnedQuantity?: Maybe<Scalars['Float']>;
  subtotal?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "mn_order_product" */
export type OrderProduct_Variance_Order_By = {
  assignedQuantity?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  order_id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  product_id?: Maybe<Order_By>;
  quantity?: Maybe<Order_By>;
  returnedQuantity?: Maybe<Order_By>;
  subtotal?: Maybe<Order_By>;
};

/** aggregated selection of "tbl_order" */
export type Order_Aggregate = {
  __typename?: 'order_aggregate';
  aggregate?: Maybe<Order_Aggregate_Fields>;
  nodes: Array<Order>;
};

/** aggregate fields of "tbl_order" */
export type Order_Aggregate_Fields = {
  __typename?: 'order_aggregate_fields';
  avg?: Maybe<Order_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Order_Max_Fields>;
  min?: Maybe<Order_Min_Fields>;
  stddev?: Maybe<Order_Stddev_Fields>;
  stddev_pop?: Maybe<Order_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Order_Stddev_Samp_Fields>;
  sum?: Maybe<Order_Sum_Fields>;
  var_pop?: Maybe<Order_Var_Pop_Fields>;
  var_samp?: Maybe<Order_Var_Samp_Fields>;
  variance?: Maybe<Order_Variance_Fields>;
};


/** aggregate fields of "tbl_order" */
export type Order_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Order_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "tbl_order" */
export type Order_Aggregate_Order_By = {
  avg?: Maybe<Order_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Order_Max_Order_By>;
  min?: Maybe<Order_Min_Order_By>;
  stddev?: Maybe<Order_Stddev_Order_By>;
  stddev_pop?: Maybe<Order_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Order_Stddev_Samp_Order_By>;
  sum?: Maybe<Order_Sum_Order_By>;
  var_pop?: Maybe<Order_Var_Pop_Order_By>;
  var_samp?: Maybe<Order_Var_Samp_Order_By>;
  variance?: Maybe<Order_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Order_Append_Input = {
  buyer?: Maybe<Scalars['jsonb']>;
  data?: Maybe<Scalars['jsonb']>;
  legacyData?: Maybe<Scalars['jsonb']>;
  metadata?: Maybe<Scalars['jsonb']>;
  recipient?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "tbl_order" */
export type Order_Arr_Rel_Insert_Input = {
  data: Array<Order_Insert_Input>;
  /** on conflict condition */
  on_conflict?: Maybe<Order_On_Conflict>;
};

/** aggregate avg on columns */
export type Order_Avg_Fields = {
  __typename?: 'order_avg_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "tbl_order" */
export type Order_Avg_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "tbl_order". All fields are combined with a logical 'AND'. */
export type Order_Bool_Exp = {
  _and?: Maybe<Array<Order_Bool_Exp>>;
  _not?: Maybe<Order_Bool_Exp>;
  _or?: Maybe<Array<Order_Bool_Exp>>;
  atmAccount?: Maybe<String_Comparison_Exp>;
  buyer?: Maybe<Jsonb_Comparison_Exp>;
  buyerName?: Maybe<String_Comparison_Exp>;
  campaigns?: Maybe<OrderCampaign_Bool_Exp>;
  countryCode?: Maybe<String_Comparison_Exp>;
  couponRecord?: Maybe<CouponRecord_Bool_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  cvsName?: Maybe<String_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  esunData?: Maybe<String_Comparison_Exp>;
  esunOrderId?: Maybe<String_Comparison_Exp>;
  esunTradeInfo?: Maybe<String_Comparison_Exp>;
  esunTradeState?: Maybe<String_Comparison_Exp>;
  expiredAt?: Maybe<Timestamptz_Comparison_Exp>;
  foreign?: Maybe<Boolean_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  invoiceNumber?: Maybe<String_Comparison_Exp>;
  invoiceStatus?: Maybe<String_Comparison_Exp>;
  issues?: Maybe<Issue_Bool_Exp>;
  legacyData?: Maybe<Jsonb_Comparison_Exp>;
  logistics?: Maybe<String_Comparison_Exp>;
  memo?: Maybe<String_Comparison_Exp>;
  metadata?: Maybe<Jsonb_Comparison_Exp>;
  paidAt?: Maybe<Timestamptz_Comparison_Exp>;
  payWay?: Maybe<String_Comparison_Exp>;
  paypalData?: Maybe<String_Comparison_Exp>;
  paypalToken?: Maybe<String_Comparison_Exp>;
  privateVd?: Maybe<OrderPrivateVd_Bool_Exp>;
  products?: Maybe<OrderProduct_Bool_Exp>;
  recipient?: Maybe<Jsonb_Comparison_Exp>;
  recipientName?: Maybe<String_Comparison_Exp>;
  selectedAt?: Maybe<Timestamptz_Comparison_Exp>;
  shipmentId?: Maybe<String_Comparison_Exp>;
  shippedAt?: Maybe<Timestamptz_Comparison_Exp>;
  smseData?: Maybe<String_Comparison_Exp>;
  smsePayno?: Maybe<String_Comparison_Exp>;
  smseSmilepayno?: Maybe<String_Comparison_Exp>;
  state?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<User_Bool_Exp>;
  user_id?: Maybe<Bigint_Comparison_Exp>;
};

/** column ordering options */
export enum Order_By {
  /** in ascending order, nulls last */
  Asc = 'asc',
  /** in ascending order, nulls first */
  AscNullsFirst = 'asc_nulls_first',
  /** in ascending order, nulls last */
  AscNullsLast = 'asc_nulls_last',
  /** in descending order, nulls first */
  Desc = 'desc',
  /** in descending order, nulls first */
  DescNullsFirst = 'desc_nulls_first',
  /** in descending order, nulls last */
  DescNullsLast = 'desc_nulls_last'
}

/** unique or primary key constraints on table "tbl_order" */
export enum Order_Constraint {
  /** unique or primary key constraint */
  TblOrderPkey = 'tbl_order_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Order_Delete_At_Path_Input = {
  buyer?: Maybe<Array<Scalars['String']>>;
  data?: Maybe<Array<Scalars['String']>>;
  legacyData?: Maybe<Array<Scalars['String']>>;
  metadata?: Maybe<Array<Scalars['String']>>;
  recipient?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Order_Delete_Elem_Input = {
  buyer?: Maybe<Scalars['Int']>;
  data?: Maybe<Scalars['Int']>;
  legacyData?: Maybe<Scalars['Int']>;
  metadata?: Maybe<Scalars['Int']>;
  recipient?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Order_Delete_Key_Input = {
  buyer?: Maybe<Scalars['String']>;
  data?: Maybe<Scalars['String']>;
  legacyData?: Maybe<Scalars['String']>;
  metadata?: Maybe<Scalars['String']>;
  recipient?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "tbl_order" */
export type Order_Inc_Input = {
  id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "tbl_order" */
export type Order_Insert_Input = {
  atmAccount?: Maybe<Scalars['String']>;
  buyer?: Maybe<Scalars['jsonb']>;
  buyerName?: Maybe<Scalars['String']>;
  campaigns?: Maybe<OrderCampaign_Arr_Rel_Insert_Input>;
  countryCode?: Maybe<Scalars['String']>;
  couponRecord?: Maybe<CouponRecord_Arr_Rel_Insert_Input>;
  created_at?: Maybe<Scalars['timestamptz']>;
  cvsName?: Maybe<Scalars['String']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  esunData?: Maybe<Scalars['String']>;
  esunOrderId?: Maybe<Scalars['String']>;
  esunTradeInfo?: Maybe<Scalars['String']>;
  esunTradeState?: Maybe<Scalars['String']>;
  expiredAt?: Maybe<Scalars['timestamptz']>;
  foreign?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['bigint']>;
  invoiceNumber?: Maybe<Scalars['String']>;
  invoiceStatus?: Maybe<Scalars['String']>;
  issues?: Maybe<Issue_Arr_Rel_Insert_Input>;
  legacyData?: Maybe<Scalars['jsonb']>;
  logistics?: Maybe<Scalars['String']>;
  memo?: Maybe<Scalars['String']>;
  metadata?: Maybe<Scalars['jsonb']>;
  paidAt?: Maybe<Scalars['timestamptz']>;
  payWay?: Maybe<Scalars['String']>;
  paypalData?: Maybe<Scalars['String']>;
  paypalToken?: Maybe<Scalars['String']>;
  privateVd?: Maybe<OrderPrivateVd_Obj_Rel_Insert_Input>;
  products?: Maybe<OrderProduct_Arr_Rel_Insert_Input>;
  recipient?: Maybe<Scalars['jsonb']>;
  recipientName?: Maybe<Scalars['String']>;
  selectedAt?: Maybe<Scalars['timestamptz']>;
  shipmentId?: Maybe<Scalars['String']>;
  shippedAt?: Maybe<Scalars['timestamptz']>;
  smseData?: Maybe<Scalars['String']>;
  smsePayno?: Maybe<Scalars['String']>;
  smseSmilepayno?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<User_Obj_Rel_Insert_Input>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate max on columns */
export type Order_Max_Fields = {
  __typename?: 'order_max_fields';
  atmAccount?: Maybe<Scalars['String']>;
  buyerName?: Maybe<Scalars['String']>;
  countryCode?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  cvsName?: Maybe<Scalars['String']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  esunData?: Maybe<Scalars['String']>;
  esunOrderId?: Maybe<Scalars['String']>;
  esunTradeInfo?: Maybe<Scalars['String']>;
  esunTradeState?: Maybe<Scalars['String']>;
  expiredAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  invoiceNumber?: Maybe<Scalars['String']>;
  invoiceStatus?: Maybe<Scalars['String']>;
  logistics?: Maybe<Scalars['String']>;
  memo?: Maybe<Scalars['String']>;
  paidAt?: Maybe<Scalars['timestamptz']>;
  payWay?: Maybe<Scalars['String']>;
  paypalData?: Maybe<Scalars['String']>;
  paypalToken?: Maybe<Scalars['String']>;
  recipientName?: Maybe<Scalars['String']>;
  selectedAt?: Maybe<Scalars['timestamptz']>;
  shipmentId?: Maybe<Scalars['String']>;
  shippedAt?: Maybe<Scalars['timestamptz']>;
  smseData?: Maybe<Scalars['String']>;
  smsePayno?: Maybe<Scalars['String']>;
  smseSmilepayno?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by max() on columns of table "tbl_order" */
export type Order_Max_Order_By = {
  atmAccount?: Maybe<Order_By>;
  buyerName?: Maybe<Order_By>;
  countryCode?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  cvsName?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  esunData?: Maybe<Order_By>;
  esunOrderId?: Maybe<Order_By>;
  esunTradeInfo?: Maybe<Order_By>;
  esunTradeState?: Maybe<Order_By>;
  expiredAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  invoiceNumber?: Maybe<Order_By>;
  invoiceStatus?: Maybe<Order_By>;
  logistics?: Maybe<Order_By>;
  memo?: Maybe<Order_By>;
  paidAt?: Maybe<Order_By>;
  payWay?: Maybe<Order_By>;
  paypalData?: Maybe<Order_By>;
  paypalToken?: Maybe<Order_By>;
  recipientName?: Maybe<Order_By>;
  selectedAt?: Maybe<Order_By>;
  shipmentId?: Maybe<Order_By>;
  shippedAt?: Maybe<Order_By>;
  smseData?: Maybe<Order_By>;
  smsePayno?: Maybe<Order_By>;
  smseSmilepayno?: Maybe<Order_By>;
  state?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Order_Min_Fields = {
  __typename?: 'order_min_fields';
  atmAccount?: Maybe<Scalars['String']>;
  buyerName?: Maybe<Scalars['String']>;
  countryCode?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  cvsName?: Maybe<Scalars['String']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  esunData?: Maybe<Scalars['String']>;
  esunOrderId?: Maybe<Scalars['String']>;
  esunTradeInfo?: Maybe<Scalars['String']>;
  esunTradeState?: Maybe<Scalars['String']>;
  expiredAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  invoiceNumber?: Maybe<Scalars['String']>;
  invoiceStatus?: Maybe<Scalars['String']>;
  logistics?: Maybe<Scalars['String']>;
  memo?: Maybe<Scalars['String']>;
  paidAt?: Maybe<Scalars['timestamptz']>;
  payWay?: Maybe<Scalars['String']>;
  paypalData?: Maybe<Scalars['String']>;
  paypalToken?: Maybe<Scalars['String']>;
  recipientName?: Maybe<Scalars['String']>;
  selectedAt?: Maybe<Scalars['timestamptz']>;
  shipmentId?: Maybe<Scalars['String']>;
  shippedAt?: Maybe<Scalars['timestamptz']>;
  smseData?: Maybe<Scalars['String']>;
  smsePayno?: Maybe<Scalars['String']>;
  smseSmilepayno?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by min() on columns of table "tbl_order" */
export type Order_Min_Order_By = {
  atmAccount?: Maybe<Order_By>;
  buyerName?: Maybe<Order_By>;
  countryCode?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  cvsName?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  esunData?: Maybe<Order_By>;
  esunOrderId?: Maybe<Order_By>;
  esunTradeInfo?: Maybe<Order_By>;
  esunTradeState?: Maybe<Order_By>;
  expiredAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  invoiceNumber?: Maybe<Order_By>;
  invoiceStatus?: Maybe<Order_By>;
  logistics?: Maybe<Order_By>;
  memo?: Maybe<Order_By>;
  paidAt?: Maybe<Order_By>;
  payWay?: Maybe<Order_By>;
  paypalData?: Maybe<Order_By>;
  paypalToken?: Maybe<Order_By>;
  recipientName?: Maybe<Order_By>;
  selectedAt?: Maybe<Order_By>;
  shipmentId?: Maybe<Order_By>;
  shippedAt?: Maybe<Order_By>;
  smseData?: Maybe<Order_By>;
  smsePayno?: Maybe<Order_By>;
  smseSmilepayno?: Maybe<Order_By>;
  state?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** response of any mutation on the table "tbl_order" */
export type Order_Mutation_Response = {
  __typename?: 'order_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Order>;
};

/** input type for inserting object relation for remote table "tbl_order" */
export type Order_Obj_Rel_Insert_Input = {
  data: Order_Insert_Input;
  /** on conflict condition */
  on_conflict?: Maybe<Order_On_Conflict>;
};

/** on conflict condition type for table "tbl_order" */
export type Order_On_Conflict = {
  constraint: Order_Constraint;
  update_columns: Array<Order_Update_Column>;
  where?: Maybe<Order_Bool_Exp>;
};

/** Ordering options when selecting data from "tbl_order". */
export type Order_Order_By = {
  atmAccount?: Maybe<Order_By>;
  buyer?: Maybe<Order_By>;
  buyerName?: Maybe<Order_By>;
  campaigns_aggregate?: Maybe<OrderCampaign_Aggregate_Order_By>;
  countryCode?: Maybe<Order_By>;
  couponRecord_aggregate?: Maybe<CouponRecord_Aggregate_Order_By>;
  created_at?: Maybe<Order_By>;
  cvsName?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  esunData?: Maybe<Order_By>;
  esunOrderId?: Maybe<Order_By>;
  esunTradeInfo?: Maybe<Order_By>;
  esunTradeState?: Maybe<Order_By>;
  expiredAt?: Maybe<Order_By>;
  foreign?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  invoiceNumber?: Maybe<Order_By>;
  invoiceStatus?: Maybe<Order_By>;
  issues_aggregate?: Maybe<Issue_Aggregate_Order_By>;
  legacyData?: Maybe<Order_By>;
  logistics?: Maybe<Order_By>;
  memo?: Maybe<Order_By>;
  metadata?: Maybe<Order_By>;
  paidAt?: Maybe<Order_By>;
  payWay?: Maybe<Order_By>;
  paypalData?: Maybe<Order_By>;
  paypalToken?: Maybe<Order_By>;
  privateVd?: Maybe<OrderPrivateVd_Order_By>;
  products_aggregate?: Maybe<OrderProduct_Aggregate_Order_By>;
  recipient?: Maybe<Order_By>;
  recipientName?: Maybe<Order_By>;
  selectedAt?: Maybe<Order_By>;
  shipmentId?: Maybe<Order_By>;
  shippedAt?: Maybe<Order_By>;
  smseData?: Maybe<Order_By>;
  smsePayno?: Maybe<Order_By>;
  smseSmilepayno?: Maybe<Order_By>;
  state?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user?: Maybe<User_Order_By>;
  user_id?: Maybe<Order_By>;
};

/** primary key columns input for table: order */
export type Order_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Order_Prepend_Input = {
  buyer?: Maybe<Scalars['jsonb']>;
  data?: Maybe<Scalars['jsonb']>;
  legacyData?: Maybe<Scalars['jsonb']>;
  metadata?: Maybe<Scalars['jsonb']>;
  recipient?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "tbl_order" */
export enum Order_Select_Column {
  /** column name */
  AtmAccount = 'atmAccount',
  /** column name */
  Buyer = 'buyer',
  /** column name */
  BuyerName = 'buyerName',
  /** column name */
  CountryCode = 'countryCode',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CvsName = 'cvsName',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EsunData = 'esunData',
  /** column name */
  EsunOrderId = 'esunOrderId',
  /** column name */
  EsunTradeInfo = 'esunTradeInfo',
  /** column name */
  EsunTradeState = 'esunTradeState',
  /** column name */
  ExpiredAt = 'expiredAt',
  /** column name */
  Foreign = 'foreign',
  /** column name */
  Id = 'id',
  /** column name */
  InvoiceNumber = 'invoiceNumber',
  /** column name */
  InvoiceStatus = 'invoiceStatus',
  /** column name */
  LegacyData = 'legacyData',
  /** column name */
  Logistics = 'logistics',
  /** column name */
  Memo = 'memo',
  /** column name */
  Metadata = 'metadata',
  /** column name */
  PaidAt = 'paidAt',
  /** column name */
  PayWay = 'payWay',
  /** column name */
  PaypalData = 'paypalData',
  /** column name */
  PaypalToken = 'paypalToken',
  /** column name */
  Recipient = 'recipient',
  /** column name */
  RecipientName = 'recipientName',
  /** column name */
  SelectedAt = 'selectedAt',
  /** column name */
  ShipmentId = 'shipmentId',
  /** column name */
  ShippedAt = 'shippedAt',
  /** column name */
  SmseData = 'smseData',
  /** column name */
  SmsePayno = 'smsePayno',
  /** column name */
  SmseSmilepayno = 'smseSmilepayno',
  /** column name */
  State = 'state',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "tbl_order" */
export type Order_Set_Input = {
  atmAccount?: Maybe<Scalars['String']>;
  buyer?: Maybe<Scalars['jsonb']>;
  buyerName?: Maybe<Scalars['String']>;
  countryCode?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  cvsName?: Maybe<Scalars['String']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  esunData?: Maybe<Scalars['String']>;
  esunOrderId?: Maybe<Scalars['String']>;
  esunTradeInfo?: Maybe<Scalars['String']>;
  esunTradeState?: Maybe<Scalars['String']>;
  expiredAt?: Maybe<Scalars['timestamptz']>;
  foreign?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['bigint']>;
  invoiceNumber?: Maybe<Scalars['String']>;
  invoiceStatus?: Maybe<Scalars['String']>;
  legacyData?: Maybe<Scalars['jsonb']>;
  logistics?: Maybe<Scalars['String']>;
  memo?: Maybe<Scalars['String']>;
  metadata?: Maybe<Scalars['jsonb']>;
  paidAt?: Maybe<Scalars['timestamptz']>;
  payWay?: Maybe<Scalars['String']>;
  paypalData?: Maybe<Scalars['String']>;
  paypalToken?: Maybe<Scalars['String']>;
  recipient?: Maybe<Scalars['jsonb']>;
  recipientName?: Maybe<Scalars['String']>;
  selectedAt?: Maybe<Scalars['timestamptz']>;
  shipmentId?: Maybe<Scalars['String']>;
  shippedAt?: Maybe<Scalars['timestamptz']>;
  smseData?: Maybe<Scalars['String']>;
  smsePayno?: Maybe<Scalars['String']>;
  smseSmilepayno?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate stddev on columns */
export type Order_Stddev_Fields = {
  __typename?: 'order_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "tbl_order" */
export type Order_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Order_Stddev_Pop_Fields = {
  __typename?: 'order_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "tbl_order" */
export type Order_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Order_Stddev_Samp_Fields = {
  __typename?: 'order_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "tbl_order" */
export type Order_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Order_Sum_Fields = {
  __typename?: 'order_sum_fields';
  id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "tbl_order" */
export type Order_Sum_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** update columns of table "tbl_order" */
export enum Order_Update_Column {
  /** column name */
  AtmAccount = 'atmAccount',
  /** column name */
  Buyer = 'buyer',
  /** column name */
  BuyerName = 'buyerName',
  /** column name */
  CountryCode = 'countryCode',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CvsName = 'cvsName',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  EsunData = 'esunData',
  /** column name */
  EsunOrderId = 'esunOrderId',
  /** column name */
  EsunTradeInfo = 'esunTradeInfo',
  /** column name */
  EsunTradeState = 'esunTradeState',
  /** column name */
  ExpiredAt = 'expiredAt',
  /** column name */
  Foreign = 'foreign',
  /** column name */
  Id = 'id',
  /** column name */
  InvoiceNumber = 'invoiceNumber',
  /** column name */
  InvoiceStatus = 'invoiceStatus',
  /** column name */
  LegacyData = 'legacyData',
  /** column name */
  Logistics = 'logistics',
  /** column name */
  Memo = 'memo',
  /** column name */
  Metadata = 'metadata',
  /** column name */
  PaidAt = 'paidAt',
  /** column name */
  PayWay = 'payWay',
  /** column name */
  PaypalData = 'paypalData',
  /** column name */
  PaypalToken = 'paypalToken',
  /** column name */
  Recipient = 'recipient',
  /** column name */
  RecipientName = 'recipientName',
  /** column name */
  SelectedAt = 'selectedAt',
  /** column name */
  ShipmentId = 'shipmentId',
  /** column name */
  ShippedAt = 'shippedAt',
  /** column name */
  SmseData = 'smseData',
  /** column name */
  SmsePayno = 'smsePayno',
  /** column name */
  SmseSmilepayno = 'smseSmilepayno',
  /** column name */
  State = 'state',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** aggregate var_pop on columns */
export type Order_Var_Pop_Fields = {
  __typename?: 'order_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "tbl_order" */
export type Order_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Order_Var_Samp_Fields = {
  __typename?: 'order_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "tbl_order" */
export type Order_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Order_Variance_Fields = {
  __typename?: 'order_variance_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "tbl_order" */
export type Order_Variance_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** columns and relationships of "tbl_organization" */
export type Organization = {
  __typename?: 'organization';
  created_at: Scalars['timestamptz'];
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id: Scalars['bigint'];
  /** An array relationship */
  invitees: Array<OrganizationInvitation>;
  /** An aggregate relationship */
  invitees_aggregate: OrganizationInvitation_Aggregate;
  name?: Maybe<Scalars['String']>;
  /** An array relationship */
  ownedUser: Array<User>;
  /** An aggregate relationship */
  ownedUser_aggregate: User_Aggregate;
  /** An object relationship */
  privateVd?: Maybe<OrganizationPrivateVd>;
  /** An array relationship */
  projects: Array<Project>;
  /** An aggregate relationship */
  projects_aggregate: Project_Aggregate;
  updated_at: Scalars['timestamptz'];
  /** An array relationship */
  users: Array<UserOrganization>;
  /** An aggregate relationship */
  users_aggregate: UserOrganization_Aggregate;
};


/** columns and relationships of "tbl_organization" */
export type OrganizationDataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "tbl_organization" */
export type OrganizationInviteesArgs = {
  distinct_on?: Maybe<Array<OrganizationInvitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrganizationInvitation_Order_By>>;
  where?: Maybe<OrganizationInvitation_Bool_Exp>;
};


/** columns and relationships of "tbl_organization" */
export type OrganizationInvitees_AggregateArgs = {
  distinct_on?: Maybe<Array<OrganizationInvitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrganizationInvitation_Order_By>>;
  where?: Maybe<OrganizationInvitation_Bool_Exp>;
};


/** columns and relationships of "tbl_organization" */
export type OrganizationOwnedUserArgs = {
  distinct_on?: Maybe<Array<User_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<User_Order_By>>;
  where?: Maybe<User_Bool_Exp>;
};


/** columns and relationships of "tbl_organization" */
export type OrganizationOwnedUser_AggregateArgs = {
  distinct_on?: Maybe<Array<User_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<User_Order_By>>;
  where?: Maybe<User_Bool_Exp>;
};


/** columns and relationships of "tbl_organization" */
export type OrganizationProjectsArgs = {
  distinct_on?: Maybe<Array<Project_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Project_Order_By>>;
  where?: Maybe<Project_Bool_Exp>;
};


/** columns and relationships of "tbl_organization" */
export type OrganizationProjects_AggregateArgs = {
  distinct_on?: Maybe<Array<Project_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Project_Order_By>>;
  where?: Maybe<Project_Bool_Exp>;
};


/** columns and relationships of "tbl_organization" */
export type OrganizationUsersArgs = {
  distinct_on?: Maybe<Array<UserOrganization_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserOrganization_Order_By>>;
  where?: Maybe<UserOrganization_Bool_Exp>;
};


/** columns and relationships of "tbl_organization" */
export type OrganizationUsers_AggregateArgs = {
  distinct_on?: Maybe<Array<UserOrganization_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserOrganization_Order_By>>;
  where?: Maybe<UserOrganization_Bool_Exp>;
};

/** columns and relationships of "mn_organization_invitation" */
export type OrganizationInvitation = {
  __typename?: 'organizationInvitation';
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id: Scalars['bigint'];
  /** An object relationship */
  invitee: User;
  invitee_id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  inviter: User;
  inviter_id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  organization: Organization;
  organization_id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  privateVd?: Maybe<OrganizationInvitationPrivateVd>;
  state?: Maybe<Scalars['Int']>;
  updated_at: Scalars['timestamptz'];
};

/** columns and relationships of "view_organization_invitation_private_vd" */
export type OrganizationInvitationPrivateVd = {
  __typename?: 'organizationInvitationPrivateVd';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  invitee?: Maybe<User>;
  invitee_id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  inviter?: Maybe<User>;
  inviter_id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  organization?: Maybe<Organization>;
  organization_id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  publicData?: Maybe<OrganizationInvitation>;
  state?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregated selection of "view_organization_invitation_private_vd" */
export type OrganizationInvitationPrivateVd_Aggregate = {
  __typename?: 'organizationInvitationPrivateVd_aggregate';
  aggregate?: Maybe<OrganizationInvitationPrivateVd_Aggregate_Fields>;
  nodes: Array<OrganizationInvitationPrivateVd>;
};

/** aggregate fields of "view_organization_invitation_private_vd" */
export type OrganizationInvitationPrivateVd_Aggregate_Fields = {
  __typename?: 'organizationInvitationPrivateVd_aggregate_fields';
  avg?: Maybe<OrganizationInvitationPrivateVd_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<OrganizationInvitationPrivateVd_Max_Fields>;
  min?: Maybe<OrganizationInvitationPrivateVd_Min_Fields>;
  stddev?: Maybe<OrganizationInvitationPrivateVd_Stddev_Fields>;
  stddev_pop?: Maybe<OrganizationInvitationPrivateVd_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<OrganizationInvitationPrivateVd_Stddev_Samp_Fields>;
  sum?: Maybe<OrganizationInvitationPrivateVd_Sum_Fields>;
  var_pop?: Maybe<OrganizationInvitationPrivateVd_Var_Pop_Fields>;
  var_samp?: Maybe<OrganizationInvitationPrivateVd_Var_Samp_Fields>;
  variance?: Maybe<OrganizationInvitationPrivateVd_Variance_Fields>;
};


/** aggregate fields of "view_organization_invitation_private_vd" */
export type OrganizationInvitationPrivateVd_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<OrganizationInvitationPrivateVd_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type OrganizationInvitationPrivateVd_Avg_Fields = {
  __typename?: 'organizationInvitationPrivateVd_avg_fields';
  id?: Maybe<Scalars['Float']>;
  invitee_id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  organization_id?: Maybe<Scalars['Float']>;
  state?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "view_organization_invitation_private_vd". All fields are combined with a logical 'AND'. */
export type OrganizationInvitationPrivateVd_Bool_Exp = {
  _and?: Maybe<Array<OrganizationInvitationPrivateVd_Bool_Exp>>;
  _not?: Maybe<OrganizationInvitationPrivateVd_Bool_Exp>;
  _or?: Maybe<Array<OrganizationInvitationPrivateVd_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  invitee?: Maybe<User_Bool_Exp>;
  invitee_id?: Maybe<Bigint_Comparison_Exp>;
  inviter?: Maybe<User_Bool_Exp>;
  inviter_id?: Maybe<Bigint_Comparison_Exp>;
  organization?: Maybe<Organization_Bool_Exp>;
  organization_id?: Maybe<Bigint_Comparison_Exp>;
  publicData?: Maybe<OrganizationInvitation_Bool_Exp>;
  state?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** input type for incrementing numeric columns in table "view_organization_invitation_private_vd" */
export type OrganizationInvitationPrivateVd_Inc_Input = {
  id?: Maybe<Scalars['bigint']>;
  invitee_id?: Maybe<Scalars['bigint']>;
  inviter_id?: Maybe<Scalars['bigint']>;
  organization_id?: Maybe<Scalars['bigint']>;
  state?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "view_organization_invitation_private_vd" */
export type OrganizationInvitationPrivateVd_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  invitee?: Maybe<User_Obj_Rel_Insert_Input>;
  invitee_id?: Maybe<Scalars['bigint']>;
  inviter?: Maybe<User_Obj_Rel_Insert_Input>;
  inviter_id?: Maybe<Scalars['bigint']>;
  organization?: Maybe<Organization_Obj_Rel_Insert_Input>;
  organization_id?: Maybe<Scalars['bigint']>;
  publicData?: Maybe<OrganizationInvitation_Obj_Rel_Insert_Input>;
  state?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type OrganizationInvitationPrivateVd_Max_Fields = {
  __typename?: 'organizationInvitationPrivateVd_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  invitee_id?: Maybe<Scalars['bigint']>;
  inviter_id?: Maybe<Scalars['bigint']>;
  organization_id?: Maybe<Scalars['bigint']>;
  state?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type OrganizationInvitationPrivateVd_Min_Fields = {
  __typename?: 'organizationInvitationPrivateVd_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  invitee_id?: Maybe<Scalars['bigint']>;
  inviter_id?: Maybe<Scalars['bigint']>;
  organization_id?: Maybe<Scalars['bigint']>;
  state?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "view_organization_invitation_private_vd" */
export type OrganizationInvitationPrivateVd_Mutation_Response = {
  __typename?: 'organizationInvitationPrivateVd_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<OrganizationInvitationPrivateVd>;
};

/** input type for inserting object relation for remote table "view_organization_invitation_private_vd" */
export type OrganizationInvitationPrivateVd_Obj_Rel_Insert_Input = {
  data: OrganizationInvitationPrivateVd_Insert_Input;
};

/** Ordering options when selecting data from "view_organization_invitation_private_vd". */
export type OrganizationInvitationPrivateVd_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  invitee?: Maybe<User_Order_By>;
  invitee_id?: Maybe<Order_By>;
  inviter?: Maybe<User_Order_By>;
  inviter_id?: Maybe<Order_By>;
  organization?: Maybe<Organization_Order_By>;
  organization_id?: Maybe<Order_By>;
  publicData?: Maybe<OrganizationInvitation_Order_By>;
  state?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** select columns of table "view_organization_invitation_private_vd" */
export enum OrganizationInvitationPrivateVd_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  InviteeId = 'invitee_id',
  /** column name */
  InviterId = 'inviter_id',
  /** column name */
  OrganizationId = 'organization_id',
  /** column name */
  State = 'state',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "view_organization_invitation_private_vd" */
export type OrganizationInvitationPrivateVd_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  invitee_id?: Maybe<Scalars['bigint']>;
  inviter_id?: Maybe<Scalars['bigint']>;
  organization_id?: Maybe<Scalars['bigint']>;
  state?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type OrganizationInvitationPrivateVd_Stddev_Fields = {
  __typename?: 'organizationInvitationPrivateVd_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  invitee_id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  organization_id?: Maybe<Scalars['Float']>;
  state?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type OrganizationInvitationPrivateVd_Stddev_Pop_Fields = {
  __typename?: 'organizationInvitationPrivateVd_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  invitee_id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  organization_id?: Maybe<Scalars['Float']>;
  state?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type OrganizationInvitationPrivateVd_Stddev_Samp_Fields = {
  __typename?: 'organizationInvitationPrivateVd_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  invitee_id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  organization_id?: Maybe<Scalars['Float']>;
  state?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type OrganizationInvitationPrivateVd_Sum_Fields = {
  __typename?: 'organizationInvitationPrivateVd_sum_fields';
  id?: Maybe<Scalars['bigint']>;
  invitee_id?: Maybe<Scalars['bigint']>;
  inviter_id?: Maybe<Scalars['bigint']>;
  organization_id?: Maybe<Scalars['bigint']>;
  state?: Maybe<Scalars['Int']>;
};

/** aggregate var_pop on columns */
export type OrganizationInvitationPrivateVd_Var_Pop_Fields = {
  __typename?: 'organizationInvitationPrivateVd_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  invitee_id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  organization_id?: Maybe<Scalars['Float']>;
  state?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type OrganizationInvitationPrivateVd_Var_Samp_Fields = {
  __typename?: 'organizationInvitationPrivateVd_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  invitee_id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  organization_id?: Maybe<Scalars['Float']>;
  state?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type OrganizationInvitationPrivateVd_Variance_Fields = {
  __typename?: 'organizationInvitationPrivateVd_variance_fields';
  id?: Maybe<Scalars['Float']>;
  invitee_id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  organization_id?: Maybe<Scalars['Float']>;
  state?: Maybe<Scalars['Float']>;
};

/** aggregated selection of "mn_organization_invitation" */
export type OrganizationInvitation_Aggregate = {
  __typename?: 'organizationInvitation_aggregate';
  aggregate?: Maybe<OrganizationInvitation_Aggregate_Fields>;
  nodes: Array<OrganizationInvitation>;
};

/** aggregate fields of "mn_organization_invitation" */
export type OrganizationInvitation_Aggregate_Fields = {
  __typename?: 'organizationInvitation_aggregate_fields';
  avg?: Maybe<OrganizationInvitation_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<OrganizationInvitation_Max_Fields>;
  min?: Maybe<OrganizationInvitation_Min_Fields>;
  stddev?: Maybe<OrganizationInvitation_Stddev_Fields>;
  stddev_pop?: Maybe<OrganizationInvitation_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<OrganizationInvitation_Stddev_Samp_Fields>;
  sum?: Maybe<OrganizationInvitation_Sum_Fields>;
  var_pop?: Maybe<OrganizationInvitation_Var_Pop_Fields>;
  var_samp?: Maybe<OrganizationInvitation_Var_Samp_Fields>;
  variance?: Maybe<OrganizationInvitation_Variance_Fields>;
};


/** aggregate fields of "mn_organization_invitation" */
export type OrganizationInvitation_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<OrganizationInvitation_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "mn_organization_invitation" */
export type OrganizationInvitation_Aggregate_Order_By = {
  avg?: Maybe<OrganizationInvitation_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<OrganizationInvitation_Max_Order_By>;
  min?: Maybe<OrganizationInvitation_Min_Order_By>;
  stddev?: Maybe<OrganizationInvitation_Stddev_Order_By>;
  stddev_pop?: Maybe<OrganizationInvitation_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<OrganizationInvitation_Stddev_Samp_Order_By>;
  sum?: Maybe<OrganizationInvitation_Sum_Order_By>;
  var_pop?: Maybe<OrganizationInvitation_Var_Pop_Order_By>;
  var_samp?: Maybe<OrganizationInvitation_Var_Samp_Order_By>;
  variance?: Maybe<OrganizationInvitation_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "mn_organization_invitation" */
export type OrganizationInvitation_Arr_Rel_Insert_Input = {
  data: Array<OrganizationInvitation_Insert_Input>;
  /** on conflict condition */
  on_conflict?: Maybe<OrganizationInvitation_On_Conflict>;
};

/** aggregate avg on columns */
export type OrganizationInvitation_Avg_Fields = {
  __typename?: 'organizationInvitation_avg_fields';
  id?: Maybe<Scalars['Float']>;
  invitee_id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  organization_id?: Maybe<Scalars['Float']>;
  state?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "mn_organization_invitation" */
export type OrganizationInvitation_Avg_Order_By = {
  id?: Maybe<Order_By>;
  invitee_id?: Maybe<Order_By>;
  inviter_id?: Maybe<Order_By>;
  organization_id?: Maybe<Order_By>;
  state?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "mn_organization_invitation". All fields are combined with a logical 'AND'. */
export type OrganizationInvitation_Bool_Exp = {
  _and?: Maybe<Array<OrganizationInvitation_Bool_Exp>>;
  _not?: Maybe<OrganizationInvitation_Bool_Exp>;
  _or?: Maybe<Array<OrganizationInvitation_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  invitee?: Maybe<User_Bool_Exp>;
  invitee_id?: Maybe<Bigint_Comparison_Exp>;
  inviter?: Maybe<User_Bool_Exp>;
  inviter_id?: Maybe<Bigint_Comparison_Exp>;
  organization?: Maybe<Organization_Bool_Exp>;
  organization_id?: Maybe<Bigint_Comparison_Exp>;
  privateVd?: Maybe<OrganizationInvitationPrivateVd_Bool_Exp>;
  state?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "mn_organization_invitation" */
export enum OrganizationInvitation_Constraint {
  /** unique or primary key constraint */
  MnOrganizationInvitationPkey = 'mn_organization_invitation_pkey',
  /** unique or primary key constraint */
  OrganizationOnlyInviteOnce = 'organization_only_invite_once'
}

/** input type for incrementing numeric columns in table "mn_organization_invitation" */
export type OrganizationInvitation_Inc_Input = {
  id?: Maybe<Scalars['bigint']>;
  invitee_id?: Maybe<Scalars['bigint']>;
  inviter_id?: Maybe<Scalars['bigint']>;
  organization_id?: Maybe<Scalars['bigint']>;
  state?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "mn_organization_invitation" */
export type OrganizationInvitation_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  invitee?: Maybe<User_Obj_Rel_Insert_Input>;
  invitee_id?: Maybe<Scalars['bigint']>;
  inviter?: Maybe<User_Obj_Rel_Insert_Input>;
  inviter_id?: Maybe<Scalars['bigint']>;
  organization?: Maybe<Organization_Obj_Rel_Insert_Input>;
  organization_id?: Maybe<Scalars['bigint']>;
  privateVd?: Maybe<OrganizationInvitationPrivateVd_Obj_Rel_Insert_Input>;
  state?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type OrganizationInvitation_Max_Fields = {
  __typename?: 'organizationInvitation_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  invitee_id?: Maybe<Scalars['bigint']>;
  inviter_id?: Maybe<Scalars['bigint']>;
  organization_id?: Maybe<Scalars['bigint']>;
  state?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "mn_organization_invitation" */
export type OrganizationInvitation_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  invitee_id?: Maybe<Order_By>;
  inviter_id?: Maybe<Order_By>;
  organization_id?: Maybe<Order_By>;
  state?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type OrganizationInvitation_Min_Fields = {
  __typename?: 'organizationInvitation_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  invitee_id?: Maybe<Scalars['bigint']>;
  inviter_id?: Maybe<Scalars['bigint']>;
  organization_id?: Maybe<Scalars['bigint']>;
  state?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "mn_organization_invitation" */
export type OrganizationInvitation_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  invitee_id?: Maybe<Order_By>;
  inviter_id?: Maybe<Order_By>;
  organization_id?: Maybe<Order_By>;
  state?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "mn_organization_invitation" */
export type OrganizationInvitation_Mutation_Response = {
  __typename?: 'organizationInvitation_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<OrganizationInvitation>;
};

/** input type for inserting object relation for remote table "mn_organization_invitation" */
export type OrganizationInvitation_Obj_Rel_Insert_Input = {
  data: OrganizationInvitation_Insert_Input;
  /** on conflict condition */
  on_conflict?: Maybe<OrganizationInvitation_On_Conflict>;
};

/** on conflict condition type for table "mn_organization_invitation" */
export type OrganizationInvitation_On_Conflict = {
  constraint: OrganizationInvitation_Constraint;
  update_columns: Array<OrganizationInvitation_Update_Column>;
  where?: Maybe<OrganizationInvitation_Bool_Exp>;
};

/** Ordering options when selecting data from "mn_organization_invitation". */
export type OrganizationInvitation_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  invitee?: Maybe<User_Order_By>;
  invitee_id?: Maybe<Order_By>;
  inviter?: Maybe<User_Order_By>;
  inviter_id?: Maybe<Order_By>;
  organization?: Maybe<Organization_Order_By>;
  organization_id?: Maybe<Order_By>;
  privateVd?: Maybe<OrganizationInvitationPrivateVd_Order_By>;
  state?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: organizationInvitation */
export type OrganizationInvitation_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** select columns of table "mn_organization_invitation" */
export enum OrganizationInvitation_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  InviteeId = 'invitee_id',
  /** column name */
  InviterId = 'inviter_id',
  /** column name */
  OrganizationId = 'organization_id',
  /** column name */
  State = 'state',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "mn_organization_invitation" */
export type OrganizationInvitation_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  invitee_id?: Maybe<Scalars['bigint']>;
  inviter_id?: Maybe<Scalars['bigint']>;
  organization_id?: Maybe<Scalars['bigint']>;
  state?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type OrganizationInvitation_Stddev_Fields = {
  __typename?: 'organizationInvitation_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  invitee_id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  organization_id?: Maybe<Scalars['Float']>;
  state?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "mn_organization_invitation" */
export type OrganizationInvitation_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  invitee_id?: Maybe<Order_By>;
  inviter_id?: Maybe<Order_By>;
  organization_id?: Maybe<Order_By>;
  state?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type OrganizationInvitation_Stddev_Pop_Fields = {
  __typename?: 'organizationInvitation_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  invitee_id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  organization_id?: Maybe<Scalars['Float']>;
  state?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "mn_organization_invitation" */
export type OrganizationInvitation_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  invitee_id?: Maybe<Order_By>;
  inviter_id?: Maybe<Order_By>;
  organization_id?: Maybe<Order_By>;
  state?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type OrganizationInvitation_Stddev_Samp_Fields = {
  __typename?: 'organizationInvitation_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  invitee_id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  organization_id?: Maybe<Scalars['Float']>;
  state?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "mn_organization_invitation" */
export type OrganizationInvitation_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  invitee_id?: Maybe<Order_By>;
  inviter_id?: Maybe<Order_By>;
  organization_id?: Maybe<Order_By>;
  state?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type OrganizationInvitation_Sum_Fields = {
  __typename?: 'organizationInvitation_sum_fields';
  id?: Maybe<Scalars['bigint']>;
  invitee_id?: Maybe<Scalars['bigint']>;
  inviter_id?: Maybe<Scalars['bigint']>;
  organization_id?: Maybe<Scalars['bigint']>;
  state?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "mn_organization_invitation" */
export type OrganizationInvitation_Sum_Order_By = {
  id?: Maybe<Order_By>;
  invitee_id?: Maybe<Order_By>;
  inviter_id?: Maybe<Order_By>;
  organization_id?: Maybe<Order_By>;
  state?: Maybe<Order_By>;
};

/** update columns of table "mn_organization_invitation" */
export enum OrganizationInvitation_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  InviteeId = 'invitee_id',
  /** column name */
  InviterId = 'inviter_id',
  /** column name */
  OrganizationId = 'organization_id',
  /** column name */
  State = 'state',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type OrganizationInvitation_Var_Pop_Fields = {
  __typename?: 'organizationInvitation_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  invitee_id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  organization_id?: Maybe<Scalars['Float']>;
  state?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "mn_organization_invitation" */
export type OrganizationInvitation_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  invitee_id?: Maybe<Order_By>;
  inviter_id?: Maybe<Order_By>;
  organization_id?: Maybe<Order_By>;
  state?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type OrganizationInvitation_Var_Samp_Fields = {
  __typename?: 'organizationInvitation_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  invitee_id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  organization_id?: Maybe<Scalars['Float']>;
  state?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "mn_organization_invitation" */
export type OrganizationInvitation_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  invitee_id?: Maybe<Order_By>;
  inviter_id?: Maybe<Order_By>;
  organization_id?: Maybe<Order_By>;
  state?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type OrganizationInvitation_Variance_Fields = {
  __typename?: 'organizationInvitation_variance_fields';
  id?: Maybe<Scalars['Float']>;
  invitee_id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  organization_id?: Maybe<Scalars['Float']>;
  state?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "mn_organization_invitation" */
export type OrganizationInvitation_Variance_Order_By = {
  id?: Maybe<Order_By>;
  invitee_id?: Maybe<Order_By>;
  inviter_id?: Maybe<Order_By>;
  organization_id?: Maybe<Order_By>;
  state?: Maybe<Order_By>;
};

/** columns and relationships of "view_organization_private_vd" */
export type OrganizationPrivateVd = {
  __typename?: 'organizationPrivateVd';
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  /** An array relationship */
  ownedUser: Array<User>;
  /** An aggregate relationship */
  ownedUser_aggregate: User_Aggregate;
  /** An array relationship */
  projects: Array<Project>;
  /** An aggregate relationship */
  projects_aggregate: Project_Aggregate;
  /** An object relationship */
  publicData?: Maybe<Organization>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  /** An array relationship */
  users: Array<UserOrganization>;
  /** An aggregate relationship */
  users_aggregate: UserOrganization_Aggregate;
};


/** columns and relationships of "view_organization_private_vd" */
export type OrganizationPrivateVdDataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "view_organization_private_vd" */
export type OrganizationPrivateVdOwnedUserArgs = {
  distinct_on?: Maybe<Array<User_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<User_Order_By>>;
  where?: Maybe<User_Bool_Exp>;
};


/** columns and relationships of "view_organization_private_vd" */
export type OrganizationPrivateVdOwnedUser_AggregateArgs = {
  distinct_on?: Maybe<Array<User_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<User_Order_By>>;
  where?: Maybe<User_Bool_Exp>;
};


/** columns and relationships of "view_organization_private_vd" */
export type OrganizationPrivateVdProjectsArgs = {
  distinct_on?: Maybe<Array<Project_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Project_Order_By>>;
  where?: Maybe<Project_Bool_Exp>;
};


/** columns and relationships of "view_organization_private_vd" */
export type OrganizationPrivateVdProjects_AggregateArgs = {
  distinct_on?: Maybe<Array<Project_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Project_Order_By>>;
  where?: Maybe<Project_Bool_Exp>;
};


/** columns and relationships of "view_organization_private_vd" */
export type OrganizationPrivateVdUsersArgs = {
  distinct_on?: Maybe<Array<UserOrganization_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserOrganization_Order_By>>;
  where?: Maybe<UserOrganization_Bool_Exp>;
};


/** columns and relationships of "view_organization_private_vd" */
export type OrganizationPrivateVdUsers_AggregateArgs = {
  distinct_on?: Maybe<Array<UserOrganization_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserOrganization_Order_By>>;
  where?: Maybe<UserOrganization_Bool_Exp>;
};

/** aggregated selection of "view_organization_private_vd" */
export type OrganizationPrivateVd_Aggregate = {
  __typename?: 'organizationPrivateVd_aggregate';
  aggregate?: Maybe<OrganizationPrivateVd_Aggregate_Fields>;
  nodes: Array<OrganizationPrivateVd>;
};

/** aggregate fields of "view_organization_private_vd" */
export type OrganizationPrivateVd_Aggregate_Fields = {
  __typename?: 'organizationPrivateVd_aggregate_fields';
  avg?: Maybe<OrganizationPrivateVd_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<OrganizationPrivateVd_Max_Fields>;
  min?: Maybe<OrganizationPrivateVd_Min_Fields>;
  stddev?: Maybe<OrganizationPrivateVd_Stddev_Fields>;
  stddev_pop?: Maybe<OrganizationPrivateVd_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<OrganizationPrivateVd_Stddev_Samp_Fields>;
  sum?: Maybe<OrganizationPrivateVd_Sum_Fields>;
  var_pop?: Maybe<OrganizationPrivateVd_Var_Pop_Fields>;
  var_samp?: Maybe<OrganizationPrivateVd_Var_Samp_Fields>;
  variance?: Maybe<OrganizationPrivateVd_Variance_Fields>;
};


/** aggregate fields of "view_organization_private_vd" */
export type OrganizationPrivateVd_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<OrganizationPrivateVd_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type OrganizationPrivateVd_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type OrganizationPrivateVd_Avg_Fields = {
  __typename?: 'organizationPrivateVd_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "view_organization_private_vd". All fields are combined with a logical 'AND'. */
export type OrganizationPrivateVd_Bool_Exp = {
  _and?: Maybe<Array<OrganizationPrivateVd_Bool_Exp>>;
  _not?: Maybe<OrganizationPrivateVd_Bool_Exp>;
  _or?: Maybe<Array<OrganizationPrivateVd_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  ownedUser?: Maybe<User_Bool_Exp>;
  projects?: Maybe<Project_Bool_Exp>;
  publicData?: Maybe<Organization_Bool_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  users?: Maybe<UserOrganization_Bool_Exp>;
};

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type OrganizationPrivateVd_Delete_At_Path_Input = {
  data?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type OrganizationPrivateVd_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type OrganizationPrivateVd_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "view_organization_private_vd" */
export type OrganizationPrivateVd_Inc_Input = {
  id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "view_organization_private_vd" */
export type OrganizationPrivateVd_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  ownedUser?: Maybe<User_Arr_Rel_Insert_Input>;
  projects?: Maybe<Project_Arr_Rel_Insert_Input>;
  publicData?: Maybe<Organization_Obj_Rel_Insert_Input>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  users?: Maybe<UserOrganization_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type OrganizationPrivateVd_Max_Fields = {
  __typename?: 'organizationPrivateVd_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type OrganizationPrivateVd_Min_Fields = {
  __typename?: 'organizationPrivateVd_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "view_organization_private_vd" */
export type OrganizationPrivateVd_Mutation_Response = {
  __typename?: 'organizationPrivateVd_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<OrganizationPrivateVd>;
};

/** input type for inserting object relation for remote table "view_organization_private_vd" */
export type OrganizationPrivateVd_Obj_Rel_Insert_Input = {
  data: OrganizationPrivateVd_Insert_Input;
};

/** Ordering options when selecting data from "view_organization_private_vd". */
export type OrganizationPrivateVd_Order_By = {
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ownedUser_aggregate?: Maybe<User_Aggregate_Order_By>;
  projects_aggregate?: Maybe<Project_Aggregate_Order_By>;
  publicData?: Maybe<Organization_Order_By>;
  updated_at?: Maybe<Order_By>;
  users_aggregate?: Maybe<UserOrganization_Aggregate_Order_By>;
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type OrganizationPrivateVd_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "view_organization_private_vd" */
export enum OrganizationPrivateVd_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "view_organization_private_vd" */
export type OrganizationPrivateVd_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type OrganizationPrivateVd_Stddev_Fields = {
  __typename?: 'organizationPrivateVd_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type OrganizationPrivateVd_Stddev_Pop_Fields = {
  __typename?: 'organizationPrivateVd_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type OrganizationPrivateVd_Stddev_Samp_Fields = {
  __typename?: 'organizationPrivateVd_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type OrganizationPrivateVd_Sum_Fields = {
  __typename?: 'organizationPrivateVd_sum_fields';
  id?: Maybe<Scalars['bigint']>;
};

/** aggregate var_pop on columns */
export type OrganizationPrivateVd_Var_Pop_Fields = {
  __typename?: 'organizationPrivateVd_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type OrganizationPrivateVd_Var_Samp_Fields = {
  __typename?: 'organizationPrivateVd_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type OrganizationPrivateVd_Variance_Fields = {
  __typename?: 'organizationPrivateVd_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregated selection of "tbl_organization" */
export type Organization_Aggregate = {
  __typename?: 'organization_aggregate';
  aggregate?: Maybe<Organization_Aggregate_Fields>;
  nodes: Array<Organization>;
};

/** aggregate fields of "tbl_organization" */
export type Organization_Aggregate_Fields = {
  __typename?: 'organization_aggregate_fields';
  avg?: Maybe<Organization_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Organization_Max_Fields>;
  min?: Maybe<Organization_Min_Fields>;
  stddev?: Maybe<Organization_Stddev_Fields>;
  stddev_pop?: Maybe<Organization_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Organization_Stddev_Samp_Fields>;
  sum?: Maybe<Organization_Sum_Fields>;
  var_pop?: Maybe<Organization_Var_Pop_Fields>;
  var_samp?: Maybe<Organization_Var_Samp_Fields>;
  variance?: Maybe<Organization_Variance_Fields>;
};


/** aggregate fields of "tbl_organization" */
export type Organization_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Organization_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Organization_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type Organization_Avg_Fields = {
  __typename?: 'organization_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "tbl_organization". All fields are combined with a logical 'AND'. */
export type Organization_Bool_Exp = {
  _and?: Maybe<Array<Organization_Bool_Exp>>;
  _not?: Maybe<Organization_Bool_Exp>;
  _or?: Maybe<Array<Organization_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  invitees?: Maybe<OrganizationInvitation_Bool_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  ownedUser?: Maybe<User_Bool_Exp>;
  privateVd?: Maybe<OrganizationPrivateVd_Bool_Exp>;
  projects?: Maybe<Project_Bool_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  users?: Maybe<UserOrganization_Bool_Exp>;
};

/** unique or primary key constraints on table "tbl_organization" */
export enum Organization_Constraint {
  /** unique or primary key constraint */
  TblOrganizationPkey = 'tbl_organization_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Organization_Delete_At_Path_Input = {
  data?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Organization_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Organization_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "tbl_organization" */
export type Organization_Inc_Input = {
  id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "tbl_organization" */
export type Organization_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  invitees?: Maybe<OrganizationInvitation_Arr_Rel_Insert_Input>;
  name?: Maybe<Scalars['String']>;
  ownedUser?: Maybe<User_Arr_Rel_Insert_Input>;
  privateVd?: Maybe<OrganizationPrivateVd_Obj_Rel_Insert_Input>;
  projects?: Maybe<Project_Arr_Rel_Insert_Input>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  users?: Maybe<UserOrganization_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Organization_Max_Fields = {
  __typename?: 'organization_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  name?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Organization_Min_Fields = {
  __typename?: 'organization_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  name?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "tbl_organization" */
export type Organization_Mutation_Response = {
  __typename?: 'organization_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Organization>;
};

/** input type for inserting object relation for remote table "tbl_organization" */
export type Organization_Obj_Rel_Insert_Input = {
  data: Organization_Insert_Input;
  /** on conflict condition */
  on_conflict?: Maybe<Organization_On_Conflict>;
};

/** on conflict condition type for table "tbl_organization" */
export type Organization_On_Conflict = {
  constraint: Organization_Constraint;
  update_columns: Array<Organization_Update_Column>;
  where?: Maybe<Organization_Bool_Exp>;
};

/** Ordering options when selecting data from "tbl_organization". */
export type Organization_Order_By = {
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  invitees_aggregate?: Maybe<OrganizationInvitation_Aggregate_Order_By>;
  name?: Maybe<Order_By>;
  ownedUser_aggregate?: Maybe<User_Aggregate_Order_By>;
  privateVd?: Maybe<OrganizationPrivateVd_Order_By>;
  projects_aggregate?: Maybe<Project_Aggregate_Order_By>;
  updated_at?: Maybe<Order_By>;
  users_aggregate?: Maybe<UserOrganization_Aggregate_Order_By>;
};

/** primary key columns input for table: organization */
export type Organization_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Organization_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "tbl_organization" */
export enum Organization_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "tbl_organization" */
export type Organization_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  name?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Organization_Stddev_Fields = {
  __typename?: 'organization_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Organization_Stddev_Pop_Fields = {
  __typename?: 'organization_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Organization_Stddev_Samp_Fields = {
  __typename?: 'organization_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Organization_Sum_Fields = {
  __typename?: 'organization_sum_fields';
  id?: Maybe<Scalars['bigint']>;
};

/** update columns of table "tbl_organization" */
export enum Organization_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Organization_Var_Pop_Fields = {
  __typename?: 'organization_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Organization_Var_Samp_Fields = {
  __typename?: 'organization_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Organization_Variance_Fields = {
  __typename?: 'organization_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "tbl_product" */
export type Product = {
  __typename?: 'product';
  /** An array relationship */
  carts: Array<CartProduct>;
  /** An aggregate relationship */
  carts_aggregate: CartProduct_Aggregate;
  color?: Maybe<Scalars['String']>;
  colorCode?: Maybe<Scalars['String']>;
  colorName?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  customId?: Maybe<Scalars['String']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  disabled?: Maybe<Scalars['Boolean']>;
  /** An object relationship */
  group: ProductGroup;
  group_id?: Maybe<Scalars['bigint']>;
  id: Scalars['bigint'];
  instock?: Maybe<Scalars['Int']>;
  isLimit?: Maybe<Scalars['Boolean']>;
  materials?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  orderQuota?: Maybe<Scalars['Int']>;
  ordering?: Maybe<Scalars['Int']>;
  /** An array relationship */
  orders: Array<OrderProduct>;
  /** An aggregate relationship */
  orders_aggregate: OrderProduct_Aggregate;
  pictures?: Maybe<Scalars['jsonb']>;
  price?: Maybe<Scalars['Int']>;
  priority?: Maybe<Scalars['Int']>;
  /** An object relationship */
  privateVd?: Maybe<ProductPrivateVd>;
  size?: Maybe<Scalars['String']>;
  sizeChart?: Maybe<Scalars['String']>;
  soldout?: Maybe<Scalars['Boolean']>;
  /** An object relationship */
  spec: ProductSpec;
  spec_id?: Maybe<Scalars['bigint']>;
  thumbnail?: Maybe<Scalars['jsonb']>;
  type?: Maybe<Scalars['String']>;
  uid?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
  variantData?: Maybe<Scalars['jsonb']>;
  weight?: Maybe<Scalars['float8']>;
};


/** columns and relationships of "tbl_product" */
export type ProductCartsArgs = {
  distinct_on?: Maybe<Array<CartProduct_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<CartProduct_Order_By>>;
  where?: Maybe<CartProduct_Bool_Exp>;
};


/** columns and relationships of "tbl_product" */
export type ProductCarts_AggregateArgs = {
  distinct_on?: Maybe<Array<CartProduct_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<CartProduct_Order_By>>;
  where?: Maybe<CartProduct_Bool_Exp>;
};


/** columns and relationships of "tbl_product" */
export type ProductDataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "tbl_product" */
export type ProductOrdersArgs = {
  distinct_on?: Maybe<Array<OrderProduct_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrderProduct_Order_By>>;
  where?: Maybe<OrderProduct_Bool_Exp>;
};


/** columns and relationships of "tbl_product" */
export type ProductOrders_AggregateArgs = {
  distinct_on?: Maybe<Array<OrderProduct_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrderProduct_Order_By>>;
  where?: Maybe<OrderProduct_Bool_Exp>;
};


/** columns and relationships of "tbl_product" */
export type ProductPicturesArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "tbl_product" */
export type ProductThumbnailArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "tbl_product" */
export type ProductVariantDataArgs = {
  path?: Maybe<Scalars['String']>;
};

/** columns and relationships of "tbl_product_category" */
export type ProductCategory = {
  __typename?: 'productCategory';
  active?: Maybe<Scalars['Boolean']>;
  code?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  /** An array relationship */
  groups: Array<ProductGroup>;
  /** An aggregate relationship */
  groups_aggregate: ProductGroup_Aggregate;
  id: Scalars['bigint'];
  modelsReference1?: Maybe<Scalars['String']>;
  modelsReference2?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  priority?: Maybe<Scalars['Int']>;
  /** An object relationship */
  privateVd?: Maybe<ProductCategoryPrivateVd>;
  specPic?: Maybe<Scalars['jsonb']>;
  specsDesc?: Maybe<Scalars['String']>;
  specsText?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "tbl_product_category" */
export type ProductCategoryDataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "tbl_product_category" */
export type ProductCategoryGroupsArgs = {
  distinct_on?: Maybe<Array<ProductGroup_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductGroup_Order_By>>;
  where?: Maybe<ProductGroup_Bool_Exp>;
};


/** columns and relationships of "tbl_product_category" */
export type ProductCategoryGroups_AggregateArgs = {
  distinct_on?: Maybe<Array<ProductGroup_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductGroup_Order_By>>;
  where?: Maybe<ProductGroup_Bool_Exp>;
};


/** columns and relationships of "tbl_product_category" */
export type ProductCategorySpecPicArgs = {
  path?: Maybe<Scalars['String']>;
};

/** columns and relationships of "view_product_category_private_vd" */
export type ProductCategoryPrivateVd = {
  __typename?: 'productCategoryPrivateVd';
  active?: Maybe<Scalars['Boolean']>;
  code?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  /** An array relationship */
  groups: Array<ProductGroup>;
  /** An aggregate relationship */
  groups_aggregate: ProductGroup_Aggregate;
  id?: Maybe<Scalars['bigint']>;
  modelsReference1?: Maybe<Scalars['String']>;
  modelsReference2?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  priority?: Maybe<Scalars['Int']>;
  /** An object relationship */
  publicData?: Maybe<ProductCategory>;
  specPic?: Maybe<Scalars['jsonb']>;
  specsDesc?: Maybe<Scalars['String']>;
  specsText?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};


/** columns and relationships of "view_product_category_private_vd" */
export type ProductCategoryPrivateVdDataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "view_product_category_private_vd" */
export type ProductCategoryPrivateVdGroupsArgs = {
  distinct_on?: Maybe<Array<ProductGroup_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductGroup_Order_By>>;
  where?: Maybe<ProductGroup_Bool_Exp>;
};


/** columns and relationships of "view_product_category_private_vd" */
export type ProductCategoryPrivateVdGroups_AggregateArgs = {
  distinct_on?: Maybe<Array<ProductGroup_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductGroup_Order_By>>;
  where?: Maybe<ProductGroup_Bool_Exp>;
};


/** columns and relationships of "view_product_category_private_vd" */
export type ProductCategoryPrivateVdSpecPicArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "view_product_category_private_vd" */
export type ProductCategoryPrivateVd_Aggregate = {
  __typename?: 'productCategoryPrivateVd_aggregate';
  aggregate?: Maybe<ProductCategoryPrivateVd_Aggregate_Fields>;
  nodes: Array<ProductCategoryPrivateVd>;
};

/** aggregate fields of "view_product_category_private_vd" */
export type ProductCategoryPrivateVd_Aggregate_Fields = {
  __typename?: 'productCategoryPrivateVd_aggregate_fields';
  avg?: Maybe<ProductCategoryPrivateVd_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<ProductCategoryPrivateVd_Max_Fields>;
  min?: Maybe<ProductCategoryPrivateVd_Min_Fields>;
  stddev?: Maybe<ProductCategoryPrivateVd_Stddev_Fields>;
  stddev_pop?: Maybe<ProductCategoryPrivateVd_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ProductCategoryPrivateVd_Stddev_Samp_Fields>;
  sum?: Maybe<ProductCategoryPrivateVd_Sum_Fields>;
  var_pop?: Maybe<ProductCategoryPrivateVd_Var_Pop_Fields>;
  var_samp?: Maybe<ProductCategoryPrivateVd_Var_Samp_Fields>;
  variance?: Maybe<ProductCategoryPrivateVd_Variance_Fields>;
};


/** aggregate fields of "view_product_category_private_vd" */
export type ProductCategoryPrivateVd_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<ProductCategoryPrivateVd_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type ProductCategoryPrivateVd_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
  specPic?: Maybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type ProductCategoryPrivateVd_Avg_Fields = {
  __typename?: 'productCategoryPrivateVd_avg_fields';
  id?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "view_product_category_private_vd". All fields are combined with a logical 'AND'. */
export type ProductCategoryPrivateVd_Bool_Exp = {
  _and?: Maybe<Array<ProductCategoryPrivateVd_Bool_Exp>>;
  _not?: Maybe<ProductCategoryPrivateVd_Bool_Exp>;
  _or?: Maybe<Array<ProductCategoryPrivateVd_Bool_Exp>>;
  active?: Maybe<Boolean_Comparison_Exp>;
  code?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  groups?: Maybe<ProductGroup_Bool_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  modelsReference1?: Maybe<String_Comparison_Exp>;
  modelsReference2?: Maybe<String_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  nameEn?: Maybe<String_Comparison_Exp>;
  priority?: Maybe<Int_Comparison_Exp>;
  publicData?: Maybe<ProductCategory_Bool_Exp>;
  specPic?: Maybe<Jsonb_Comparison_Exp>;
  specsDesc?: Maybe<String_Comparison_Exp>;
  specsText?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type ProductCategoryPrivateVd_Delete_At_Path_Input = {
  data?: Maybe<Array<Scalars['String']>>;
  specPic?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type ProductCategoryPrivateVd_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
  specPic?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type ProductCategoryPrivateVd_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
  specPic?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "view_product_category_private_vd" */
export type ProductCategoryPrivateVd_Inc_Input = {
  id?: Maybe<Scalars['bigint']>;
  priority?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "view_product_category_private_vd" */
export type ProductCategoryPrivateVd_Insert_Input = {
  active?: Maybe<Scalars['Boolean']>;
  code?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  groups?: Maybe<ProductGroup_Arr_Rel_Insert_Input>;
  id?: Maybe<Scalars['bigint']>;
  modelsReference1?: Maybe<Scalars['String']>;
  modelsReference2?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  priority?: Maybe<Scalars['Int']>;
  publicData?: Maybe<ProductCategory_Obj_Rel_Insert_Input>;
  specPic?: Maybe<Scalars['jsonb']>;
  specsDesc?: Maybe<Scalars['String']>;
  specsText?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type ProductCategoryPrivateVd_Max_Fields = {
  __typename?: 'productCategoryPrivateVd_max_fields';
  code?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  modelsReference1?: Maybe<Scalars['String']>;
  modelsReference2?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  priority?: Maybe<Scalars['Int']>;
  specsDesc?: Maybe<Scalars['String']>;
  specsText?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type ProductCategoryPrivateVd_Min_Fields = {
  __typename?: 'productCategoryPrivateVd_min_fields';
  code?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  modelsReference1?: Maybe<Scalars['String']>;
  modelsReference2?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  priority?: Maybe<Scalars['Int']>;
  specsDesc?: Maybe<Scalars['String']>;
  specsText?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "view_product_category_private_vd" */
export type ProductCategoryPrivateVd_Mutation_Response = {
  __typename?: 'productCategoryPrivateVd_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<ProductCategoryPrivateVd>;
};

/** input type for inserting object relation for remote table "view_product_category_private_vd" */
export type ProductCategoryPrivateVd_Obj_Rel_Insert_Input = {
  data: ProductCategoryPrivateVd_Insert_Input;
};

/** Ordering options when selecting data from "view_product_category_private_vd". */
export type ProductCategoryPrivateVd_Order_By = {
  active?: Maybe<Order_By>;
  code?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  groups_aggregate?: Maybe<ProductGroup_Aggregate_Order_By>;
  id?: Maybe<Order_By>;
  modelsReference1?: Maybe<Order_By>;
  modelsReference2?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  nameEn?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
  publicData?: Maybe<ProductCategory_Order_By>;
  specPic?: Maybe<Order_By>;
  specsDesc?: Maybe<Order_By>;
  specsText?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type ProductCategoryPrivateVd_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
  specPic?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "view_product_category_private_vd" */
export enum ProductCategoryPrivateVd_Select_Column {
  /** column name */
  Active = 'active',
  /** column name */
  Code = 'code',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  ModelsReference1 = 'modelsReference1',
  /** column name */
  ModelsReference2 = 'modelsReference2',
  /** column name */
  Name = 'name',
  /** column name */
  NameEn = 'nameEn',
  /** column name */
  Priority = 'priority',
  /** column name */
  SpecPic = 'specPic',
  /** column name */
  SpecsDesc = 'specsDesc',
  /** column name */
  SpecsText = 'specsText',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "view_product_category_private_vd" */
export type ProductCategoryPrivateVd_Set_Input = {
  active?: Maybe<Scalars['Boolean']>;
  code?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  modelsReference1?: Maybe<Scalars['String']>;
  modelsReference2?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  priority?: Maybe<Scalars['Int']>;
  specPic?: Maybe<Scalars['jsonb']>;
  specsDesc?: Maybe<Scalars['String']>;
  specsText?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type ProductCategoryPrivateVd_Stddev_Fields = {
  __typename?: 'productCategoryPrivateVd_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type ProductCategoryPrivateVd_Stddev_Pop_Fields = {
  __typename?: 'productCategoryPrivateVd_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type ProductCategoryPrivateVd_Stddev_Samp_Fields = {
  __typename?: 'productCategoryPrivateVd_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type ProductCategoryPrivateVd_Sum_Fields = {
  __typename?: 'productCategoryPrivateVd_sum_fields';
  id?: Maybe<Scalars['bigint']>;
  priority?: Maybe<Scalars['Int']>;
};

/** aggregate var_pop on columns */
export type ProductCategoryPrivateVd_Var_Pop_Fields = {
  __typename?: 'productCategoryPrivateVd_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type ProductCategoryPrivateVd_Var_Samp_Fields = {
  __typename?: 'productCategoryPrivateVd_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type ProductCategoryPrivateVd_Variance_Fields = {
  __typename?: 'productCategoryPrivateVd_variance_fields';
  id?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
};

/** aggregated selection of "tbl_product_category" */
export type ProductCategory_Aggregate = {
  __typename?: 'productCategory_aggregate';
  aggregate?: Maybe<ProductCategory_Aggregate_Fields>;
  nodes: Array<ProductCategory>;
};

/** aggregate fields of "tbl_product_category" */
export type ProductCategory_Aggregate_Fields = {
  __typename?: 'productCategory_aggregate_fields';
  avg?: Maybe<ProductCategory_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<ProductCategory_Max_Fields>;
  min?: Maybe<ProductCategory_Min_Fields>;
  stddev?: Maybe<ProductCategory_Stddev_Fields>;
  stddev_pop?: Maybe<ProductCategory_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ProductCategory_Stddev_Samp_Fields>;
  sum?: Maybe<ProductCategory_Sum_Fields>;
  var_pop?: Maybe<ProductCategory_Var_Pop_Fields>;
  var_samp?: Maybe<ProductCategory_Var_Samp_Fields>;
  variance?: Maybe<ProductCategory_Variance_Fields>;
};


/** aggregate fields of "tbl_product_category" */
export type ProductCategory_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<ProductCategory_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type ProductCategory_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
  specPic?: Maybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type ProductCategory_Avg_Fields = {
  __typename?: 'productCategory_avg_fields';
  id?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "tbl_product_category". All fields are combined with a logical 'AND'. */
export type ProductCategory_Bool_Exp = {
  _and?: Maybe<Array<ProductCategory_Bool_Exp>>;
  _not?: Maybe<ProductCategory_Bool_Exp>;
  _or?: Maybe<Array<ProductCategory_Bool_Exp>>;
  active?: Maybe<Boolean_Comparison_Exp>;
  code?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  groups?: Maybe<ProductGroup_Bool_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  modelsReference1?: Maybe<String_Comparison_Exp>;
  modelsReference2?: Maybe<String_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  nameEn?: Maybe<String_Comparison_Exp>;
  priority?: Maybe<Int_Comparison_Exp>;
  privateVd?: Maybe<ProductCategoryPrivateVd_Bool_Exp>;
  specPic?: Maybe<Jsonb_Comparison_Exp>;
  specsDesc?: Maybe<String_Comparison_Exp>;
  specsText?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "tbl_product_category" */
export enum ProductCategory_Constraint {
  /** unique or primary key constraint */
  TblProductCategoryPkey = 'tbl_product_category_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type ProductCategory_Delete_At_Path_Input = {
  data?: Maybe<Array<Scalars['String']>>;
  specPic?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type ProductCategory_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
  specPic?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type ProductCategory_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
  specPic?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "tbl_product_category" */
export type ProductCategory_Inc_Input = {
  id?: Maybe<Scalars['bigint']>;
  priority?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "tbl_product_category" */
export type ProductCategory_Insert_Input = {
  active?: Maybe<Scalars['Boolean']>;
  code?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  groups?: Maybe<ProductGroup_Arr_Rel_Insert_Input>;
  id?: Maybe<Scalars['bigint']>;
  modelsReference1?: Maybe<Scalars['String']>;
  modelsReference2?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  priority?: Maybe<Scalars['Int']>;
  privateVd?: Maybe<ProductCategoryPrivateVd_Obj_Rel_Insert_Input>;
  specPic?: Maybe<Scalars['jsonb']>;
  specsDesc?: Maybe<Scalars['String']>;
  specsText?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type ProductCategory_Max_Fields = {
  __typename?: 'productCategory_max_fields';
  code?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  modelsReference1?: Maybe<Scalars['String']>;
  modelsReference2?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  priority?: Maybe<Scalars['Int']>;
  specsDesc?: Maybe<Scalars['String']>;
  specsText?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type ProductCategory_Min_Fields = {
  __typename?: 'productCategory_min_fields';
  code?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  modelsReference1?: Maybe<Scalars['String']>;
  modelsReference2?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  priority?: Maybe<Scalars['Int']>;
  specsDesc?: Maybe<Scalars['String']>;
  specsText?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "tbl_product_category" */
export type ProductCategory_Mutation_Response = {
  __typename?: 'productCategory_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<ProductCategory>;
};

/** input type for inserting object relation for remote table "tbl_product_category" */
export type ProductCategory_Obj_Rel_Insert_Input = {
  data: ProductCategory_Insert_Input;
  /** on conflict condition */
  on_conflict?: Maybe<ProductCategory_On_Conflict>;
};

/** on conflict condition type for table "tbl_product_category" */
export type ProductCategory_On_Conflict = {
  constraint: ProductCategory_Constraint;
  update_columns: Array<ProductCategory_Update_Column>;
  where?: Maybe<ProductCategory_Bool_Exp>;
};

/** Ordering options when selecting data from "tbl_product_category". */
export type ProductCategory_Order_By = {
  active?: Maybe<Order_By>;
  code?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  groups_aggregate?: Maybe<ProductGroup_Aggregate_Order_By>;
  id?: Maybe<Order_By>;
  modelsReference1?: Maybe<Order_By>;
  modelsReference2?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  nameEn?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
  privateVd?: Maybe<ProductCategoryPrivateVd_Order_By>;
  specPic?: Maybe<Order_By>;
  specsDesc?: Maybe<Order_By>;
  specsText?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: productCategory */
export type ProductCategory_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type ProductCategory_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
  specPic?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "tbl_product_category" */
export enum ProductCategory_Select_Column {
  /** column name */
  Active = 'active',
  /** column name */
  Code = 'code',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  ModelsReference1 = 'modelsReference1',
  /** column name */
  ModelsReference2 = 'modelsReference2',
  /** column name */
  Name = 'name',
  /** column name */
  NameEn = 'nameEn',
  /** column name */
  Priority = 'priority',
  /** column name */
  SpecPic = 'specPic',
  /** column name */
  SpecsDesc = 'specsDesc',
  /** column name */
  SpecsText = 'specsText',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "tbl_product_category" */
export type ProductCategory_Set_Input = {
  active?: Maybe<Scalars['Boolean']>;
  code?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  modelsReference1?: Maybe<Scalars['String']>;
  modelsReference2?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  priority?: Maybe<Scalars['Int']>;
  specPic?: Maybe<Scalars['jsonb']>;
  specsDesc?: Maybe<Scalars['String']>;
  specsText?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type ProductCategory_Stddev_Fields = {
  __typename?: 'productCategory_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type ProductCategory_Stddev_Pop_Fields = {
  __typename?: 'productCategory_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type ProductCategory_Stddev_Samp_Fields = {
  __typename?: 'productCategory_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type ProductCategory_Sum_Fields = {
  __typename?: 'productCategory_sum_fields';
  id?: Maybe<Scalars['bigint']>;
  priority?: Maybe<Scalars['Int']>;
};

/** update columns of table "tbl_product_category" */
export enum ProductCategory_Update_Column {
  /** column name */
  Active = 'active',
  /** column name */
  Code = 'code',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  ModelsReference1 = 'modelsReference1',
  /** column name */
  ModelsReference2 = 'modelsReference2',
  /** column name */
  Name = 'name',
  /** column name */
  NameEn = 'nameEn',
  /** column name */
  Priority = 'priority',
  /** column name */
  SpecPic = 'specPic',
  /** column name */
  SpecsDesc = 'specsDesc',
  /** column name */
  SpecsText = 'specsText',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type ProductCategory_Var_Pop_Fields = {
  __typename?: 'productCategory_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type ProductCategory_Var_Samp_Fields = {
  __typename?: 'productCategory_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type ProductCategory_Variance_Fields = {
  __typename?: 'productCategory_variance_fields';
  id?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "tbl_product_group" */
export type ProductGroup = {
  __typename?: 'productGroup';
  /** An array relationship */
  campaigns: Array<ProductGroupCampaign>;
  /** An aggregate relationship */
  campaigns_aggregate: ProductGroupCampaign_Aggregate;
  /** An object relationship */
  category: ProductCategory;
  category_id?: Maybe<Scalars['bigint']>;
  created_at: Scalars['timestamptz'];
  customId?: Maybe<Scalars['String']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  disabled?: Maybe<Scalars['Boolean']>;
  id: Scalars['bigint'];
  materials?: Maybe<Scalars['String']>;
  modelsReference1?: Maybe<Scalars['String']>;
  modelsReference2?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  pictures?: Maybe<Scalars['jsonb']>;
  price?: Maybe<Scalars['Int']>;
  /** An object relationship */
  privateVd?: Maybe<ProductGroupPrivateVd>;
  /** An array relationship */
  products: Array<Product>;
  /** An aggregate relationship */
  products_aggregate: Product_Aggregate;
  /** An array relationship */
  spec: Array<ProductSpec>;
  /** An aggregate relationship */
  spec_aggregate: ProductSpec_Aggregate;
  thumbnail?: Maybe<Scalars['jsonb']>;
  type?: Maybe<Scalars['String']>;
  uid?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
  weight?: Maybe<Scalars['float8']>;
};


/** columns and relationships of "tbl_product_group" */
export type ProductGroupCampaignsArgs = {
  distinct_on?: Maybe<Array<ProductGroupCampaign_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductGroupCampaign_Order_By>>;
  where?: Maybe<ProductGroupCampaign_Bool_Exp>;
};


/** columns and relationships of "tbl_product_group" */
export type ProductGroupCampaigns_AggregateArgs = {
  distinct_on?: Maybe<Array<ProductGroupCampaign_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductGroupCampaign_Order_By>>;
  where?: Maybe<ProductGroupCampaign_Bool_Exp>;
};


/** columns and relationships of "tbl_product_group" */
export type ProductGroupDataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "tbl_product_group" */
export type ProductGroupPicturesArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "tbl_product_group" */
export type ProductGroupProductsArgs = {
  distinct_on?: Maybe<Array<Product_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Order_By>>;
  where?: Maybe<Product_Bool_Exp>;
};


/** columns and relationships of "tbl_product_group" */
export type ProductGroupProducts_AggregateArgs = {
  distinct_on?: Maybe<Array<Product_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Order_By>>;
  where?: Maybe<Product_Bool_Exp>;
};


/** columns and relationships of "tbl_product_group" */
export type ProductGroupSpecArgs = {
  distinct_on?: Maybe<Array<ProductSpec_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductSpec_Order_By>>;
  where?: Maybe<ProductSpec_Bool_Exp>;
};


/** columns and relationships of "tbl_product_group" */
export type ProductGroupSpec_AggregateArgs = {
  distinct_on?: Maybe<Array<ProductSpec_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductSpec_Order_By>>;
  where?: Maybe<ProductSpec_Bool_Exp>;
};


/** columns and relationships of "tbl_product_group" */
export type ProductGroupThumbnailArgs = {
  path?: Maybe<Scalars['String']>;
};

/** columns and relationships of "mn_product_group_campaign" */
export type ProductGroupCampaign = {
  __typename?: 'productGroupCampaign';
  /** An object relationship */
  campaign: Campaign;
  campaign_id?: Maybe<Scalars['bigint']>;
  created_at: Scalars['timestamptz'];
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id: Scalars['bigint'];
  /** An object relationship */
  privateVd?: Maybe<ProductGroupCampaignPrivateVd>;
  /** An object relationship */
  productGroup: ProductGroup;
  product_group_id?: Maybe<Scalars['bigint']>;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "mn_product_group_campaign" */
export type ProductGroupCampaignDataArgs = {
  path?: Maybe<Scalars['String']>;
};

/** columns and relationships of "view_product_group_campaign_private_vd" */
export type ProductGroupCampaignPrivateVd = {
  __typename?: 'productGroupCampaignPrivateVd';
  /** An object relationship */
  campaign?: Maybe<Campaign>;
  campaign_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  productGroup?: Maybe<ProductGroup>;
  product_group_id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  publicData?: Maybe<ProductGroupCampaign>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};


/** columns and relationships of "view_product_group_campaign_private_vd" */
export type ProductGroupCampaignPrivateVdDataArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "view_product_group_campaign_private_vd" */
export type ProductGroupCampaignPrivateVd_Aggregate = {
  __typename?: 'productGroupCampaignPrivateVd_aggregate';
  aggregate?: Maybe<ProductGroupCampaignPrivateVd_Aggregate_Fields>;
  nodes: Array<ProductGroupCampaignPrivateVd>;
};

/** aggregate fields of "view_product_group_campaign_private_vd" */
export type ProductGroupCampaignPrivateVd_Aggregate_Fields = {
  __typename?: 'productGroupCampaignPrivateVd_aggregate_fields';
  avg?: Maybe<ProductGroupCampaignPrivateVd_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<ProductGroupCampaignPrivateVd_Max_Fields>;
  min?: Maybe<ProductGroupCampaignPrivateVd_Min_Fields>;
  stddev?: Maybe<ProductGroupCampaignPrivateVd_Stddev_Fields>;
  stddev_pop?: Maybe<ProductGroupCampaignPrivateVd_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ProductGroupCampaignPrivateVd_Stddev_Samp_Fields>;
  sum?: Maybe<ProductGroupCampaignPrivateVd_Sum_Fields>;
  var_pop?: Maybe<ProductGroupCampaignPrivateVd_Var_Pop_Fields>;
  var_samp?: Maybe<ProductGroupCampaignPrivateVd_Var_Samp_Fields>;
  variance?: Maybe<ProductGroupCampaignPrivateVd_Variance_Fields>;
};


/** aggregate fields of "view_product_group_campaign_private_vd" */
export type ProductGroupCampaignPrivateVd_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<ProductGroupCampaignPrivateVd_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type ProductGroupCampaignPrivateVd_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type ProductGroupCampaignPrivateVd_Avg_Fields = {
  __typename?: 'productGroupCampaignPrivateVd_avg_fields';
  campaign_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  product_group_id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "view_product_group_campaign_private_vd". All fields are combined with a logical 'AND'. */
export type ProductGroupCampaignPrivateVd_Bool_Exp = {
  _and?: Maybe<Array<ProductGroupCampaignPrivateVd_Bool_Exp>>;
  _not?: Maybe<ProductGroupCampaignPrivateVd_Bool_Exp>;
  _or?: Maybe<Array<ProductGroupCampaignPrivateVd_Bool_Exp>>;
  campaign?: Maybe<Campaign_Bool_Exp>;
  campaign_id?: Maybe<Bigint_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  productGroup?: Maybe<ProductGroup_Bool_Exp>;
  product_group_id?: Maybe<Bigint_Comparison_Exp>;
  publicData?: Maybe<ProductGroupCampaign_Bool_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type ProductGroupCampaignPrivateVd_Delete_At_Path_Input = {
  data?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type ProductGroupCampaignPrivateVd_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type ProductGroupCampaignPrivateVd_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "view_product_group_campaign_private_vd" */
export type ProductGroupCampaignPrivateVd_Inc_Input = {
  campaign_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  product_group_id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "view_product_group_campaign_private_vd" */
export type ProductGroupCampaignPrivateVd_Insert_Input = {
  campaign?: Maybe<Campaign_Obj_Rel_Insert_Input>;
  campaign_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  productGroup?: Maybe<ProductGroup_Obj_Rel_Insert_Input>;
  product_group_id?: Maybe<Scalars['bigint']>;
  publicData?: Maybe<ProductGroupCampaign_Obj_Rel_Insert_Input>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type ProductGroupCampaignPrivateVd_Max_Fields = {
  __typename?: 'productGroupCampaignPrivateVd_max_fields';
  campaign_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  product_group_id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type ProductGroupCampaignPrivateVd_Min_Fields = {
  __typename?: 'productGroupCampaignPrivateVd_min_fields';
  campaign_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  product_group_id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "view_product_group_campaign_private_vd" */
export type ProductGroupCampaignPrivateVd_Mutation_Response = {
  __typename?: 'productGroupCampaignPrivateVd_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<ProductGroupCampaignPrivateVd>;
};

/** input type for inserting object relation for remote table "view_product_group_campaign_private_vd" */
export type ProductGroupCampaignPrivateVd_Obj_Rel_Insert_Input = {
  data: ProductGroupCampaignPrivateVd_Insert_Input;
};

/** Ordering options when selecting data from "view_product_group_campaign_private_vd". */
export type ProductGroupCampaignPrivateVd_Order_By = {
  campaign?: Maybe<Campaign_Order_By>;
  campaign_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  productGroup?: Maybe<ProductGroup_Order_By>;
  product_group_id?: Maybe<Order_By>;
  publicData?: Maybe<ProductGroupCampaign_Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type ProductGroupCampaignPrivateVd_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "view_product_group_campaign_private_vd" */
export enum ProductGroupCampaignPrivateVd_Select_Column {
  /** column name */
  CampaignId = 'campaign_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  ProductGroupId = 'product_group_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "view_product_group_campaign_private_vd" */
export type ProductGroupCampaignPrivateVd_Set_Input = {
  campaign_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  product_group_id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type ProductGroupCampaignPrivateVd_Stddev_Fields = {
  __typename?: 'productGroupCampaignPrivateVd_stddev_fields';
  campaign_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  product_group_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type ProductGroupCampaignPrivateVd_Stddev_Pop_Fields = {
  __typename?: 'productGroupCampaignPrivateVd_stddev_pop_fields';
  campaign_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  product_group_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type ProductGroupCampaignPrivateVd_Stddev_Samp_Fields = {
  __typename?: 'productGroupCampaignPrivateVd_stddev_samp_fields';
  campaign_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  product_group_id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type ProductGroupCampaignPrivateVd_Sum_Fields = {
  __typename?: 'productGroupCampaignPrivateVd_sum_fields';
  campaign_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  product_group_id?: Maybe<Scalars['bigint']>;
};

/** aggregate var_pop on columns */
export type ProductGroupCampaignPrivateVd_Var_Pop_Fields = {
  __typename?: 'productGroupCampaignPrivateVd_var_pop_fields';
  campaign_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  product_group_id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type ProductGroupCampaignPrivateVd_Var_Samp_Fields = {
  __typename?: 'productGroupCampaignPrivateVd_var_samp_fields';
  campaign_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  product_group_id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type ProductGroupCampaignPrivateVd_Variance_Fields = {
  __typename?: 'productGroupCampaignPrivateVd_variance_fields';
  campaign_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  product_group_id?: Maybe<Scalars['Float']>;
};

/** aggregated selection of "mn_product_group_campaign" */
export type ProductGroupCampaign_Aggregate = {
  __typename?: 'productGroupCampaign_aggregate';
  aggregate?: Maybe<ProductGroupCampaign_Aggregate_Fields>;
  nodes: Array<ProductGroupCampaign>;
};

/** aggregate fields of "mn_product_group_campaign" */
export type ProductGroupCampaign_Aggregate_Fields = {
  __typename?: 'productGroupCampaign_aggregate_fields';
  avg?: Maybe<ProductGroupCampaign_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<ProductGroupCampaign_Max_Fields>;
  min?: Maybe<ProductGroupCampaign_Min_Fields>;
  stddev?: Maybe<ProductGroupCampaign_Stddev_Fields>;
  stddev_pop?: Maybe<ProductGroupCampaign_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ProductGroupCampaign_Stddev_Samp_Fields>;
  sum?: Maybe<ProductGroupCampaign_Sum_Fields>;
  var_pop?: Maybe<ProductGroupCampaign_Var_Pop_Fields>;
  var_samp?: Maybe<ProductGroupCampaign_Var_Samp_Fields>;
  variance?: Maybe<ProductGroupCampaign_Variance_Fields>;
};


/** aggregate fields of "mn_product_group_campaign" */
export type ProductGroupCampaign_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<ProductGroupCampaign_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "mn_product_group_campaign" */
export type ProductGroupCampaign_Aggregate_Order_By = {
  avg?: Maybe<ProductGroupCampaign_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<ProductGroupCampaign_Max_Order_By>;
  min?: Maybe<ProductGroupCampaign_Min_Order_By>;
  stddev?: Maybe<ProductGroupCampaign_Stddev_Order_By>;
  stddev_pop?: Maybe<ProductGroupCampaign_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<ProductGroupCampaign_Stddev_Samp_Order_By>;
  sum?: Maybe<ProductGroupCampaign_Sum_Order_By>;
  var_pop?: Maybe<ProductGroupCampaign_Var_Pop_Order_By>;
  var_samp?: Maybe<ProductGroupCampaign_Var_Samp_Order_By>;
  variance?: Maybe<ProductGroupCampaign_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type ProductGroupCampaign_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "mn_product_group_campaign" */
export type ProductGroupCampaign_Arr_Rel_Insert_Input = {
  data: Array<ProductGroupCampaign_Insert_Input>;
  /** on conflict condition */
  on_conflict?: Maybe<ProductGroupCampaign_On_Conflict>;
};

/** aggregate avg on columns */
export type ProductGroupCampaign_Avg_Fields = {
  __typename?: 'productGroupCampaign_avg_fields';
  campaign_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  product_group_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "mn_product_group_campaign" */
export type ProductGroupCampaign_Avg_Order_By = {
  campaign_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  product_group_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "mn_product_group_campaign". All fields are combined with a logical 'AND'. */
export type ProductGroupCampaign_Bool_Exp = {
  _and?: Maybe<Array<ProductGroupCampaign_Bool_Exp>>;
  _not?: Maybe<ProductGroupCampaign_Bool_Exp>;
  _or?: Maybe<Array<ProductGroupCampaign_Bool_Exp>>;
  campaign?: Maybe<Campaign_Bool_Exp>;
  campaign_id?: Maybe<Bigint_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  privateVd?: Maybe<ProductGroupCampaignPrivateVd_Bool_Exp>;
  productGroup?: Maybe<ProductGroup_Bool_Exp>;
  product_group_id?: Maybe<Bigint_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "mn_product_group_campaign" */
export enum ProductGroupCampaign_Constraint {
  /** unique or primary key constraint */
  MnProductGroupCampaignPkey = 'mn_product_group_campaign_pkey',
  /** unique or primary key constraint */
  ProductGroupCampaignUniqueness = 'product_group_campaign_uniqueness'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type ProductGroupCampaign_Delete_At_Path_Input = {
  data?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type ProductGroupCampaign_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type ProductGroupCampaign_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "mn_product_group_campaign" */
export type ProductGroupCampaign_Inc_Input = {
  campaign_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  product_group_id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "mn_product_group_campaign" */
export type ProductGroupCampaign_Insert_Input = {
  campaign?: Maybe<Campaign_Obj_Rel_Insert_Input>;
  campaign_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  privateVd?: Maybe<ProductGroupCampaignPrivateVd_Obj_Rel_Insert_Input>;
  productGroup?: Maybe<ProductGroup_Obj_Rel_Insert_Input>;
  product_group_id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type ProductGroupCampaign_Max_Fields = {
  __typename?: 'productGroupCampaign_max_fields';
  campaign_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  product_group_id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "mn_product_group_campaign" */
export type ProductGroupCampaign_Max_Order_By = {
  campaign_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  product_group_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type ProductGroupCampaign_Min_Fields = {
  __typename?: 'productGroupCampaign_min_fields';
  campaign_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  product_group_id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "mn_product_group_campaign" */
export type ProductGroupCampaign_Min_Order_By = {
  campaign_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  product_group_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "mn_product_group_campaign" */
export type ProductGroupCampaign_Mutation_Response = {
  __typename?: 'productGroupCampaign_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<ProductGroupCampaign>;
};

/** input type for inserting object relation for remote table "mn_product_group_campaign" */
export type ProductGroupCampaign_Obj_Rel_Insert_Input = {
  data: ProductGroupCampaign_Insert_Input;
  /** on conflict condition */
  on_conflict?: Maybe<ProductGroupCampaign_On_Conflict>;
};

/** on conflict condition type for table "mn_product_group_campaign" */
export type ProductGroupCampaign_On_Conflict = {
  constraint: ProductGroupCampaign_Constraint;
  update_columns: Array<ProductGroupCampaign_Update_Column>;
  where?: Maybe<ProductGroupCampaign_Bool_Exp>;
};

/** Ordering options when selecting data from "mn_product_group_campaign". */
export type ProductGroupCampaign_Order_By = {
  campaign?: Maybe<Campaign_Order_By>;
  campaign_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  privateVd?: Maybe<ProductGroupCampaignPrivateVd_Order_By>;
  productGroup?: Maybe<ProductGroup_Order_By>;
  product_group_id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: productGroupCampaign */
export type ProductGroupCampaign_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type ProductGroupCampaign_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "mn_product_group_campaign" */
export enum ProductGroupCampaign_Select_Column {
  /** column name */
  CampaignId = 'campaign_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  ProductGroupId = 'product_group_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "mn_product_group_campaign" */
export type ProductGroupCampaign_Set_Input = {
  campaign_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  product_group_id?: Maybe<Scalars['bigint']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type ProductGroupCampaign_Stddev_Fields = {
  __typename?: 'productGroupCampaign_stddev_fields';
  campaign_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  product_group_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "mn_product_group_campaign" */
export type ProductGroupCampaign_Stddev_Order_By = {
  campaign_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  product_group_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type ProductGroupCampaign_Stddev_Pop_Fields = {
  __typename?: 'productGroupCampaign_stddev_pop_fields';
  campaign_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  product_group_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "mn_product_group_campaign" */
export type ProductGroupCampaign_Stddev_Pop_Order_By = {
  campaign_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  product_group_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type ProductGroupCampaign_Stddev_Samp_Fields = {
  __typename?: 'productGroupCampaign_stddev_samp_fields';
  campaign_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  product_group_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "mn_product_group_campaign" */
export type ProductGroupCampaign_Stddev_Samp_Order_By = {
  campaign_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  product_group_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type ProductGroupCampaign_Sum_Fields = {
  __typename?: 'productGroupCampaign_sum_fields';
  campaign_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  product_group_id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "mn_product_group_campaign" */
export type ProductGroupCampaign_Sum_Order_By = {
  campaign_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  product_group_id?: Maybe<Order_By>;
};

/** update columns of table "mn_product_group_campaign" */
export enum ProductGroupCampaign_Update_Column {
  /** column name */
  CampaignId = 'campaign_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  ProductGroupId = 'product_group_id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type ProductGroupCampaign_Var_Pop_Fields = {
  __typename?: 'productGroupCampaign_var_pop_fields';
  campaign_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  product_group_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "mn_product_group_campaign" */
export type ProductGroupCampaign_Var_Pop_Order_By = {
  campaign_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  product_group_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type ProductGroupCampaign_Var_Samp_Fields = {
  __typename?: 'productGroupCampaign_var_samp_fields';
  campaign_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  product_group_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "mn_product_group_campaign" */
export type ProductGroupCampaign_Var_Samp_Order_By = {
  campaign_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  product_group_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type ProductGroupCampaign_Variance_Fields = {
  __typename?: 'productGroupCampaign_variance_fields';
  campaign_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  product_group_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "mn_product_group_campaign" */
export type ProductGroupCampaign_Variance_Order_By = {
  campaign_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  product_group_id?: Maybe<Order_By>;
};

/** columns and relationships of "view_product_group_private_vd" */
export type ProductGroupPrivateVd = {
  __typename?: 'productGroupPrivateVd';
  /** An array relationship */
  campaigns: Array<ProductGroupCampaign>;
  /** An aggregate relationship */
  campaigns_aggregate: ProductGroupCampaign_Aggregate;
  /** An object relationship */
  category?: Maybe<ProductCategory>;
  category_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  customId?: Maybe<Scalars['String']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  disabled?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['bigint']>;
  materials?: Maybe<Scalars['String']>;
  modelsReference1?: Maybe<Scalars['String']>;
  modelsReference2?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  pictures?: Maybe<Scalars['jsonb']>;
  price?: Maybe<Scalars['Int']>;
  /** An array relationship */
  products: Array<Product>;
  /** An aggregate relationship */
  products_aggregate: Product_Aggregate;
  /** An object relationship */
  publicData?: Maybe<ProductGroup>;
  /** An array relationship */
  spec: Array<ProductSpec>;
  /** An aggregate relationship */
  spec_aggregate: ProductSpec_Aggregate;
  thumbnail?: Maybe<Scalars['jsonb']>;
  type?: Maybe<Scalars['String']>;
  uid?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  weight?: Maybe<Scalars['float8']>;
};


/** columns and relationships of "view_product_group_private_vd" */
export type ProductGroupPrivateVdCampaignsArgs = {
  distinct_on?: Maybe<Array<ProductGroupCampaign_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductGroupCampaign_Order_By>>;
  where?: Maybe<ProductGroupCampaign_Bool_Exp>;
};


/** columns and relationships of "view_product_group_private_vd" */
export type ProductGroupPrivateVdCampaigns_AggregateArgs = {
  distinct_on?: Maybe<Array<ProductGroupCampaign_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductGroupCampaign_Order_By>>;
  where?: Maybe<ProductGroupCampaign_Bool_Exp>;
};


/** columns and relationships of "view_product_group_private_vd" */
export type ProductGroupPrivateVdDataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "view_product_group_private_vd" */
export type ProductGroupPrivateVdPicturesArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "view_product_group_private_vd" */
export type ProductGroupPrivateVdProductsArgs = {
  distinct_on?: Maybe<Array<Product_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Order_By>>;
  where?: Maybe<Product_Bool_Exp>;
};


/** columns and relationships of "view_product_group_private_vd" */
export type ProductGroupPrivateVdProducts_AggregateArgs = {
  distinct_on?: Maybe<Array<Product_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Order_By>>;
  where?: Maybe<Product_Bool_Exp>;
};


/** columns and relationships of "view_product_group_private_vd" */
export type ProductGroupPrivateVdSpecArgs = {
  distinct_on?: Maybe<Array<ProductSpec_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductSpec_Order_By>>;
  where?: Maybe<ProductSpec_Bool_Exp>;
};


/** columns and relationships of "view_product_group_private_vd" */
export type ProductGroupPrivateVdSpec_AggregateArgs = {
  distinct_on?: Maybe<Array<ProductSpec_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductSpec_Order_By>>;
  where?: Maybe<ProductSpec_Bool_Exp>;
};


/** columns and relationships of "view_product_group_private_vd" */
export type ProductGroupPrivateVdThumbnailArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "view_product_group_private_vd" */
export type ProductGroupPrivateVd_Aggregate = {
  __typename?: 'productGroupPrivateVd_aggregate';
  aggregate?: Maybe<ProductGroupPrivateVd_Aggregate_Fields>;
  nodes: Array<ProductGroupPrivateVd>;
};

/** aggregate fields of "view_product_group_private_vd" */
export type ProductGroupPrivateVd_Aggregate_Fields = {
  __typename?: 'productGroupPrivateVd_aggregate_fields';
  avg?: Maybe<ProductGroupPrivateVd_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<ProductGroupPrivateVd_Max_Fields>;
  min?: Maybe<ProductGroupPrivateVd_Min_Fields>;
  stddev?: Maybe<ProductGroupPrivateVd_Stddev_Fields>;
  stddev_pop?: Maybe<ProductGroupPrivateVd_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ProductGroupPrivateVd_Stddev_Samp_Fields>;
  sum?: Maybe<ProductGroupPrivateVd_Sum_Fields>;
  var_pop?: Maybe<ProductGroupPrivateVd_Var_Pop_Fields>;
  var_samp?: Maybe<ProductGroupPrivateVd_Var_Samp_Fields>;
  variance?: Maybe<ProductGroupPrivateVd_Variance_Fields>;
};


/** aggregate fields of "view_product_group_private_vd" */
export type ProductGroupPrivateVd_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<ProductGroupPrivateVd_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type ProductGroupPrivateVd_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
  pictures?: Maybe<Scalars['jsonb']>;
  thumbnail?: Maybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type ProductGroupPrivateVd_Avg_Fields = {
  __typename?: 'productGroupPrivateVd_avg_fields';
  category_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  weight?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "view_product_group_private_vd". All fields are combined with a logical 'AND'. */
export type ProductGroupPrivateVd_Bool_Exp = {
  _and?: Maybe<Array<ProductGroupPrivateVd_Bool_Exp>>;
  _not?: Maybe<ProductGroupPrivateVd_Bool_Exp>;
  _or?: Maybe<Array<ProductGroupPrivateVd_Bool_Exp>>;
  campaigns?: Maybe<ProductGroupCampaign_Bool_Exp>;
  category?: Maybe<ProductCategory_Bool_Exp>;
  category_id?: Maybe<Bigint_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  customId?: Maybe<String_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  description?: Maybe<String_Comparison_Exp>;
  disabled?: Maybe<Boolean_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  materials?: Maybe<String_Comparison_Exp>;
  modelsReference1?: Maybe<String_Comparison_Exp>;
  modelsReference2?: Maybe<String_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  nameEn?: Maybe<String_Comparison_Exp>;
  pictures?: Maybe<Jsonb_Comparison_Exp>;
  price?: Maybe<Int_Comparison_Exp>;
  products?: Maybe<Product_Bool_Exp>;
  publicData?: Maybe<ProductGroup_Bool_Exp>;
  spec?: Maybe<ProductSpec_Bool_Exp>;
  thumbnail?: Maybe<Jsonb_Comparison_Exp>;
  type?: Maybe<String_Comparison_Exp>;
  uid?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  weight?: Maybe<Float8_Comparison_Exp>;
};

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type ProductGroupPrivateVd_Delete_At_Path_Input = {
  data?: Maybe<Array<Scalars['String']>>;
  pictures?: Maybe<Array<Scalars['String']>>;
  thumbnail?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type ProductGroupPrivateVd_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
  pictures?: Maybe<Scalars['Int']>;
  thumbnail?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type ProductGroupPrivateVd_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
  pictures?: Maybe<Scalars['String']>;
  thumbnail?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "view_product_group_private_vd" */
export type ProductGroupPrivateVd_Inc_Input = {
  category_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  weight?: Maybe<Scalars['float8']>;
};

/** input type for inserting data into table "view_product_group_private_vd" */
export type ProductGroupPrivateVd_Insert_Input = {
  campaigns?: Maybe<ProductGroupCampaign_Arr_Rel_Insert_Input>;
  category?: Maybe<ProductCategory_Obj_Rel_Insert_Input>;
  category_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  customId?: Maybe<Scalars['String']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  disabled?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['bigint']>;
  materials?: Maybe<Scalars['String']>;
  modelsReference1?: Maybe<Scalars['String']>;
  modelsReference2?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  pictures?: Maybe<Scalars['jsonb']>;
  price?: Maybe<Scalars['Int']>;
  products?: Maybe<Product_Arr_Rel_Insert_Input>;
  publicData?: Maybe<ProductGroup_Obj_Rel_Insert_Input>;
  spec?: Maybe<ProductSpec_Arr_Rel_Insert_Input>;
  thumbnail?: Maybe<Scalars['jsonb']>;
  type?: Maybe<Scalars['String']>;
  uid?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  weight?: Maybe<Scalars['float8']>;
};

/** aggregate max on columns */
export type ProductGroupPrivateVd_Max_Fields = {
  __typename?: 'productGroupPrivateVd_max_fields';
  category_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  customId?: Maybe<Scalars['String']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  materials?: Maybe<Scalars['String']>;
  modelsReference1?: Maybe<Scalars['String']>;
  modelsReference2?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['Int']>;
  type?: Maybe<Scalars['String']>;
  uid?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  weight?: Maybe<Scalars['float8']>;
};

/** aggregate min on columns */
export type ProductGroupPrivateVd_Min_Fields = {
  __typename?: 'productGroupPrivateVd_min_fields';
  category_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  customId?: Maybe<Scalars['String']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  materials?: Maybe<Scalars['String']>;
  modelsReference1?: Maybe<Scalars['String']>;
  modelsReference2?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['Int']>;
  type?: Maybe<Scalars['String']>;
  uid?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  weight?: Maybe<Scalars['float8']>;
};

/** response of any mutation on the table "view_product_group_private_vd" */
export type ProductGroupPrivateVd_Mutation_Response = {
  __typename?: 'productGroupPrivateVd_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<ProductGroupPrivateVd>;
};

/** input type for inserting object relation for remote table "view_product_group_private_vd" */
export type ProductGroupPrivateVd_Obj_Rel_Insert_Input = {
  data: ProductGroupPrivateVd_Insert_Input;
};

/** Ordering options when selecting data from "view_product_group_private_vd". */
export type ProductGroupPrivateVd_Order_By = {
  campaigns_aggregate?: Maybe<ProductGroupCampaign_Aggregate_Order_By>;
  category?: Maybe<ProductCategory_Order_By>;
  category_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  customId?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  description?: Maybe<Order_By>;
  disabled?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  materials?: Maybe<Order_By>;
  modelsReference1?: Maybe<Order_By>;
  modelsReference2?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  nameEn?: Maybe<Order_By>;
  pictures?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  products_aggregate?: Maybe<Product_Aggregate_Order_By>;
  publicData?: Maybe<ProductGroup_Order_By>;
  spec_aggregate?: Maybe<ProductSpec_Aggregate_Order_By>;
  thumbnail?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  uid?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  weight?: Maybe<Order_By>;
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type ProductGroupPrivateVd_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
  pictures?: Maybe<Scalars['jsonb']>;
  thumbnail?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "view_product_group_private_vd" */
export enum ProductGroupPrivateVd_Select_Column {
  /** column name */
  CategoryId = 'category_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CustomId = 'customId',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Description = 'description',
  /** column name */
  Disabled = 'disabled',
  /** column name */
  Id = 'id',
  /** column name */
  Materials = 'materials',
  /** column name */
  ModelsReference1 = 'modelsReference1',
  /** column name */
  ModelsReference2 = 'modelsReference2',
  /** column name */
  Name = 'name',
  /** column name */
  NameEn = 'nameEn',
  /** column name */
  Pictures = 'pictures',
  /** column name */
  Price = 'price',
  /** column name */
  Thumbnail = 'thumbnail',
  /** column name */
  Type = 'type',
  /** column name */
  Uid = 'uid',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Weight = 'weight'
}

/** input type for updating data in table "view_product_group_private_vd" */
export type ProductGroupPrivateVd_Set_Input = {
  category_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  customId?: Maybe<Scalars['String']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  disabled?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['bigint']>;
  materials?: Maybe<Scalars['String']>;
  modelsReference1?: Maybe<Scalars['String']>;
  modelsReference2?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  pictures?: Maybe<Scalars['jsonb']>;
  price?: Maybe<Scalars['Int']>;
  thumbnail?: Maybe<Scalars['jsonb']>;
  type?: Maybe<Scalars['String']>;
  uid?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  weight?: Maybe<Scalars['float8']>;
};

/** aggregate stddev on columns */
export type ProductGroupPrivateVd_Stddev_Fields = {
  __typename?: 'productGroupPrivateVd_stddev_fields';
  category_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  weight?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type ProductGroupPrivateVd_Stddev_Pop_Fields = {
  __typename?: 'productGroupPrivateVd_stddev_pop_fields';
  category_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  weight?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type ProductGroupPrivateVd_Stddev_Samp_Fields = {
  __typename?: 'productGroupPrivateVd_stddev_samp_fields';
  category_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  weight?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type ProductGroupPrivateVd_Sum_Fields = {
  __typename?: 'productGroupPrivateVd_sum_fields';
  category_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  weight?: Maybe<Scalars['float8']>;
};

/** aggregate var_pop on columns */
export type ProductGroupPrivateVd_Var_Pop_Fields = {
  __typename?: 'productGroupPrivateVd_var_pop_fields';
  category_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  weight?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type ProductGroupPrivateVd_Var_Samp_Fields = {
  __typename?: 'productGroupPrivateVd_var_samp_fields';
  category_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  weight?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type ProductGroupPrivateVd_Variance_Fields = {
  __typename?: 'productGroupPrivateVd_variance_fields';
  category_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  weight?: Maybe<Scalars['Float']>;
};

/** aggregated selection of "tbl_product_group" */
export type ProductGroup_Aggregate = {
  __typename?: 'productGroup_aggregate';
  aggregate?: Maybe<ProductGroup_Aggregate_Fields>;
  nodes: Array<ProductGroup>;
};

/** aggregate fields of "tbl_product_group" */
export type ProductGroup_Aggregate_Fields = {
  __typename?: 'productGroup_aggregate_fields';
  avg?: Maybe<ProductGroup_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<ProductGroup_Max_Fields>;
  min?: Maybe<ProductGroup_Min_Fields>;
  stddev?: Maybe<ProductGroup_Stddev_Fields>;
  stddev_pop?: Maybe<ProductGroup_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ProductGroup_Stddev_Samp_Fields>;
  sum?: Maybe<ProductGroup_Sum_Fields>;
  var_pop?: Maybe<ProductGroup_Var_Pop_Fields>;
  var_samp?: Maybe<ProductGroup_Var_Samp_Fields>;
  variance?: Maybe<ProductGroup_Variance_Fields>;
};


/** aggregate fields of "tbl_product_group" */
export type ProductGroup_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<ProductGroup_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "tbl_product_group" */
export type ProductGroup_Aggregate_Order_By = {
  avg?: Maybe<ProductGroup_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<ProductGroup_Max_Order_By>;
  min?: Maybe<ProductGroup_Min_Order_By>;
  stddev?: Maybe<ProductGroup_Stddev_Order_By>;
  stddev_pop?: Maybe<ProductGroup_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<ProductGroup_Stddev_Samp_Order_By>;
  sum?: Maybe<ProductGroup_Sum_Order_By>;
  var_pop?: Maybe<ProductGroup_Var_Pop_Order_By>;
  var_samp?: Maybe<ProductGroup_Var_Samp_Order_By>;
  variance?: Maybe<ProductGroup_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type ProductGroup_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
  pictures?: Maybe<Scalars['jsonb']>;
  thumbnail?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "tbl_product_group" */
export type ProductGroup_Arr_Rel_Insert_Input = {
  data: Array<ProductGroup_Insert_Input>;
  /** on conflict condition */
  on_conflict?: Maybe<ProductGroup_On_Conflict>;
};

/** aggregate avg on columns */
export type ProductGroup_Avg_Fields = {
  __typename?: 'productGroup_avg_fields';
  category_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  weight?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "tbl_product_group" */
export type ProductGroup_Avg_Order_By = {
  category_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  weight?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "tbl_product_group". All fields are combined with a logical 'AND'. */
export type ProductGroup_Bool_Exp = {
  _and?: Maybe<Array<ProductGroup_Bool_Exp>>;
  _not?: Maybe<ProductGroup_Bool_Exp>;
  _or?: Maybe<Array<ProductGroup_Bool_Exp>>;
  campaigns?: Maybe<ProductGroupCampaign_Bool_Exp>;
  category?: Maybe<ProductCategory_Bool_Exp>;
  category_id?: Maybe<Bigint_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  customId?: Maybe<String_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  description?: Maybe<String_Comparison_Exp>;
  disabled?: Maybe<Boolean_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  materials?: Maybe<String_Comparison_Exp>;
  modelsReference1?: Maybe<String_Comparison_Exp>;
  modelsReference2?: Maybe<String_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  nameEn?: Maybe<String_Comparison_Exp>;
  pictures?: Maybe<Jsonb_Comparison_Exp>;
  price?: Maybe<Int_Comparison_Exp>;
  privateVd?: Maybe<ProductGroupPrivateVd_Bool_Exp>;
  products?: Maybe<Product_Bool_Exp>;
  spec?: Maybe<ProductSpec_Bool_Exp>;
  thumbnail?: Maybe<Jsonb_Comparison_Exp>;
  type?: Maybe<String_Comparison_Exp>;
  uid?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  weight?: Maybe<Float8_Comparison_Exp>;
};

/** unique or primary key constraints on table "tbl_product_group" */
export enum ProductGroup_Constraint {
  /** unique or primary key constraint */
  TblProductGroupPkey = 'tbl_product_group_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type ProductGroup_Delete_At_Path_Input = {
  data?: Maybe<Array<Scalars['String']>>;
  pictures?: Maybe<Array<Scalars['String']>>;
  thumbnail?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type ProductGroup_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
  pictures?: Maybe<Scalars['Int']>;
  thumbnail?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type ProductGroup_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
  pictures?: Maybe<Scalars['String']>;
  thumbnail?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "tbl_product_group" */
export type ProductGroup_Inc_Input = {
  category_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  weight?: Maybe<Scalars['float8']>;
};

/** input type for inserting data into table "tbl_product_group" */
export type ProductGroup_Insert_Input = {
  campaigns?: Maybe<ProductGroupCampaign_Arr_Rel_Insert_Input>;
  category?: Maybe<ProductCategory_Obj_Rel_Insert_Input>;
  category_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  customId?: Maybe<Scalars['String']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  disabled?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['bigint']>;
  materials?: Maybe<Scalars['String']>;
  modelsReference1?: Maybe<Scalars['String']>;
  modelsReference2?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  pictures?: Maybe<Scalars['jsonb']>;
  price?: Maybe<Scalars['Int']>;
  privateVd?: Maybe<ProductGroupPrivateVd_Obj_Rel_Insert_Input>;
  products?: Maybe<Product_Arr_Rel_Insert_Input>;
  spec?: Maybe<ProductSpec_Arr_Rel_Insert_Input>;
  thumbnail?: Maybe<Scalars['jsonb']>;
  type?: Maybe<Scalars['String']>;
  uid?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  weight?: Maybe<Scalars['float8']>;
};

/** aggregate max on columns */
export type ProductGroup_Max_Fields = {
  __typename?: 'productGroup_max_fields';
  category_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  customId?: Maybe<Scalars['String']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  materials?: Maybe<Scalars['String']>;
  modelsReference1?: Maybe<Scalars['String']>;
  modelsReference2?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['Int']>;
  type?: Maybe<Scalars['String']>;
  uid?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  weight?: Maybe<Scalars['float8']>;
};

/** order by max() on columns of table "tbl_product_group" */
export type ProductGroup_Max_Order_By = {
  category_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  customId?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  description?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  materials?: Maybe<Order_By>;
  modelsReference1?: Maybe<Order_By>;
  modelsReference2?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  nameEn?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  uid?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  weight?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type ProductGroup_Min_Fields = {
  __typename?: 'productGroup_min_fields';
  category_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  customId?: Maybe<Scalars['String']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  materials?: Maybe<Scalars['String']>;
  modelsReference1?: Maybe<Scalars['String']>;
  modelsReference2?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['Int']>;
  type?: Maybe<Scalars['String']>;
  uid?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  weight?: Maybe<Scalars['float8']>;
};

/** order by min() on columns of table "tbl_product_group" */
export type ProductGroup_Min_Order_By = {
  category_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  customId?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  description?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  materials?: Maybe<Order_By>;
  modelsReference1?: Maybe<Order_By>;
  modelsReference2?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  nameEn?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  uid?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  weight?: Maybe<Order_By>;
};

/** response of any mutation on the table "tbl_product_group" */
export type ProductGroup_Mutation_Response = {
  __typename?: 'productGroup_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<ProductGroup>;
};

/** input type for inserting object relation for remote table "tbl_product_group" */
export type ProductGroup_Obj_Rel_Insert_Input = {
  data: ProductGroup_Insert_Input;
  /** on conflict condition */
  on_conflict?: Maybe<ProductGroup_On_Conflict>;
};

/** on conflict condition type for table "tbl_product_group" */
export type ProductGroup_On_Conflict = {
  constraint: ProductGroup_Constraint;
  update_columns: Array<ProductGroup_Update_Column>;
  where?: Maybe<ProductGroup_Bool_Exp>;
};

/** Ordering options when selecting data from "tbl_product_group". */
export type ProductGroup_Order_By = {
  campaigns_aggregate?: Maybe<ProductGroupCampaign_Aggregate_Order_By>;
  category?: Maybe<ProductCategory_Order_By>;
  category_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  customId?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  description?: Maybe<Order_By>;
  disabled?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  materials?: Maybe<Order_By>;
  modelsReference1?: Maybe<Order_By>;
  modelsReference2?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  nameEn?: Maybe<Order_By>;
  pictures?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  privateVd?: Maybe<ProductGroupPrivateVd_Order_By>;
  products_aggregate?: Maybe<Product_Aggregate_Order_By>;
  spec_aggregate?: Maybe<ProductSpec_Aggregate_Order_By>;
  thumbnail?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  uid?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  weight?: Maybe<Order_By>;
};

/** primary key columns input for table: productGroup */
export type ProductGroup_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type ProductGroup_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
  pictures?: Maybe<Scalars['jsonb']>;
  thumbnail?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "tbl_product_group" */
export enum ProductGroup_Select_Column {
  /** column name */
  CategoryId = 'category_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CustomId = 'customId',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Description = 'description',
  /** column name */
  Disabled = 'disabled',
  /** column name */
  Id = 'id',
  /** column name */
  Materials = 'materials',
  /** column name */
  ModelsReference1 = 'modelsReference1',
  /** column name */
  ModelsReference2 = 'modelsReference2',
  /** column name */
  Name = 'name',
  /** column name */
  NameEn = 'nameEn',
  /** column name */
  Pictures = 'pictures',
  /** column name */
  Price = 'price',
  /** column name */
  Thumbnail = 'thumbnail',
  /** column name */
  Type = 'type',
  /** column name */
  Uid = 'uid',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Weight = 'weight'
}

/** input type for updating data in table "tbl_product_group" */
export type ProductGroup_Set_Input = {
  category_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  customId?: Maybe<Scalars['String']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  disabled?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['bigint']>;
  materials?: Maybe<Scalars['String']>;
  modelsReference1?: Maybe<Scalars['String']>;
  modelsReference2?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  pictures?: Maybe<Scalars['jsonb']>;
  price?: Maybe<Scalars['Int']>;
  thumbnail?: Maybe<Scalars['jsonb']>;
  type?: Maybe<Scalars['String']>;
  uid?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  weight?: Maybe<Scalars['float8']>;
};

/** aggregate stddev on columns */
export type ProductGroup_Stddev_Fields = {
  __typename?: 'productGroup_stddev_fields';
  category_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  weight?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "tbl_product_group" */
export type ProductGroup_Stddev_Order_By = {
  category_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  weight?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type ProductGroup_Stddev_Pop_Fields = {
  __typename?: 'productGroup_stddev_pop_fields';
  category_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  weight?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "tbl_product_group" */
export type ProductGroup_Stddev_Pop_Order_By = {
  category_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  weight?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type ProductGroup_Stddev_Samp_Fields = {
  __typename?: 'productGroup_stddev_samp_fields';
  category_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  weight?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "tbl_product_group" */
export type ProductGroup_Stddev_Samp_Order_By = {
  category_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  weight?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type ProductGroup_Sum_Fields = {
  __typename?: 'productGroup_sum_fields';
  category_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  weight?: Maybe<Scalars['float8']>;
};

/** order by sum() on columns of table "tbl_product_group" */
export type ProductGroup_Sum_Order_By = {
  category_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  weight?: Maybe<Order_By>;
};

/** update columns of table "tbl_product_group" */
export enum ProductGroup_Update_Column {
  /** column name */
  CategoryId = 'category_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CustomId = 'customId',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Description = 'description',
  /** column name */
  Disabled = 'disabled',
  /** column name */
  Id = 'id',
  /** column name */
  Materials = 'materials',
  /** column name */
  ModelsReference1 = 'modelsReference1',
  /** column name */
  ModelsReference2 = 'modelsReference2',
  /** column name */
  Name = 'name',
  /** column name */
  NameEn = 'nameEn',
  /** column name */
  Pictures = 'pictures',
  /** column name */
  Price = 'price',
  /** column name */
  Thumbnail = 'thumbnail',
  /** column name */
  Type = 'type',
  /** column name */
  Uid = 'uid',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Weight = 'weight'
}

/** aggregate var_pop on columns */
export type ProductGroup_Var_Pop_Fields = {
  __typename?: 'productGroup_var_pop_fields';
  category_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  weight?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "tbl_product_group" */
export type ProductGroup_Var_Pop_Order_By = {
  category_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  weight?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type ProductGroup_Var_Samp_Fields = {
  __typename?: 'productGroup_var_samp_fields';
  category_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  weight?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "tbl_product_group" */
export type ProductGroup_Var_Samp_Order_By = {
  category_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  weight?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type ProductGroup_Variance_Fields = {
  __typename?: 'productGroup_variance_fields';
  category_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  weight?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "tbl_product_group" */
export type ProductGroup_Variance_Order_By = {
  category_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  weight?: Maybe<Order_By>;
};

/** columns and relationships of "view_product_private_vd" */
export type ProductPrivateVd = {
  __typename?: 'productPrivateVd';
  /** An array relationship */
  carts: Array<CartProduct>;
  /** An aggregate relationship */
  carts_aggregate: CartProduct_Aggregate;
  color?: Maybe<Scalars['String']>;
  colorCode?: Maybe<Scalars['String']>;
  colorName?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  customId?: Maybe<Scalars['String']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  disabled?: Maybe<Scalars['Boolean']>;
  /** An object relationship */
  group?: Maybe<ProductGroup>;
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  instock?: Maybe<Scalars['Int']>;
  isLimit?: Maybe<Scalars['Boolean']>;
  materials?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  orderQuota?: Maybe<Scalars['Int']>;
  ordering?: Maybe<Scalars['Int']>;
  /** An array relationship */
  orders: Array<OrderProduct>;
  /** An aggregate relationship */
  orders_aggregate: OrderProduct_Aggregate;
  pictures?: Maybe<Scalars['jsonb']>;
  price?: Maybe<Scalars['Int']>;
  priority?: Maybe<Scalars['Int']>;
  /** An object relationship */
  publicData?: Maybe<Product>;
  size?: Maybe<Scalars['String']>;
  sizeChart?: Maybe<Scalars['String']>;
  soldout?: Maybe<Scalars['Boolean']>;
  /** An object relationship */
  spec?: Maybe<ProductSpec>;
  spec_id?: Maybe<Scalars['bigint']>;
  thumbnail?: Maybe<Scalars['jsonb']>;
  type?: Maybe<Scalars['String']>;
  uid?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  variantData?: Maybe<Scalars['jsonb']>;
  weight?: Maybe<Scalars['float8']>;
};


/** columns and relationships of "view_product_private_vd" */
export type ProductPrivateVdCartsArgs = {
  distinct_on?: Maybe<Array<CartProduct_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<CartProduct_Order_By>>;
  where?: Maybe<CartProduct_Bool_Exp>;
};


/** columns and relationships of "view_product_private_vd" */
export type ProductPrivateVdCarts_AggregateArgs = {
  distinct_on?: Maybe<Array<CartProduct_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<CartProduct_Order_By>>;
  where?: Maybe<CartProduct_Bool_Exp>;
};


/** columns and relationships of "view_product_private_vd" */
export type ProductPrivateVdDataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "view_product_private_vd" */
export type ProductPrivateVdOrdersArgs = {
  distinct_on?: Maybe<Array<OrderProduct_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrderProduct_Order_By>>;
  where?: Maybe<OrderProduct_Bool_Exp>;
};


/** columns and relationships of "view_product_private_vd" */
export type ProductPrivateVdOrders_AggregateArgs = {
  distinct_on?: Maybe<Array<OrderProduct_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrderProduct_Order_By>>;
  where?: Maybe<OrderProduct_Bool_Exp>;
};


/** columns and relationships of "view_product_private_vd" */
export type ProductPrivateVdPicturesArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "view_product_private_vd" */
export type ProductPrivateVdThumbnailArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "view_product_private_vd" */
export type ProductPrivateVdVariantDataArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "view_product_private_vd" */
export type ProductPrivateVd_Aggregate = {
  __typename?: 'productPrivateVd_aggregate';
  aggregate?: Maybe<ProductPrivateVd_Aggregate_Fields>;
  nodes: Array<ProductPrivateVd>;
};

/** aggregate fields of "view_product_private_vd" */
export type ProductPrivateVd_Aggregate_Fields = {
  __typename?: 'productPrivateVd_aggregate_fields';
  avg?: Maybe<ProductPrivateVd_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<ProductPrivateVd_Max_Fields>;
  min?: Maybe<ProductPrivateVd_Min_Fields>;
  stddev?: Maybe<ProductPrivateVd_Stddev_Fields>;
  stddev_pop?: Maybe<ProductPrivateVd_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ProductPrivateVd_Stddev_Samp_Fields>;
  sum?: Maybe<ProductPrivateVd_Sum_Fields>;
  var_pop?: Maybe<ProductPrivateVd_Var_Pop_Fields>;
  var_samp?: Maybe<ProductPrivateVd_Var_Samp_Fields>;
  variance?: Maybe<ProductPrivateVd_Variance_Fields>;
};


/** aggregate fields of "view_product_private_vd" */
export type ProductPrivateVd_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<ProductPrivateVd_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type ProductPrivateVd_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
  pictures?: Maybe<Scalars['jsonb']>;
  thumbnail?: Maybe<Scalars['jsonb']>;
  variantData?: Maybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type ProductPrivateVd_Avg_Fields = {
  __typename?: 'productPrivateVd_avg_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  instock?: Maybe<Scalars['Float']>;
  orderQuota?: Maybe<Scalars['Float']>;
  ordering?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
  spec_id?: Maybe<Scalars['Float']>;
  weight?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "view_product_private_vd". All fields are combined with a logical 'AND'. */
export type ProductPrivateVd_Bool_Exp = {
  _and?: Maybe<Array<ProductPrivateVd_Bool_Exp>>;
  _not?: Maybe<ProductPrivateVd_Bool_Exp>;
  _or?: Maybe<Array<ProductPrivateVd_Bool_Exp>>;
  carts?: Maybe<CartProduct_Bool_Exp>;
  color?: Maybe<String_Comparison_Exp>;
  colorCode?: Maybe<String_Comparison_Exp>;
  colorName?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  customId?: Maybe<String_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  description?: Maybe<String_Comparison_Exp>;
  disabled?: Maybe<Boolean_Comparison_Exp>;
  group?: Maybe<ProductGroup_Bool_Exp>;
  group_id?: Maybe<Bigint_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  instock?: Maybe<Int_Comparison_Exp>;
  isLimit?: Maybe<Boolean_Comparison_Exp>;
  materials?: Maybe<String_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  nameEn?: Maybe<String_Comparison_Exp>;
  orderQuota?: Maybe<Int_Comparison_Exp>;
  ordering?: Maybe<Int_Comparison_Exp>;
  orders?: Maybe<OrderProduct_Bool_Exp>;
  pictures?: Maybe<Jsonb_Comparison_Exp>;
  price?: Maybe<Int_Comparison_Exp>;
  priority?: Maybe<Int_Comparison_Exp>;
  publicData?: Maybe<Product_Bool_Exp>;
  size?: Maybe<String_Comparison_Exp>;
  sizeChart?: Maybe<String_Comparison_Exp>;
  soldout?: Maybe<Boolean_Comparison_Exp>;
  spec?: Maybe<ProductSpec_Bool_Exp>;
  spec_id?: Maybe<Bigint_Comparison_Exp>;
  thumbnail?: Maybe<Jsonb_Comparison_Exp>;
  type?: Maybe<String_Comparison_Exp>;
  uid?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  variantData?: Maybe<Jsonb_Comparison_Exp>;
  weight?: Maybe<Float8_Comparison_Exp>;
};

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type ProductPrivateVd_Delete_At_Path_Input = {
  data?: Maybe<Array<Scalars['String']>>;
  pictures?: Maybe<Array<Scalars['String']>>;
  thumbnail?: Maybe<Array<Scalars['String']>>;
  variantData?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type ProductPrivateVd_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
  pictures?: Maybe<Scalars['Int']>;
  thumbnail?: Maybe<Scalars['Int']>;
  variantData?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type ProductPrivateVd_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
  pictures?: Maybe<Scalars['String']>;
  thumbnail?: Maybe<Scalars['String']>;
  variantData?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "view_product_private_vd" */
export type ProductPrivateVd_Inc_Input = {
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  instock?: Maybe<Scalars['Int']>;
  orderQuota?: Maybe<Scalars['Int']>;
  ordering?: Maybe<Scalars['Int']>;
  price?: Maybe<Scalars['Int']>;
  priority?: Maybe<Scalars['Int']>;
  spec_id?: Maybe<Scalars['bigint']>;
  weight?: Maybe<Scalars['float8']>;
};

/** input type for inserting data into table "view_product_private_vd" */
export type ProductPrivateVd_Insert_Input = {
  carts?: Maybe<CartProduct_Arr_Rel_Insert_Input>;
  color?: Maybe<Scalars['String']>;
  colorCode?: Maybe<Scalars['String']>;
  colorName?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  customId?: Maybe<Scalars['String']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  disabled?: Maybe<Scalars['Boolean']>;
  group?: Maybe<ProductGroup_Obj_Rel_Insert_Input>;
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  instock?: Maybe<Scalars['Int']>;
  isLimit?: Maybe<Scalars['Boolean']>;
  materials?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  orderQuota?: Maybe<Scalars['Int']>;
  ordering?: Maybe<Scalars['Int']>;
  orders?: Maybe<OrderProduct_Arr_Rel_Insert_Input>;
  pictures?: Maybe<Scalars['jsonb']>;
  price?: Maybe<Scalars['Int']>;
  priority?: Maybe<Scalars['Int']>;
  publicData?: Maybe<Product_Obj_Rel_Insert_Input>;
  size?: Maybe<Scalars['String']>;
  sizeChart?: Maybe<Scalars['String']>;
  soldout?: Maybe<Scalars['Boolean']>;
  spec?: Maybe<ProductSpec_Obj_Rel_Insert_Input>;
  spec_id?: Maybe<Scalars['bigint']>;
  thumbnail?: Maybe<Scalars['jsonb']>;
  type?: Maybe<Scalars['String']>;
  uid?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  variantData?: Maybe<Scalars['jsonb']>;
  weight?: Maybe<Scalars['float8']>;
};

/** aggregate max on columns */
export type ProductPrivateVd_Max_Fields = {
  __typename?: 'productPrivateVd_max_fields';
  color?: Maybe<Scalars['String']>;
  colorCode?: Maybe<Scalars['String']>;
  colorName?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  customId?: Maybe<Scalars['String']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  instock?: Maybe<Scalars['Int']>;
  materials?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  orderQuota?: Maybe<Scalars['Int']>;
  ordering?: Maybe<Scalars['Int']>;
  price?: Maybe<Scalars['Int']>;
  priority?: Maybe<Scalars['Int']>;
  size?: Maybe<Scalars['String']>;
  sizeChart?: Maybe<Scalars['String']>;
  spec_id?: Maybe<Scalars['bigint']>;
  type?: Maybe<Scalars['String']>;
  uid?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  weight?: Maybe<Scalars['float8']>;
};

/** aggregate min on columns */
export type ProductPrivateVd_Min_Fields = {
  __typename?: 'productPrivateVd_min_fields';
  color?: Maybe<Scalars['String']>;
  colorCode?: Maybe<Scalars['String']>;
  colorName?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  customId?: Maybe<Scalars['String']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  instock?: Maybe<Scalars['Int']>;
  materials?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  orderQuota?: Maybe<Scalars['Int']>;
  ordering?: Maybe<Scalars['Int']>;
  price?: Maybe<Scalars['Int']>;
  priority?: Maybe<Scalars['Int']>;
  size?: Maybe<Scalars['String']>;
  sizeChart?: Maybe<Scalars['String']>;
  spec_id?: Maybe<Scalars['bigint']>;
  type?: Maybe<Scalars['String']>;
  uid?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  weight?: Maybe<Scalars['float8']>;
};

/** response of any mutation on the table "view_product_private_vd" */
export type ProductPrivateVd_Mutation_Response = {
  __typename?: 'productPrivateVd_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<ProductPrivateVd>;
};

/** input type for inserting object relation for remote table "view_product_private_vd" */
export type ProductPrivateVd_Obj_Rel_Insert_Input = {
  data: ProductPrivateVd_Insert_Input;
};

/** Ordering options when selecting data from "view_product_private_vd". */
export type ProductPrivateVd_Order_By = {
  carts_aggregate?: Maybe<CartProduct_Aggregate_Order_By>;
  color?: Maybe<Order_By>;
  colorCode?: Maybe<Order_By>;
  colorName?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  customId?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  description?: Maybe<Order_By>;
  disabled?: Maybe<Order_By>;
  group?: Maybe<ProductGroup_Order_By>;
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  instock?: Maybe<Order_By>;
  isLimit?: Maybe<Order_By>;
  materials?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  nameEn?: Maybe<Order_By>;
  orderQuota?: Maybe<Order_By>;
  ordering?: Maybe<Order_By>;
  orders_aggregate?: Maybe<OrderProduct_Aggregate_Order_By>;
  pictures?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
  publicData?: Maybe<Product_Order_By>;
  size?: Maybe<Order_By>;
  sizeChart?: Maybe<Order_By>;
  soldout?: Maybe<Order_By>;
  spec?: Maybe<ProductSpec_Order_By>;
  spec_id?: Maybe<Order_By>;
  thumbnail?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  uid?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  variantData?: Maybe<Order_By>;
  weight?: Maybe<Order_By>;
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type ProductPrivateVd_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
  pictures?: Maybe<Scalars['jsonb']>;
  thumbnail?: Maybe<Scalars['jsonb']>;
  variantData?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "view_product_private_vd" */
export enum ProductPrivateVd_Select_Column {
  /** column name */
  Color = 'color',
  /** column name */
  ColorCode = 'colorCode',
  /** column name */
  ColorName = 'colorName',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CustomId = 'customId',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Description = 'description',
  /** column name */
  Disabled = 'disabled',
  /** column name */
  GroupId = 'group_id',
  /** column name */
  Id = 'id',
  /** column name */
  Instock = 'instock',
  /** column name */
  IsLimit = 'isLimit',
  /** column name */
  Materials = 'materials',
  /** column name */
  Name = 'name',
  /** column name */
  NameEn = 'nameEn',
  /** column name */
  OrderQuota = 'orderQuota',
  /** column name */
  Ordering = 'ordering',
  /** column name */
  Pictures = 'pictures',
  /** column name */
  Price = 'price',
  /** column name */
  Priority = 'priority',
  /** column name */
  Size = 'size',
  /** column name */
  SizeChart = 'sizeChart',
  /** column name */
  Soldout = 'soldout',
  /** column name */
  SpecId = 'spec_id',
  /** column name */
  Thumbnail = 'thumbnail',
  /** column name */
  Type = 'type',
  /** column name */
  Uid = 'uid',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  VariantData = 'variantData',
  /** column name */
  Weight = 'weight'
}

/** input type for updating data in table "view_product_private_vd" */
export type ProductPrivateVd_Set_Input = {
  color?: Maybe<Scalars['String']>;
  colorCode?: Maybe<Scalars['String']>;
  colorName?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  customId?: Maybe<Scalars['String']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  disabled?: Maybe<Scalars['Boolean']>;
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  instock?: Maybe<Scalars['Int']>;
  isLimit?: Maybe<Scalars['Boolean']>;
  materials?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  orderQuota?: Maybe<Scalars['Int']>;
  ordering?: Maybe<Scalars['Int']>;
  pictures?: Maybe<Scalars['jsonb']>;
  price?: Maybe<Scalars['Int']>;
  priority?: Maybe<Scalars['Int']>;
  size?: Maybe<Scalars['String']>;
  sizeChart?: Maybe<Scalars['String']>;
  soldout?: Maybe<Scalars['Boolean']>;
  spec_id?: Maybe<Scalars['bigint']>;
  thumbnail?: Maybe<Scalars['jsonb']>;
  type?: Maybe<Scalars['String']>;
  uid?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  variantData?: Maybe<Scalars['jsonb']>;
  weight?: Maybe<Scalars['float8']>;
};

/** aggregate stddev on columns */
export type ProductPrivateVd_Stddev_Fields = {
  __typename?: 'productPrivateVd_stddev_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  instock?: Maybe<Scalars['Float']>;
  orderQuota?: Maybe<Scalars['Float']>;
  ordering?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
  spec_id?: Maybe<Scalars['Float']>;
  weight?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type ProductPrivateVd_Stddev_Pop_Fields = {
  __typename?: 'productPrivateVd_stddev_pop_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  instock?: Maybe<Scalars['Float']>;
  orderQuota?: Maybe<Scalars['Float']>;
  ordering?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
  spec_id?: Maybe<Scalars['Float']>;
  weight?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type ProductPrivateVd_Stddev_Samp_Fields = {
  __typename?: 'productPrivateVd_stddev_samp_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  instock?: Maybe<Scalars['Float']>;
  orderQuota?: Maybe<Scalars['Float']>;
  ordering?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
  spec_id?: Maybe<Scalars['Float']>;
  weight?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type ProductPrivateVd_Sum_Fields = {
  __typename?: 'productPrivateVd_sum_fields';
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  instock?: Maybe<Scalars['Int']>;
  orderQuota?: Maybe<Scalars['Int']>;
  ordering?: Maybe<Scalars['Int']>;
  price?: Maybe<Scalars['Int']>;
  priority?: Maybe<Scalars['Int']>;
  spec_id?: Maybe<Scalars['bigint']>;
  weight?: Maybe<Scalars['float8']>;
};

/** aggregate var_pop on columns */
export type ProductPrivateVd_Var_Pop_Fields = {
  __typename?: 'productPrivateVd_var_pop_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  instock?: Maybe<Scalars['Float']>;
  orderQuota?: Maybe<Scalars['Float']>;
  ordering?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
  spec_id?: Maybe<Scalars['Float']>;
  weight?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type ProductPrivateVd_Var_Samp_Fields = {
  __typename?: 'productPrivateVd_var_samp_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  instock?: Maybe<Scalars['Float']>;
  orderQuota?: Maybe<Scalars['Float']>;
  ordering?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
  spec_id?: Maybe<Scalars['Float']>;
  weight?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type ProductPrivateVd_Variance_Fields = {
  __typename?: 'productPrivateVd_variance_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  instock?: Maybe<Scalars['Float']>;
  orderQuota?: Maybe<Scalars['Float']>;
  ordering?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
  spec_id?: Maybe<Scalars['Float']>;
  weight?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "tbl_product_spec" */
export type ProductSpec = {
  __typename?: 'productSpec';
  code?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  group: ProductGroup;
  group_id?: Maybe<Scalars['bigint']>;
  id: Scalars['bigint'];
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  priority?: Maybe<Scalars['Int']>;
  /** An object relationship */
  privateVd?: Maybe<ProductSpecPrivateVd>;
  /** An array relationship */
  products: Array<Product>;
  /** An aggregate relationship */
  products_aggregate: Product_Aggregate;
  spec?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "tbl_product_spec" */
export type ProductSpecDataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "tbl_product_spec" */
export type ProductSpecProductsArgs = {
  distinct_on?: Maybe<Array<Product_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Order_By>>;
  where?: Maybe<Product_Bool_Exp>;
};


/** columns and relationships of "tbl_product_spec" */
export type ProductSpecProducts_AggregateArgs = {
  distinct_on?: Maybe<Array<Product_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Order_By>>;
  where?: Maybe<Product_Bool_Exp>;
};

/** columns and relationships of "view_product_spec_private_vd" */
export type ProductSpecPrivateVd = {
  __typename?: 'productSpecPrivateVd';
  code?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  group?: Maybe<ProductGroup>;
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  priority?: Maybe<Scalars['Int']>;
  /** An array relationship */
  products: Array<Product>;
  /** An aggregate relationship */
  products_aggregate: Product_Aggregate;
  /** An object relationship */
  publicData?: Maybe<ProductSpec>;
  spec?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};


/** columns and relationships of "view_product_spec_private_vd" */
export type ProductSpecPrivateVdDataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "view_product_spec_private_vd" */
export type ProductSpecPrivateVdProductsArgs = {
  distinct_on?: Maybe<Array<Product_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Order_By>>;
  where?: Maybe<Product_Bool_Exp>;
};


/** columns and relationships of "view_product_spec_private_vd" */
export type ProductSpecPrivateVdProducts_AggregateArgs = {
  distinct_on?: Maybe<Array<Product_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Order_By>>;
  where?: Maybe<Product_Bool_Exp>;
};

/** aggregated selection of "view_product_spec_private_vd" */
export type ProductSpecPrivateVd_Aggregate = {
  __typename?: 'productSpecPrivateVd_aggregate';
  aggregate?: Maybe<ProductSpecPrivateVd_Aggregate_Fields>;
  nodes: Array<ProductSpecPrivateVd>;
};

/** aggregate fields of "view_product_spec_private_vd" */
export type ProductSpecPrivateVd_Aggregate_Fields = {
  __typename?: 'productSpecPrivateVd_aggregate_fields';
  avg?: Maybe<ProductSpecPrivateVd_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<ProductSpecPrivateVd_Max_Fields>;
  min?: Maybe<ProductSpecPrivateVd_Min_Fields>;
  stddev?: Maybe<ProductSpecPrivateVd_Stddev_Fields>;
  stddev_pop?: Maybe<ProductSpecPrivateVd_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ProductSpecPrivateVd_Stddev_Samp_Fields>;
  sum?: Maybe<ProductSpecPrivateVd_Sum_Fields>;
  var_pop?: Maybe<ProductSpecPrivateVd_Var_Pop_Fields>;
  var_samp?: Maybe<ProductSpecPrivateVd_Var_Samp_Fields>;
  variance?: Maybe<ProductSpecPrivateVd_Variance_Fields>;
};


/** aggregate fields of "view_product_spec_private_vd" */
export type ProductSpecPrivateVd_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<ProductSpecPrivateVd_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type ProductSpecPrivateVd_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type ProductSpecPrivateVd_Avg_Fields = {
  __typename?: 'productSpecPrivateVd_avg_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "view_product_spec_private_vd". All fields are combined with a logical 'AND'. */
export type ProductSpecPrivateVd_Bool_Exp = {
  _and?: Maybe<Array<ProductSpecPrivateVd_Bool_Exp>>;
  _not?: Maybe<ProductSpecPrivateVd_Bool_Exp>;
  _or?: Maybe<Array<ProductSpecPrivateVd_Bool_Exp>>;
  code?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  group?: Maybe<ProductGroup_Bool_Exp>;
  group_id?: Maybe<Bigint_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  nameEn?: Maybe<String_Comparison_Exp>;
  priority?: Maybe<Int_Comparison_Exp>;
  products?: Maybe<Product_Bool_Exp>;
  publicData?: Maybe<ProductSpec_Bool_Exp>;
  spec?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type ProductSpecPrivateVd_Delete_At_Path_Input = {
  data?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type ProductSpecPrivateVd_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type ProductSpecPrivateVd_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "view_product_spec_private_vd" */
export type ProductSpecPrivateVd_Inc_Input = {
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  priority?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "view_product_spec_private_vd" */
export type ProductSpecPrivateVd_Insert_Input = {
  code?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  group?: Maybe<ProductGroup_Obj_Rel_Insert_Input>;
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  priority?: Maybe<Scalars['Int']>;
  products?: Maybe<Product_Arr_Rel_Insert_Input>;
  publicData?: Maybe<ProductSpec_Obj_Rel_Insert_Input>;
  spec?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type ProductSpecPrivateVd_Max_Fields = {
  __typename?: 'productSpecPrivateVd_max_fields';
  code?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  priority?: Maybe<Scalars['Int']>;
  spec?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type ProductSpecPrivateVd_Min_Fields = {
  __typename?: 'productSpecPrivateVd_min_fields';
  code?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  priority?: Maybe<Scalars['Int']>;
  spec?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "view_product_spec_private_vd" */
export type ProductSpecPrivateVd_Mutation_Response = {
  __typename?: 'productSpecPrivateVd_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<ProductSpecPrivateVd>;
};

/** input type for inserting object relation for remote table "view_product_spec_private_vd" */
export type ProductSpecPrivateVd_Obj_Rel_Insert_Input = {
  data: ProductSpecPrivateVd_Insert_Input;
};

/** Ordering options when selecting data from "view_product_spec_private_vd". */
export type ProductSpecPrivateVd_Order_By = {
  code?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  group?: Maybe<ProductGroup_Order_By>;
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  nameEn?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
  products_aggregate?: Maybe<Product_Aggregate_Order_By>;
  publicData?: Maybe<ProductSpec_Order_By>;
  spec?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type ProductSpecPrivateVd_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "view_product_spec_private_vd" */
export enum ProductSpecPrivateVd_Select_Column {
  /** column name */
  Code = 'code',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  GroupId = 'group_id',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  NameEn = 'nameEn',
  /** column name */
  Priority = 'priority',
  /** column name */
  Spec = 'spec',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "view_product_spec_private_vd" */
export type ProductSpecPrivateVd_Set_Input = {
  code?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  priority?: Maybe<Scalars['Int']>;
  spec?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type ProductSpecPrivateVd_Stddev_Fields = {
  __typename?: 'productSpecPrivateVd_stddev_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type ProductSpecPrivateVd_Stddev_Pop_Fields = {
  __typename?: 'productSpecPrivateVd_stddev_pop_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type ProductSpecPrivateVd_Stddev_Samp_Fields = {
  __typename?: 'productSpecPrivateVd_stddev_samp_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type ProductSpecPrivateVd_Sum_Fields = {
  __typename?: 'productSpecPrivateVd_sum_fields';
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  priority?: Maybe<Scalars['Int']>;
};

/** aggregate var_pop on columns */
export type ProductSpecPrivateVd_Var_Pop_Fields = {
  __typename?: 'productSpecPrivateVd_var_pop_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type ProductSpecPrivateVd_Var_Samp_Fields = {
  __typename?: 'productSpecPrivateVd_var_samp_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type ProductSpecPrivateVd_Variance_Fields = {
  __typename?: 'productSpecPrivateVd_variance_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
};

/** aggregated selection of "tbl_product_spec" */
export type ProductSpec_Aggregate = {
  __typename?: 'productSpec_aggregate';
  aggregate?: Maybe<ProductSpec_Aggregate_Fields>;
  nodes: Array<ProductSpec>;
};

/** aggregate fields of "tbl_product_spec" */
export type ProductSpec_Aggregate_Fields = {
  __typename?: 'productSpec_aggregate_fields';
  avg?: Maybe<ProductSpec_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<ProductSpec_Max_Fields>;
  min?: Maybe<ProductSpec_Min_Fields>;
  stddev?: Maybe<ProductSpec_Stddev_Fields>;
  stddev_pop?: Maybe<ProductSpec_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ProductSpec_Stddev_Samp_Fields>;
  sum?: Maybe<ProductSpec_Sum_Fields>;
  var_pop?: Maybe<ProductSpec_Var_Pop_Fields>;
  var_samp?: Maybe<ProductSpec_Var_Samp_Fields>;
  variance?: Maybe<ProductSpec_Variance_Fields>;
};


/** aggregate fields of "tbl_product_spec" */
export type ProductSpec_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<ProductSpec_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "tbl_product_spec" */
export type ProductSpec_Aggregate_Order_By = {
  avg?: Maybe<ProductSpec_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<ProductSpec_Max_Order_By>;
  min?: Maybe<ProductSpec_Min_Order_By>;
  stddev?: Maybe<ProductSpec_Stddev_Order_By>;
  stddev_pop?: Maybe<ProductSpec_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<ProductSpec_Stddev_Samp_Order_By>;
  sum?: Maybe<ProductSpec_Sum_Order_By>;
  var_pop?: Maybe<ProductSpec_Var_Pop_Order_By>;
  var_samp?: Maybe<ProductSpec_Var_Samp_Order_By>;
  variance?: Maybe<ProductSpec_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type ProductSpec_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "tbl_product_spec" */
export type ProductSpec_Arr_Rel_Insert_Input = {
  data: Array<ProductSpec_Insert_Input>;
  /** on conflict condition */
  on_conflict?: Maybe<ProductSpec_On_Conflict>;
};

/** aggregate avg on columns */
export type ProductSpec_Avg_Fields = {
  __typename?: 'productSpec_avg_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "tbl_product_spec" */
export type ProductSpec_Avg_Order_By = {
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "tbl_product_spec". All fields are combined with a logical 'AND'. */
export type ProductSpec_Bool_Exp = {
  _and?: Maybe<Array<ProductSpec_Bool_Exp>>;
  _not?: Maybe<ProductSpec_Bool_Exp>;
  _or?: Maybe<Array<ProductSpec_Bool_Exp>>;
  code?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  group?: Maybe<ProductGroup_Bool_Exp>;
  group_id?: Maybe<Bigint_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  nameEn?: Maybe<String_Comparison_Exp>;
  priority?: Maybe<Int_Comparison_Exp>;
  privateVd?: Maybe<ProductSpecPrivateVd_Bool_Exp>;
  products?: Maybe<Product_Bool_Exp>;
  spec?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "tbl_product_spec" */
export enum ProductSpec_Constraint {
  /** unique or primary key constraint */
  TblProductSpecPkey = 'tbl_product_spec_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type ProductSpec_Delete_At_Path_Input = {
  data?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type ProductSpec_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type ProductSpec_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "tbl_product_spec" */
export type ProductSpec_Inc_Input = {
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  priority?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "tbl_product_spec" */
export type ProductSpec_Insert_Input = {
  code?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  group?: Maybe<ProductGroup_Obj_Rel_Insert_Input>;
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  priority?: Maybe<Scalars['Int']>;
  privateVd?: Maybe<ProductSpecPrivateVd_Obj_Rel_Insert_Input>;
  products?: Maybe<Product_Arr_Rel_Insert_Input>;
  spec?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type ProductSpec_Max_Fields = {
  __typename?: 'productSpec_max_fields';
  code?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  priority?: Maybe<Scalars['Int']>;
  spec?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "tbl_product_spec" */
export type ProductSpec_Max_Order_By = {
  code?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  nameEn?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
  spec?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type ProductSpec_Min_Fields = {
  __typename?: 'productSpec_min_fields';
  code?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  priority?: Maybe<Scalars['Int']>;
  spec?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "tbl_product_spec" */
export type ProductSpec_Min_Order_By = {
  code?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  nameEn?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
  spec?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "tbl_product_spec" */
export type ProductSpec_Mutation_Response = {
  __typename?: 'productSpec_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<ProductSpec>;
};

/** input type for inserting object relation for remote table "tbl_product_spec" */
export type ProductSpec_Obj_Rel_Insert_Input = {
  data: ProductSpec_Insert_Input;
  /** on conflict condition */
  on_conflict?: Maybe<ProductSpec_On_Conflict>;
};

/** on conflict condition type for table "tbl_product_spec" */
export type ProductSpec_On_Conflict = {
  constraint: ProductSpec_Constraint;
  update_columns: Array<ProductSpec_Update_Column>;
  where?: Maybe<ProductSpec_Bool_Exp>;
};

/** Ordering options when selecting data from "tbl_product_spec". */
export type ProductSpec_Order_By = {
  code?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  group?: Maybe<ProductGroup_Order_By>;
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  nameEn?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
  privateVd?: Maybe<ProductSpecPrivateVd_Order_By>;
  products_aggregate?: Maybe<Product_Aggregate_Order_By>;
  spec?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: productSpec */
export type ProductSpec_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type ProductSpec_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "tbl_product_spec" */
export enum ProductSpec_Select_Column {
  /** column name */
  Code = 'code',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  GroupId = 'group_id',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  NameEn = 'nameEn',
  /** column name */
  Priority = 'priority',
  /** column name */
  Spec = 'spec',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "tbl_product_spec" */
export type ProductSpec_Set_Input = {
  code?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  priority?: Maybe<Scalars['Int']>;
  spec?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type ProductSpec_Stddev_Fields = {
  __typename?: 'productSpec_stddev_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "tbl_product_spec" */
export type ProductSpec_Stddev_Order_By = {
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type ProductSpec_Stddev_Pop_Fields = {
  __typename?: 'productSpec_stddev_pop_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "tbl_product_spec" */
export type ProductSpec_Stddev_Pop_Order_By = {
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type ProductSpec_Stddev_Samp_Fields = {
  __typename?: 'productSpec_stddev_samp_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "tbl_product_spec" */
export type ProductSpec_Stddev_Samp_Order_By = {
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type ProductSpec_Sum_Fields = {
  __typename?: 'productSpec_sum_fields';
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  priority?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "tbl_product_spec" */
export type ProductSpec_Sum_Order_By = {
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
};

/** update columns of table "tbl_product_spec" */
export enum ProductSpec_Update_Column {
  /** column name */
  Code = 'code',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  GroupId = 'group_id',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  NameEn = 'nameEn',
  /** column name */
  Priority = 'priority',
  /** column name */
  Spec = 'spec',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type ProductSpec_Var_Pop_Fields = {
  __typename?: 'productSpec_var_pop_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "tbl_product_spec" */
export type ProductSpec_Var_Pop_Order_By = {
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type ProductSpec_Var_Samp_Fields = {
  __typename?: 'productSpec_var_samp_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "tbl_product_spec" */
export type ProductSpec_Var_Samp_Order_By = {
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type ProductSpec_Variance_Fields = {
  __typename?: 'productSpec_variance_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "tbl_product_spec" */
export type ProductSpec_Variance_Order_By = {
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
};

/** aggregated selection of "tbl_product" */
export type Product_Aggregate = {
  __typename?: 'product_aggregate';
  aggregate?: Maybe<Product_Aggregate_Fields>;
  nodes: Array<Product>;
};

/** aggregate fields of "tbl_product" */
export type Product_Aggregate_Fields = {
  __typename?: 'product_aggregate_fields';
  avg?: Maybe<Product_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Product_Max_Fields>;
  min?: Maybe<Product_Min_Fields>;
  stddev?: Maybe<Product_Stddev_Fields>;
  stddev_pop?: Maybe<Product_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Product_Stddev_Samp_Fields>;
  sum?: Maybe<Product_Sum_Fields>;
  var_pop?: Maybe<Product_Var_Pop_Fields>;
  var_samp?: Maybe<Product_Var_Samp_Fields>;
  variance?: Maybe<Product_Variance_Fields>;
};


/** aggregate fields of "tbl_product" */
export type Product_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Product_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "tbl_product" */
export type Product_Aggregate_Order_By = {
  avg?: Maybe<Product_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Product_Max_Order_By>;
  min?: Maybe<Product_Min_Order_By>;
  stddev?: Maybe<Product_Stddev_Order_By>;
  stddev_pop?: Maybe<Product_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Product_Stddev_Samp_Order_By>;
  sum?: Maybe<Product_Sum_Order_By>;
  var_pop?: Maybe<Product_Var_Pop_Order_By>;
  var_samp?: Maybe<Product_Var_Samp_Order_By>;
  variance?: Maybe<Product_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Product_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
  pictures?: Maybe<Scalars['jsonb']>;
  thumbnail?: Maybe<Scalars['jsonb']>;
  variantData?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "tbl_product" */
export type Product_Arr_Rel_Insert_Input = {
  data: Array<Product_Insert_Input>;
  /** on conflict condition */
  on_conflict?: Maybe<Product_On_Conflict>;
};

/** aggregate avg on columns */
export type Product_Avg_Fields = {
  __typename?: 'product_avg_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  instock?: Maybe<Scalars['Float']>;
  orderQuota?: Maybe<Scalars['Float']>;
  ordering?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
  spec_id?: Maybe<Scalars['Float']>;
  weight?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "tbl_product" */
export type Product_Avg_Order_By = {
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  instock?: Maybe<Order_By>;
  orderQuota?: Maybe<Order_By>;
  ordering?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
  spec_id?: Maybe<Order_By>;
  weight?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "tbl_product". All fields are combined with a logical 'AND'. */
export type Product_Bool_Exp = {
  _and?: Maybe<Array<Product_Bool_Exp>>;
  _not?: Maybe<Product_Bool_Exp>;
  _or?: Maybe<Array<Product_Bool_Exp>>;
  carts?: Maybe<CartProduct_Bool_Exp>;
  color?: Maybe<String_Comparison_Exp>;
  colorCode?: Maybe<String_Comparison_Exp>;
  colorName?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  customId?: Maybe<String_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  description?: Maybe<String_Comparison_Exp>;
  disabled?: Maybe<Boolean_Comparison_Exp>;
  group?: Maybe<ProductGroup_Bool_Exp>;
  group_id?: Maybe<Bigint_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  instock?: Maybe<Int_Comparison_Exp>;
  isLimit?: Maybe<Boolean_Comparison_Exp>;
  materials?: Maybe<String_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  nameEn?: Maybe<String_Comparison_Exp>;
  orderQuota?: Maybe<Int_Comparison_Exp>;
  ordering?: Maybe<Int_Comparison_Exp>;
  orders?: Maybe<OrderProduct_Bool_Exp>;
  pictures?: Maybe<Jsonb_Comparison_Exp>;
  price?: Maybe<Int_Comparison_Exp>;
  priority?: Maybe<Int_Comparison_Exp>;
  privateVd?: Maybe<ProductPrivateVd_Bool_Exp>;
  size?: Maybe<String_Comparison_Exp>;
  sizeChart?: Maybe<String_Comparison_Exp>;
  soldout?: Maybe<Boolean_Comparison_Exp>;
  spec?: Maybe<ProductSpec_Bool_Exp>;
  spec_id?: Maybe<Bigint_Comparison_Exp>;
  thumbnail?: Maybe<Jsonb_Comparison_Exp>;
  type?: Maybe<String_Comparison_Exp>;
  uid?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  variantData?: Maybe<Jsonb_Comparison_Exp>;
  weight?: Maybe<Float8_Comparison_Exp>;
};

/** unique or primary key constraints on table "tbl_product" */
export enum Product_Constraint {
  /** unique or primary key constraint */
  TblProductPkey = 'tbl_product_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Product_Delete_At_Path_Input = {
  data?: Maybe<Array<Scalars['String']>>;
  pictures?: Maybe<Array<Scalars['String']>>;
  thumbnail?: Maybe<Array<Scalars['String']>>;
  variantData?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Product_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
  pictures?: Maybe<Scalars['Int']>;
  thumbnail?: Maybe<Scalars['Int']>;
  variantData?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Product_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
  pictures?: Maybe<Scalars['String']>;
  thumbnail?: Maybe<Scalars['String']>;
  variantData?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "tbl_product" */
export type Product_Inc_Input = {
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  instock?: Maybe<Scalars['Int']>;
  orderQuota?: Maybe<Scalars['Int']>;
  ordering?: Maybe<Scalars['Int']>;
  price?: Maybe<Scalars['Int']>;
  priority?: Maybe<Scalars['Int']>;
  spec_id?: Maybe<Scalars['bigint']>;
  weight?: Maybe<Scalars['float8']>;
};

/** input type for inserting data into table "tbl_product" */
export type Product_Insert_Input = {
  carts?: Maybe<CartProduct_Arr_Rel_Insert_Input>;
  color?: Maybe<Scalars['String']>;
  colorCode?: Maybe<Scalars['String']>;
  colorName?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  customId?: Maybe<Scalars['String']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  disabled?: Maybe<Scalars['Boolean']>;
  group?: Maybe<ProductGroup_Obj_Rel_Insert_Input>;
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  instock?: Maybe<Scalars['Int']>;
  isLimit?: Maybe<Scalars['Boolean']>;
  materials?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  orderQuota?: Maybe<Scalars['Int']>;
  ordering?: Maybe<Scalars['Int']>;
  orders?: Maybe<OrderProduct_Arr_Rel_Insert_Input>;
  pictures?: Maybe<Scalars['jsonb']>;
  price?: Maybe<Scalars['Int']>;
  priority?: Maybe<Scalars['Int']>;
  privateVd?: Maybe<ProductPrivateVd_Obj_Rel_Insert_Input>;
  size?: Maybe<Scalars['String']>;
  sizeChart?: Maybe<Scalars['String']>;
  soldout?: Maybe<Scalars['Boolean']>;
  spec?: Maybe<ProductSpec_Obj_Rel_Insert_Input>;
  spec_id?: Maybe<Scalars['bigint']>;
  thumbnail?: Maybe<Scalars['jsonb']>;
  type?: Maybe<Scalars['String']>;
  uid?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  variantData?: Maybe<Scalars['jsonb']>;
  weight?: Maybe<Scalars['float8']>;
};

/** aggregate max on columns */
export type Product_Max_Fields = {
  __typename?: 'product_max_fields';
  color?: Maybe<Scalars['String']>;
  colorCode?: Maybe<Scalars['String']>;
  colorName?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  customId?: Maybe<Scalars['String']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  instock?: Maybe<Scalars['Int']>;
  materials?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  orderQuota?: Maybe<Scalars['Int']>;
  ordering?: Maybe<Scalars['Int']>;
  price?: Maybe<Scalars['Int']>;
  priority?: Maybe<Scalars['Int']>;
  size?: Maybe<Scalars['String']>;
  sizeChart?: Maybe<Scalars['String']>;
  spec_id?: Maybe<Scalars['bigint']>;
  type?: Maybe<Scalars['String']>;
  uid?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  weight?: Maybe<Scalars['float8']>;
};

/** order by max() on columns of table "tbl_product" */
export type Product_Max_Order_By = {
  color?: Maybe<Order_By>;
  colorCode?: Maybe<Order_By>;
  colorName?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  customId?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  description?: Maybe<Order_By>;
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  instock?: Maybe<Order_By>;
  materials?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  nameEn?: Maybe<Order_By>;
  orderQuota?: Maybe<Order_By>;
  ordering?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
  size?: Maybe<Order_By>;
  sizeChart?: Maybe<Order_By>;
  spec_id?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  uid?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  weight?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Product_Min_Fields = {
  __typename?: 'product_min_fields';
  color?: Maybe<Scalars['String']>;
  colorCode?: Maybe<Scalars['String']>;
  colorName?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  customId?: Maybe<Scalars['String']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  instock?: Maybe<Scalars['Int']>;
  materials?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  orderQuota?: Maybe<Scalars['Int']>;
  ordering?: Maybe<Scalars['Int']>;
  price?: Maybe<Scalars['Int']>;
  priority?: Maybe<Scalars['Int']>;
  size?: Maybe<Scalars['String']>;
  sizeChart?: Maybe<Scalars['String']>;
  spec_id?: Maybe<Scalars['bigint']>;
  type?: Maybe<Scalars['String']>;
  uid?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  weight?: Maybe<Scalars['float8']>;
};

/** order by min() on columns of table "tbl_product" */
export type Product_Min_Order_By = {
  color?: Maybe<Order_By>;
  colorCode?: Maybe<Order_By>;
  colorName?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  customId?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  description?: Maybe<Order_By>;
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  instock?: Maybe<Order_By>;
  materials?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  nameEn?: Maybe<Order_By>;
  orderQuota?: Maybe<Order_By>;
  ordering?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
  size?: Maybe<Order_By>;
  sizeChart?: Maybe<Order_By>;
  spec_id?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  uid?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  weight?: Maybe<Order_By>;
};

/** response of any mutation on the table "tbl_product" */
export type Product_Mutation_Response = {
  __typename?: 'product_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Product>;
};

/** input type for inserting object relation for remote table "tbl_product" */
export type Product_Obj_Rel_Insert_Input = {
  data: Product_Insert_Input;
  /** on conflict condition */
  on_conflict?: Maybe<Product_On_Conflict>;
};

/** on conflict condition type for table "tbl_product" */
export type Product_On_Conflict = {
  constraint: Product_Constraint;
  update_columns: Array<Product_Update_Column>;
  where?: Maybe<Product_Bool_Exp>;
};

/** Ordering options when selecting data from "tbl_product". */
export type Product_Order_By = {
  carts_aggregate?: Maybe<CartProduct_Aggregate_Order_By>;
  color?: Maybe<Order_By>;
  colorCode?: Maybe<Order_By>;
  colorName?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  customId?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  description?: Maybe<Order_By>;
  disabled?: Maybe<Order_By>;
  group?: Maybe<ProductGroup_Order_By>;
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  instock?: Maybe<Order_By>;
  isLimit?: Maybe<Order_By>;
  materials?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  nameEn?: Maybe<Order_By>;
  orderQuota?: Maybe<Order_By>;
  ordering?: Maybe<Order_By>;
  orders_aggregate?: Maybe<OrderProduct_Aggregate_Order_By>;
  pictures?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
  privateVd?: Maybe<ProductPrivateVd_Order_By>;
  size?: Maybe<Order_By>;
  sizeChart?: Maybe<Order_By>;
  soldout?: Maybe<Order_By>;
  spec?: Maybe<ProductSpec_Order_By>;
  spec_id?: Maybe<Order_By>;
  thumbnail?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  uid?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  variantData?: Maybe<Order_By>;
  weight?: Maybe<Order_By>;
};

/** primary key columns input for table: product */
export type Product_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Product_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
  pictures?: Maybe<Scalars['jsonb']>;
  thumbnail?: Maybe<Scalars['jsonb']>;
  variantData?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "tbl_product" */
export enum Product_Select_Column {
  /** column name */
  Color = 'color',
  /** column name */
  ColorCode = 'colorCode',
  /** column name */
  ColorName = 'colorName',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CustomId = 'customId',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Description = 'description',
  /** column name */
  Disabled = 'disabled',
  /** column name */
  GroupId = 'group_id',
  /** column name */
  Id = 'id',
  /** column name */
  Instock = 'instock',
  /** column name */
  IsLimit = 'isLimit',
  /** column name */
  Materials = 'materials',
  /** column name */
  Name = 'name',
  /** column name */
  NameEn = 'nameEn',
  /** column name */
  OrderQuota = 'orderQuota',
  /** column name */
  Ordering = 'ordering',
  /** column name */
  Pictures = 'pictures',
  /** column name */
  Price = 'price',
  /** column name */
  Priority = 'priority',
  /** column name */
  Size = 'size',
  /** column name */
  SizeChart = 'sizeChart',
  /** column name */
  Soldout = 'soldout',
  /** column name */
  SpecId = 'spec_id',
  /** column name */
  Thumbnail = 'thumbnail',
  /** column name */
  Type = 'type',
  /** column name */
  Uid = 'uid',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  VariantData = 'variantData',
  /** column name */
  Weight = 'weight'
}

/** input type for updating data in table "tbl_product" */
export type Product_Set_Input = {
  color?: Maybe<Scalars['String']>;
  colorCode?: Maybe<Scalars['String']>;
  colorName?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  customId?: Maybe<Scalars['String']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  disabled?: Maybe<Scalars['Boolean']>;
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  instock?: Maybe<Scalars['Int']>;
  isLimit?: Maybe<Scalars['Boolean']>;
  materials?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  nameEn?: Maybe<Scalars['String']>;
  orderQuota?: Maybe<Scalars['Int']>;
  ordering?: Maybe<Scalars['Int']>;
  pictures?: Maybe<Scalars['jsonb']>;
  price?: Maybe<Scalars['Int']>;
  priority?: Maybe<Scalars['Int']>;
  size?: Maybe<Scalars['String']>;
  sizeChart?: Maybe<Scalars['String']>;
  soldout?: Maybe<Scalars['Boolean']>;
  spec_id?: Maybe<Scalars['bigint']>;
  thumbnail?: Maybe<Scalars['jsonb']>;
  type?: Maybe<Scalars['String']>;
  uid?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  variantData?: Maybe<Scalars['jsonb']>;
  weight?: Maybe<Scalars['float8']>;
};

/** aggregate stddev on columns */
export type Product_Stddev_Fields = {
  __typename?: 'product_stddev_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  instock?: Maybe<Scalars['Float']>;
  orderQuota?: Maybe<Scalars['Float']>;
  ordering?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
  spec_id?: Maybe<Scalars['Float']>;
  weight?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "tbl_product" */
export type Product_Stddev_Order_By = {
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  instock?: Maybe<Order_By>;
  orderQuota?: Maybe<Order_By>;
  ordering?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
  spec_id?: Maybe<Order_By>;
  weight?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Product_Stddev_Pop_Fields = {
  __typename?: 'product_stddev_pop_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  instock?: Maybe<Scalars['Float']>;
  orderQuota?: Maybe<Scalars['Float']>;
  ordering?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
  spec_id?: Maybe<Scalars['Float']>;
  weight?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "tbl_product" */
export type Product_Stddev_Pop_Order_By = {
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  instock?: Maybe<Order_By>;
  orderQuota?: Maybe<Order_By>;
  ordering?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
  spec_id?: Maybe<Order_By>;
  weight?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Product_Stddev_Samp_Fields = {
  __typename?: 'product_stddev_samp_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  instock?: Maybe<Scalars['Float']>;
  orderQuota?: Maybe<Scalars['Float']>;
  ordering?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
  spec_id?: Maybe<Scalars['Float']>;
  weight?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "tbl_product" */
export type Product_Stddev_Samp_Order_By = {
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  instock?: Maybe<Order_By>;
  orderQuota?: Maybe<Order_By>;
  ordering?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
  spec_id?: Maybe<Order_By>;
  weight?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Product_Sum_Fields = {
  __typename?: 'product_sum_fields';
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  instock?: Maybe<Scalars['Int']>;
  orderQuota?: Maybe<Scalars['Int']>;
  ordering?: Maybe<Scalars['Int']>;
  price?: Maybe<Scalars['Int']>;
  priority?: Maybe<Scalars['Int']>;
  spec_id?: Maybe<Scalars['bigint']>;
  weight?: Maybe<Scalars['float8']>;
};

/** order by sum() on columns of table "tbl_product" */
export type Product_Sum_Order_By = {
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  instock?: Maybe<Order_By>;
  orderQuota?: Maybe<Order_By>;
  ordering?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
  spec_id?: Maybe<Order_By>;
  weight?: Maybe<Order_By>;
};

/** update columns of table "tbl_product" */
export enum Product_Update_Column {
  /** column name */
  Color = 'color',
  /** column name */
  ColorCode = 'colorCode',
  /** column name */
  ColorName = 'colorName',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CustomId = 'customId',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Description = 'description',
  /** column name */
  Disabled = 'disabled',
  /** column name */
  GroupId = 'group_id',
  /** column name */
  Id = 'id',
  /** column name */
  Instock = 'instock',
  /** column name */
  IsLimit = 'isLimit',
  /** column name */
  Materials = 'materials',
  /** column name */
  Name = 'name',
  /** column name */
  NameEn = 'nameEn',
  /** column name */
  OrderQuota = 'orderQuota',
  /** column name */
  Ordering = 'ordering',
  /** column name */
  Pictures = 'pictures',
  /** column name */
  Price = 'price',
  /** column name */
  Priority = 'priority',
  /** column name */
  Size = 'size',
  /** column name */
  SizeChart = 'sizeChart',
  /** column name */
  Soldout = 'soldout',
  /** column name */
  SpecId = 'spec_id',
  /** column name */
  Thumbnail = 'thumbnail',
  /** column name */
  Type = 'type',
  /** column name */
  Uid = 'uid',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  VariantData = 'variantData',
  /** column name */
  Weight = 'weight'
}

/** aggregate var_pop on columns */
export type Product_Var_Pop_Fields = {
  __typename?: 'product_var_pop_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  instock?: Maybe<Scalars['Float']>;
  orderQuota?: Maybe<Scalars['Float']>;
  ordering?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
  spec_id?: Maybe<Scalars['Float']>;
  weight?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "tbl_product" */
export type Product_Var_Pop_Order_By = {
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  instock?: Maybe<Order_By>;
  orderQuota?: Maybe<Order_By>;
  ordering?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
  spec_id?: Maybe<Order_By>;
  weight?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Product_Var_Samp_Fields = {
  __typename?: 'product_var_samp_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  instock?: Maybe<Scalars['Float']>;
  orderQuota?: Maybe<Scalars['Float']>;
  ordering?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
  spec_id?: Maybe<Scalars['Float']>;
  weight?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "tbl_product" */
export type Product_Var_Samp_Order_By = {
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  instock?: Maybe<Order_By>;
  orderQuota?: Maybe<Order_By>;
  ordering?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
  spec_id?: Maybe<Order_By>;
  weight?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Product_Variance_Fields = {
  __typename?: 'product_variance_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  instock?: Maybe<Scalars['Float']>;
  orderQuota?: Maybe<Scalars['Float']>;
  ordering?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
  spec_id?: Maybe<Scalars['Float']>;
  weight?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "tbl_product" */
export type Product_Variance_Order_By = {
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  instock?: Maybe<Order_By>;
  orderQuota?: Maybe<Order_By>;
  ordering?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
  spec_id?: Maybe<Order_By>;
  weight?: Maybe<Order_By>;
};

/** columns and relationships of "tbl_project" */
export type Project = {
  __typename?: 'project';
  created_at: Scalars['timestamptz'];
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id: Scalars['bigint'];
  /** An array relationship */
  invitees: Array<ProjectInvitation>;
  /** An aggregate relationship */
  invitees_aggregate: ProjectInvitation_Aggregate;
  name?: Maybe<Scalars['String']>;
  /** An object relationship */
  organization: Organization;
  organization_id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  privateVd?: Maybe<ProjectPrivateVd>;
  type?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
  /** An array relationship */
  users: Array<UserProject>;
  /** An aggregate relationship */
  users_aggregate: UserProject_Aggregate;
};


/** columns and relationships of "tbl_project" */
export type ProjectDataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "tbl_project" */
export type ProjectInviteesArgs = {
  distinct_on?: Maybe<Array<ProjectInvitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProjectInvitation_Order_By>>;
  where?: Maybe<ProjectInvitation_Bool_Exp>;
};


/** columns and relationships of "tbl_project" */
export type ProjectInvitees_AggregateArgs = {
  distinct_on?: Maybe<Array<ProjectInvitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProjectInvitation_Order_By>>;
  where?: Maybe<ProjectInvitation_Bool_Exp>;
};


/** columns and relationships of "tbl_project" */
export type ProjectUsersArgs = {
  distinct_on?: Maybe<Array<UserProject_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserProject_Order_By>>;
  where?: Maybe<UserProject_Bool_Exp>;
};


/** columns and relationships of "tbl_project" */
export type ProjectUsers_AggregateArgs = {
  distinct_on?: Maybe<Array<UserProject_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserProject_Order_By>>;
  where?: Maybe<UserProject_Bool_Exp>;
};

/** columns and relationships of "mn_project_invitation" */
export type ProjectInvitation = {
  __typename?: 'projectInvitation';
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id: Scalars['bigint'];
  /** An object relationship */
  invitee: User;
  invitee_id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  inviter: User;
  inviter_id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  privateVd?: Maybe<ProjectInvitationPrivateVd>;
  /** An object relationship */
  project: Project;
  project_id?: Maybe<Scalars['bigint']>;
  state?: Maybe<Scalars['Int']>;
  updated_at: Scalars['timestamptz'];
};

/** columns and relationships of "view_project_invitation_private_vd" */
export type ProjectInvitationPrivateVd = {
  __typename?: 'projectInvitationPrivateVd';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  invitee?: Maybe<User>;
  invitee_id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  inviter?: Maybe<User>;
  inviter_id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  project?: Maybe<Project>;
  project_id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  publicData?: Maybe<ProjectInvitation>;
  state?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregated selection of "view_project_invitation_private_vd" */
export type ProjectInvitationPrivateVd_Aggregate = {
  __typename?: 'projectInvitationPrivateVd_aggregate';
  aggregate?: Maybe<ProjectInvitationPrivateVd_Aggregate_Fields>;
  nodes: Array<ProjectInvitationPrivateVd>;
};

/** aggregate fields of "view_project_invitation_private_vd" */
export type ProjectInvitationPrivateVd_Aggregate_Fields = {
  __typename?: 'projectInvitationPrivateVd_aggregate_fields';
  avg?: Maybe<ProjectInvitationPrivateVd_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<ProjectInvitationPrivateVd_Max_Fields>;
  min?: Maybe<ProjectInvitationPrivateVd_Min_Fields>;
  stddev?: Maybe<ProjectInvitationPrivateVd_Stddev_Fields>;
  stddev_pop?: Maybe<ProjectInvitationPrivateVd_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ProjectInvitationPrivateVd_Stddev_Samp_Fields>;
  sum?: Maybe<ProjectInvitationPrivateVd_Sum_Fields>;
  var_pop?: Maybe<ProjectInvitationPrivateVd_Var_Pop_Fields>;
  var_samp?: Maybe<ProjectInvitationPrivateVd_Var_Samp_Fields>;
  variance?: Maybe<ProjectInvitationPrivateVd_Variance_Fields>;
};


/** aggregate fields of "view_project_invitation_private_vd" */
export type ProjectInvitationPrivateVd_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<ProjectInvitationPrivateVd_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type ProjectInvitationPrivateVd_Avg_Fields = {
  __typename?: 'projectInvitationPrivateVd_avg_fields';
  id?: Maybe<Scalars['Float']>;
  invitee_id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  project_id?: Maybe<Scalars['Float']>;
  state?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "view_project_invitation_private_vd". All fields are combined with a logical 'AND'. */
export type ProjectInvitationPrivateVd_Bool_Exp = {
  _and?: Maybe<Array<ProjectInvitationPrivateVd_Bool_Exp>>;
  _not?: Maybe<ProjectInvitationPrivateVd_Bool_Exp>;
  _or?: Maybe<Array<ProjectInvitationPrivateVd_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  invitee?: Maybe<User_Bool_Exp>;
  invitee_id?: Maybe<Bigint_Comparison_Exp>;
  inviter?: Maybe<User_Bool_Exp>;
  inviter_id?: Maybe<Bigint_Comparison_Exp>;
  project?: Maybe<Project_Bool_Exp>;
  project_id?: Maybe<Bigint_Comparison_Exp>;
  publicData?: Maybe<ProjectInvitation_Bool_Exp>;
  state?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** input type for incrementing numeric columns in table "view_project_invitation_private_vd" */
export type ProjectInvitationPrivateVd_Inc_Input = {
  id?: Maybe<Scalars['bigint']>;
  invitee_id?: Maybe<Scalars['bigint']>;
  inviter_id?: Maybe<Scalars['bigint']>;
  project_id?: Maybe<Scalars['bigint']>;
  state?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "view_project_invitation_private_vd" */
export type ProjectInvitationPrivateVd_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  invitee?: Maybe<User_Obj_Rel_Insert_Input>;
  invitee_id?: Maybe<Scalars['bigint']>;
  inviter?: Maybe<User_Obj_Rel_Insert_Input>;
  inviter_id?: Maybe<Scalars['bigint']>;
  project?: Maybe<Project_Obj_Rel_Insert_Input>;
  project_id?: Maybe<Scalars['bigint']>;
  publicData?: Maybe<ProjectInvitation_Obj_Rel_Insert_Input>;
  state?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type ProjectInvitationPrivateVd_Max_Fields = {
  __typename?: 'projectInvitationPrivateVd_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  invitee_id?: Maybe<Scalars['bigint']>;
  inviter_id?: Maybe<Scalars['bigint']>;
  project_id?: Maybe<Scalars['bigint']>;
  state?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type ProjectInvitationPrivateVd_Min_Fields = {
  __typename?: 'projectInvitationPrivateVd_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  invitee_id?: Maybe<Scalars['bigint']>;
  inviter_id?: Maybe<Scalars['bigint']>;
  project_id?: Maybe<Scalars['bigint']>;
  state?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "view_project_invitation_private_vd" */
export type ProjectInvitationPrivateVd_Mutation_Response = {
  __typename?: 'projectInvitationPrivateVd_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<ProjectInvitationPrivateVd>;
};

/** input type for inserting object relation for remote table "view_project_invitation_private_vd" */
export type ProjectInvitationPrivateVd_Obj_Rel_Insert_Input = {
  data: ProjectInvitationPrivateVd_Insert_Input;
};

/** Ordering options when selecting data from "view_project_invitation_private_vd". */
export type ProjectInvitationPrivateVd_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  invitee?: Maybe<User_Order_By>;
  invitee_id?: Maybe<Order_By>;
  inviter?: Maybe<User_Order_By>;
  inviter_id?: Maybe<Order_By>;
  project?: Maybe<Project_Order_By>;
  project_id?: Maybe<Order_By>;
  publicData?: Maybe<ProjectInvitation_Order_By>;
  state?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** select columns of table "view_project_invitation_private_vd" */
export enum ProjectInvitationPrivateVd_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  InviteeId = 'invitee_id',
  /** column name */
  InviterId = 'inviter_id',
  /** column name */
  ProjectId = 'project_id',
  /** column name */
  State = 'state',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "view_project_invitation_private_vd" */
export type ProjectInvitationPrivateVd_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  invitee_id?: Maybe<Scalars['bigint']>;
  inviter_id?: Maybe<Scalars['bigint']>;
  project_id?: Maybe<Scalars['bigint']>;
  state?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type ProjectInvitationPrivateVd_Stddev_Fields = {
  __typename?: 'projectInvitationPrivateVd_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  invitee_id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  project_id?: Maybe<Scalars['Float']>;
  state?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type ProjectInvitationPrivateVd_Stddev_Pop_Fields = {
  __typename?: 'projectInvitationPrivateVd_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  invitee_id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  project_id?: Maybe<Scalars['Float']>;
  state?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type ProjectInvitationPrivateVd_Stddev_Samp_Fields = {
  __typename?: 'projectInvitationPrivateVd_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  invitee_id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  project_id?: Maybe<Scalars['Float']>;
  state?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type ProjectInvitationPrivateVd_Sum_Fields = {
  __typename?: 'projectInvitationPrivateVd_sum_fields';
  id?: Maybe<Scalars['bigint']>;
  invitee_id?: Maybe<Scalars['bigint']>;
  inviter_id?: Maybe<Scalars['bigint']>;
  project_id?: Maybe<Scalars['bigint']>;
  state?: Maybe<Scalars['Int']>;
};

/** aggregate var_pop on columns */
export type ProjectInvitationPrivateVd_Var_Pop_Fields = {
  __typename?: 'projectInvitationPrivateVd_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  invitee_id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  project_id?: Maybe<Scalars['Float']>;
  state?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type ProjectInvitationPrivateVd_Var_Samp_Fields = {
  __typename?: 'projectInvitationPrivateVd_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  invitee_id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  project_id?: Maybe<Scalars['Float']>;
  state?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type ProjectInvitationPrivateVd_Variance_Fields = {
  __typename?: 'projectInvitationPrivateVd_variance_fields';
  id?: Maybe<Scalars['Float']>;
  invitee_id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  project_id?: Maybe<Scalars['Float']>;
  state?: Maybe<Scalars['Float']>;
};

/** aggregated selection of "mn_project_invitation" */
export type ProjectInvitation_Aggregate = {
  __typename?: 'projectInvitation_aggregate';
  aggregate?: Maybe<ProjectInvitation_Aggregate_Fields>;
  nodes: Array<ProjectInvitation>;
};

/** aggregate fields of "mn_project_invitation" */
export type ProjectInvitation_Aggregate_Fields = {
  __typename?: 'projectInvitation_aggregate_fields';
  avg?: Maybe<ProjectInvitation_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<ProjectInvitation_Max_Fields>;
  min?: Maybe<ProjectInvitation_Min_Fields>;
  stddev?: Maybe<ProjectInvitation_Stddev_Fields>;
  stddev_pop?: Maybe<ProjectInvitation_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ProjectInvitation_Stddev_Samp_Fields>;
  sum?: Maybe<ProjectInvitation_Sum_Fields>;
  var_pop?: Maybe<ProjectInvitation_Var_Pop_Fields>;
  var_samp?: Maybe<ProjectInvitation_Var_Samp_Fields>;
  variance?: Maybe<ProjectInvitation_Variance_Fields>;
};


/** aggregate fields of "mn_project_invitation" */
export type ProjectInvitation_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<ProjectInvitation_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "mn_project_invitation" */
export type ProjectInvitation_Aggregate_Order_By = {
  avg?: Maybe<ProjectInvitation_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<ProjectInvitation_Max_Order_By>;
  min?: Maybe<ProjectInvitation_Min_Order_By>;
  stddev?: Maybe<ProjectInvitation_Stddev_Order_By>;
  stddev_pop?: Maybe<ProjectInvitation_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<ProjectInvitation_Stddev_Samp_Order_By>;
  sum?: Maybe<ProjectInvitation_Sum_Order_By>;
  var_pop?: Maybe<ProjectInvitation_Var_Pop_Order_By>;
  var_samp?: Maybe<ProjectInvitation_Var_Samp_Order_By>;
  variance?: Maybe<ProjectInvitation_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "mn_project_invitation" */
export type ProjectInvitation_Arr_Rel_Insert_Input = {
  data: Array<ProjectInvitation_Insert_Input>;
  /** on conflict condition */
  on_conflict?: Maybe<ProjectInvitation_On_Conflict>;
};

/** aggregate avg on columns */
export type ProjectInvitation_Avg_Fields = {
  __typename?: 'projectInvitation_avg_fields';
  id?: Maybe<Scalars['Float']>;
  invitee_id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  project_id?: Maybe<Scalars['Float']>;
  state?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "mn_project_invitation" */
export type ProjectInvitation_Avg_Order_By = {
  id?: Maybe<Order_By>;
  invitee_id?: Maybe<Order_By>;
  inviter_id?: Maybe<Order_By>;
  project_id?: Maybe<Order_By>;
  state?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "mn_project_invitation". All fields are combined with a logical 'AND'. */
export type ProjectInvitation_Bool_Exp = {
  _and?: Maybe<Array<ProjectInvitation_Bool_Exp>>;
  _not?: Maybe<ProjectInvitation_Bool_Exp>;
  _or?: Maybe<Array<ProjectInvitation_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  invitee?: Maybe<User_Bool_Exp>;
  invitee_id?: Maybe<Bigint_Comparison_Exp>;
  inviter?: Maybe<User_Bool_Exp>;
  inviter_id?: Maybe<Bigint_Comparison_Exp>;
  privateVd?: Maybe<ProjectInvitationPrivateVd_Bool_Exp>;
  project?: Maybe<Project_Bool_Exp>;
  project_id?: Maybe<Bigint_Comparison_Exp>;
  state?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "mn_project_invitation" */
export enum ProjectInvitation_Constraint {
  /** unique or primary key constraint */
  MnProjectInvitationPkey = 'mn_project_invitation_pkey',
  /** unique or primary key constraint */
  ProjectOnlyInviteOnce = 'project_only_invite_once'
}

/** input type for incrementing numeric columns in table "mn_project_invitation" */
export type ProjectInvitation_Inc_Input = {
  id?: Maybe<Scalars['bigint']>;
  invitee_id?: Maybe<Scalars['bigint']>;
  inviter_id?: Maybe<Scalars['bigint']>;
  project_id?: Maybe<Scalars['bigint']>;
  state?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "mn_project_invitation" */
export type ProjectInvitation_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  invitee?: Maybe<User_Obj_Rel_Insert_Input>;
  invitee_id?: Maybe<Scalars['bigint']>;
  inviter?: Maybe<User_Obj_Rel_Insert_Input>;
  inviter_id?: Maybe<Scalars['bigint']>;
  privateVd?: Maybe<ProjectInvitationPrivateVd_Obj_Rel_Insert_Input>;
  project?: Maybe<Project_Obj_Rel_Insert_Input>;
  project_id?: Maybe<Scalars['bigint']>;
  state?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type ProjectInvitation_Max_Fields = {
  __typename?: 'projectInvitation_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  invitee_id?: Maybe<Scalars['bigint']>;
  inviter_id?: Maybe<Scalars['bigint']>;
  project_id?: Maybe<Scalars['bigint']>;
  state?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "mn_project_invitation" */
export type ProjectInvitation_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  invitee_id?: Maybe<Order_By>;
  inviter_id?: Maybe<Order_By>;
  project_id?: Maybe<Order_By>;
  state?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type ProjectInvitation_Min_Fields = {
  __typename?: 'projectInvitation_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  invitee_id?: Maybe<Scalars['bigint']>;
  inviter_id?: Maybe<Scalars['bigint']>;
  project_id?: Maybe<Scalars['bigint']>;
  state?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "mn_project_invitation" */
export type ProjectInvitation_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  invitee_id?: Maybe<Order_By>;
  inviter_id?: Maybe<Order_By>;
  project_id?: Maybe<Order_By>;
  state?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "mn_project_invitation" */
export type ProjectInvitation_Mutation_Response = {
  __typename?: 'projectInvitation_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<ProjectInvitation>;
};

/** input type for inserting object relation for remote table "mn_project_invitation" */
export type ProjectInvitation_Obj_Rel_Insert_Input = {
  data: ProjectInvitation_Insert_Input;
  /** on conflict condition */
  on_conflict?: Maybe<ProjectInvitation_On_Conflict>;
};

/** on conflict condition type for table "mn_project_invitation" */
export type ProjectInvitation_On_Conflict = {
  constraint: ProjectInvitation_Constraint;
  update_columns: Array<ProjectInvitation_Update_Column>;
  where?: Maybe<ProjectInvitation_Bool_Exp>;
};

/** Ordering options when selecting data from "mn_project_invitation". */
export type ProjectInvitation_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  invitee?: Maybe<User_Order_By>;
  invitee_id?: Maybe<Order_By>;
  inviter?: Maybe<User_Order_By>;
  inviter_id?: Maybe<Order_By>;
  privateVd?: Maybe<ProjectInvitationPrivateVd_Order_By>;
  project?: Maybe<Project_Order_By>;
  project_id?: Maybe<Order_By>;
  state?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: projectInvitation */
export type ProjectInvitation_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** select columns of table "mn_project_invitation" */
export enum ProjectInvitation_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  InviteeId = 'invitee_id',
  /** column name */
  InviterId = 'inviter_id',
  /** column name */
  ProjectId = 'project_id',
  /** column name */
  State = 'state',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "mn_project_invitation" */
export type ProjectInvitation_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  invitee_id?: Maybe<Scalars['bigint']>;
  inviter_id?: Maybe<Scalars['bigint']>;
  project_id?: Maybe<Scalars['bigint']>;
  state?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type ProjectInvitation_Stddev_Fields = {
  __typename?: 'projectInvitation_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  invitee_id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  project_id?: Maybe<Scalars['Float']>;
  state?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "mn_project_invitation" */
export type ProjectInvitation_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  invitee_id?: Maybe<Order_By>;
  inviter_id?: Maybe<Order_By>;
  project_id?: Maybe<Order_By>;
  state?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type ProjectInvitation_Stddev_Pop_Fields = {
  __typename?: 'projectInvitation_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  invitee_id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  project_id?: Maybe<Scalars['Float']>;
  state?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "mn_project_invitation" */
export type ProjectInvitation_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  invitee_id?: Maybe<Order_By>;
  inviter_id?: Maybe<Order_By>;
  project_id?: Maybe<Order_By>;
  state?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type ProjectInvitation_Stddev_Samp_Fields = {
  __typename?: 'projectInvitation_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  invitee_id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  project_id?: Maybe<Scalars['Float']>;
  state?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "mn_project_invitation" */
export type ProjectInvitation_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  invitee_id?: Maybe<Order_By>;
  inviter_id?: Maybe<Order_By>;
  project_id?: Maybe<Order_By>;
  state?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type ProjectInvitation_Sum_Fields = {
  __typename?: 'projectInvitation_sum_fields';
  id?: Maybe<Scalars['bigint']>;
  invitee_id?: Maybe<Scalars['bigint']>;
  inviter_id?: Maybe<Scalars['bigint']>;
  project_id?: Maybe<Scalars['bigint']>;
  state?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "mn_project_invitation" */
export type ProjectInvitation_Sum_Order_By = {
  id?: Maybe<Order_By>;
  invitee_id?: Maybe<Order_By>;
  inviter_id?: Maybe<Order_By>;
  project_id?: Maybe<Order_By>;
  state?: Maybe<Order_By>;
};

/** update columns of table "mn_project_invitation" */
export enum ProjectInvitation_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  InviteeId = 'invitee_id',
  /** column name */
  InviterId = 'inviter_id',
  /** column name */
  ProjectId = 'project_id',
  /** column name */
  State = 'state',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type ProjectInvitation_Var_Pop_Fields = {
  __typename?: 'projectInvitation_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  invitee_id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  project_id?: Maybe<Scalars['Float']>;
  state?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "mn_project_invitation" */
export type ProjectInvitation_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  invitee_id?: Maybe<Order_By>;
  inviter_id?: Maybe<Order_By>;
  project_id?: Maybe<Order_By>;
  state?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type ProjectInvitation_Var_Samp_Fields = {
  __typename?: 'projectInvitation_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  invitee_id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  project_id?: Maybe<Scalars['Float']>;
  state?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "mn_project_invitation" */
export type ProjectInvitation_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  invitee_id?: Maybe<Order_By>;
  inviter_id?: Maybe<Order_By>;
  project_id?: Maybe<Order_By>;
  state?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type ProjectInvitation_Variance_Fields = {
  __typename?: 'projectInvitation_variance_fields';
  id?: Maybe<Scalars['Float']>;
  invitee_id?: Maybe<Scalars['Float']>;
  inviter_id?: Maybe<Scalars['Float']>;
  project_id?: Maybe<Scalars['Float']>;
  state?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "mn_project_invitation" */
export type ProjectInvitation_Variance_Order_By = {
  id?: Maybe<Order_By>;
  invitee_id?: Maybe<Order_By>;
  inviter_id?: Maybe<Order_By>;
  project_id?: Maybe<Order_By>;
  state?: Maybe<Order_By>;
};

/** columns and relationships of "view_project_private_vd" */
export type ProjectPrivateVd = {
  __typename?: 'projectPrivateVd';
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  organization?: Maybe<Organization>;
  organization_id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  publicData?: Maybe<Project>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  /** An array relationship */
  users: Array<UserProject>;
  /** An aggregate relationship */
  users_aggregate: UserProject_Aggregate;
};


/** columns and relationships of "view_project_private_vd" */
export type ProjectPrivateVdDataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "view_project_private_vd" */
export type ProjectPrivateVdUsersArgs = {
  distinct_on?: Maybe<Array<UserProject_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserProject_Order_By>>;
  where?: Maybe<UserProject_Bool_Exp>;
};


/** columns and relationships of "view_project_private_vd" */
export type ProjectPrivateVdUsers_AggregateArgs = {
  distinct_on?: Maybe<Array<UserProject_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserProject_Order_By>>;
  where?: Maybe<UserProject_Bool_Exp>;
};

/** aggregated selection of "view_project_private_vd" */
export type ProjectPrivateVd_Aggregate = {
  __typename?: 'projectPrivateVd_aggregate';
  aggregate?: Maybe<ProjectPrivateVd_Aggregate_Fields>;
  nodes: Array<ProjectPrivateVd>;
};

/** aggregate fields of "view_project_private_vd" */
export type ProjectPrivateVd_Aggregate_Fields = {
  __typename?: 'projectPrivateVd_aggregate_fields';
  avg?: Maybe<ProjectPrivateVd_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<ProjectPrivateVd_Max_Fields>;
  min?: Maybe<ProjectPrivateVd_Min_Fields>;
  stddev?: Maybe<ProjectPrivateVd_Stddev_Fields>;
  stddev_pop?: Maybe<ProjectPrivateVd_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ProjectPrivateVd_Stddev_Samp_Fields>;
  sum?: Maybe<ProjectPrivateVd_Sum_Fields>;
  var_pop?: Maybe<ProjectPrivateVd_Var_Pop_Fields>;
  var_samp?: Maybe<ProjectPrivateVd_Var_Samp_Fields>;
  variance?: Maybe<ProjectPrivateVd_Variance_Fields>;
};


/** aggregate fields of "view_project_private_vd" */
export type ProjectPrivateVd_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<ProjectPrivateVd_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type ProjectPrivateVd_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type ProjectPrivateVd_Avg_Fields = {
  __typename?: 'projectPrivateVd_avg_fields';
  id?: Maybe<Scalars['Float']>;
  organization_id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "view_project_private_vd". All fields are combined with a logical 'AND'. */
export type ProjectPrivateVd_Bool_Exp = {
  _and?: Maybe<Array<ProjectPrivateVd_Bool_Exp>>;
  _not?: Maybe<ProjectPrivateVd_Bool_Exp>;
  _or?: Maybe<Array<ProjectPrivateVd_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  organization?: Maybe<Organization_Bool_Exp>;
  organization_id?: Maybe<Bigint_Comparison_Exp>;
  publicData?: Maybe<Project_Bool_Exp>;
  type?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  users?: Maybe<UserProject_Bool_Exp>;
};

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type ProjectPrivateVd_Delete_At_Path_Input = {
  data?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type ProjectPrivateVd_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type ProjectPrivateVd_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "view_project_private_vd" */
export type ProjectPrivateVd_Inc_Input = {
  id?: Maybe<Scalars['bigint']>;
  organization_id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "view_project_private_vd" */
export type ProjectPrivateVd_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  organization?: Maybe<Organization_Obj_Rel_Insert_Input>;
  organization_id?: Maybe<Scalars['bigint']>;
  publicData?: Maybe<Project_Obj_Rel_Insert_Input>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  users?: Maybe<UserProject_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type ProjectPrivateVd_Max_Fields = {
  __typename?: 'projectPrivateVd_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  organization_id?: Maybe<Scalars['bigint']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type ProjectPrivateVd_Min_Fields = {
  __typename?: 'projectPrivateVd_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  organization_id?: Maybe<Scalars['bigint']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "view_project_private_vd" */
export type ProjectPrivateVd_Mutation_Response = {
  __typename?: 'projectPrivateVd_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<ProjectPrivateVd>;
};

/** input type for inserting object relation for remote table "view_project_private_vd" */
export type ProjectPrivateVd_Obj_Rel_Insert_Input = {
  data: ProjectPrivateVd_Insert_Input;
};

/** Ordering options when selecting data from "view_project_private_vd". */
export type ProjectPrivateVd_Order_By = {
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  organization?: Maybe<Organization_Order_By>;
  organization_id?: Maybe<Order_By>;
  publicData?: Maybe<Project_Order_By>;
  type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  users_aggregate?: Maybe<UserProject_Aggregate_Order_By>;
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type ProjectPrivateVd_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "view_project_private_vd" */
export enum ProjectPrivateVd_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  OrganizationId = 'organization_id',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "view_project_private_vd" */
export type ProjectPrivateVd_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  organization_id?: Maybe<Scalars['bigint']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type ProjectPrivateVd_Stddev_Fields = {
  __typename?: 'projectPrivateVd_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  organization_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type ProjectPrivateVd_Stddev_Pop_Fields = {
  __typename?: 'projectPrivateVd_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  organization_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type ProjectPrivateVd_Stddev_Samp_Fields = {
  __typename?: 'projectPrivateVd_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  organization_id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type ProjectPrivateVd_Sum_Fields = {
  __typename?: 'projectPrivateVd_sum_fields';
  id?: Maybe<Scalars['bigint']>;
  organization_id?: Maybe<Scalars['bigint']>;
};

/** aggregate var_pop on columns */
export type ProjectPrivateVd_Var_Pop_Fields = {
  __typename?: 'projectPrivateVd_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  organization_id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type ProjectPrivateVd_Var_Samp_Fields = {
  __typename?: 'projectPrivateVd_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  organization_id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type ProjectPrivateVd_Variance_Fields = {
  __typename?: 'projectPrivateVd_variance_fields';
  id?: Maybe<Scalars['Float']>;
  organization_id?: Maybe<Scalars['Float']>;
};

/** aggregated selection of "tbl_project" */
export type Project_Aggregate = {
  __typename?: 'project_aggregate';
  aggregate?: Maybe<Project_Aggregate_Fields>;
  nodes: Array<Project>;
};

/** aggregate fields of "tbl_project" */
export type Project_Aggregate_Fields = {
  __typename?: 'project_aggregate_fields';
  avg?: Maybe<Project_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Project_Max_Fields>;
  min?: Maybe<Project_Min_Fields>;
  stddev?: Maybe<Project_Stddev_Fields>;
  stddev_pop?: Maybe<Project_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Project_Stddev_Samp_Fields>;
  sum?: Maybe<Project_Sum_Fields>;
  var_pop?: Maybe<Project_Var_Pop_Fields>;
  var_samp?: Maybe<Project_Var_Samp_Fields>;
  variance?: Maybe<Project_Variance_Fields>;
};


/** aggregate fields of "tbl_project" */
export type Project_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Project_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "tbl_project" */
export type Project_Aggregate_Order_By = {
  avg?: Maybe<Project_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Project_Max_Order_By>;
  min?: Maybe<Project_Min_Order_By>;
  stddev?: Maybe<Project_Stddev_Order_By>;
  stddev_pop?: Maybe<Project_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Project_Stddev_Samp_Order_By>;
  sum?: Maybe<Project_Sum_Order_By>;
  var_pop?: Maybe<Project_Var_Pop_Order_By>;
  var_samp?: Maybe<Project_Var_Samp_Order_By>;
  variance?: Maybe<Project_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Project_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "tbl_project" */
export type Project_Arr_Rel_Insert_Input = {
  data: Array<Project_Insert_Input>;
  /** on conflict condition */
  on_conflict?: Maybe<Project_On_Conflict>;
};

/** aggregate avg on columns */
export type Project_Avg_Fields = {
  __typename?: 'project_avg_fields';
  id?: Maybe<Scalars['Float']>;
  organization_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "tbl_project" */
export type Project_Avg_Order_By = {
  id?: Maybe<Order_By>;
  organization_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "tbl_project". All fields are combined with a logical 'AND'. */
export type Project_Bool_Exp = {
  _and?: Maybe<Array<Project_Bool_Exp>>;
  _not?: Maybe<Project_Bool_Exp>;
  _or?: Maybe<Array<Project_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  invitees?: Maybe<ProjectInvitation_Bool_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  organization?: Maybe<Organization_Bool_Exp>;
  organization_id?: Maybe<Bigint_Comparison_Exp>;
  privateVd?: Maybe<ProjectPrivateVd_Bool_Exp>;
  type?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  users?: Maybe<UserProject_Bool_Exp>;
};

/** unique or primary key constraints on table "tbl_project" */
export enum Project_Constraint {
  /** unique or primary key constraint */
  TblProjectPkey = 'tbl_project_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Project_Delete_At_Path_Input = {
  data?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Project_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Project_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "tbl_project" */
export type Project_Inc_Input = {
  id?: Maybe<Scalars['bigint']>;
  organization_id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "tbl_project" */
export type Project_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  invitees?: Maybe<ProjectInvitation_Arr_Rel_Insert_Input>;
  name?: Maybe<Scalars['String']>;
  organization?: Maybe<Organization_Obj_Rel_Insert_Input>;
  organization_id?: Maybe<Scalars['bigint']>;
  privateVd?: Maybe<ProjectPrivateVd_Obj_Rel_Insert_Input>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  users?: Maybe<UserProject_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Project_Max_Fields = {
  __typename?: 'project_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  name?: Maybe<Scalars['String']>;
  organization_id?: Maybe<Scalars['bigint']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "tbl_project" */
export type Project_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  organization_id?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Project_Min_Fields = {
  __typename?: 'project_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  name?: Maybe<Scalars['String']>;
  organization_id?: Maybe<Scalars['bigint']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "tbl_project" */
export type Project_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  organization_id?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "tbl_project" */
export type Project_Mutation_Response = {
  __typename?: 'project_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Project>;
};

/** input type for inserting object relation for remote table "tbl_project" */
export type Project_Obj_Rel_Insert_Input = {
  data: Project_Insert_Input;
  /** on conflict condition */
  on_conflict?: Maybe<Project_On_Conflict>;
};

/** on conflict condition type for table "tbl_project" */
export type Project_On_Conflict = {
  constraint: Project_Constraint;
  update_columns: Array<Project_Update_Column>;
  where?: Maybe<Project_Bool_Exp>;
};

/** Ordering options when selecting data from "tbl_project". */
export type Project_Order_By = {
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  invitees_aggregate?: Maybe<ProjectInvitation_Aggregate_Order_By>;
  name?: Maybe<Order_By>;
  organization?: Maybe<Organization_Order_By>;
  organization_id?: Maybe<Order_By>;
  privateVd?: Maybe<ProjectPrivateVd_Order_By>;
  type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  users_aggregate?: Maybe<UserProject_Aggregate_Order_By>;
};

/** primary key columns input for table: project */
export type Project_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Project_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "tbl_project" */
export enum Project_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  OrganizationId = 'organization_id',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "tbl_project" */
export type Project_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  name?: Maybe<Scalars['String']>;
  organization_id?: Maybe<Scalars['bigint']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Project_Stddev_Fields = {
  __typename?: 'project_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  organization_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "tbl_project" */
export type Project_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  organization_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Project_Stddev_Pop_Fields = {
  __typename?: 'project_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  organization_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "tbl_project" */
export type Project_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  organization_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Project_Stddev_Samp_Fields = {
  __typename?: 'project_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  organization_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "tbl_project" */
export type Project_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  organization_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Project_Sum_Fields = {
  __typename?: 'project_sum_fields';
  id?: Maybe<Scalars['bigint']>;
  organization_id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "tbl_project" */
export type Project_Sum_Order_By = {
  id?: Maybe<Order_By>;
  organization_id?: Maybe<Order_By>;
};

/** update columns of table "tbl_project" */
export enum Project_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  OrganizationId = 'organization_id',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Project_Var_Pop_Fields = {
  __typename?: 'project_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  organization_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "tbl_project" */
export type Project_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  organization_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Project_Var_Samp_Fields = {
  __typename?: 'project_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  organization_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "tbl_project" */
export type Project_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  organization_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Project_Variance_Fields = {
  __typename?: 'project_variance_fields';
  id?: Maybe<Scalars['Float']>;
  organization_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "tbl_project" */
export type Project_Variance_Order_By = {
  id?: Maybe<Order_By>;
  organization_id?: Maybe<Order_By>;
};

export type Query_Root = {
  __typename?: 'query_root';
  /** fetch data from the table: "tbl_account_link" using primary key columns */
  accountLink?: Maybe<AccountLink>;
  /** fetch aggregated fields from the table: "tbl_account_link" */
  accountLinkAggregate: AccountLink_Aggregate;
  /** fetch aggregated fields from the table: "view_account_link_private_vd" */
  accountLinkPrivateVdAggregate: AccountLinkPrivateVd_Aggregate;
  /** fetch data from the table: "view_account_link_private_vd" */
  accountLinkPrivateVds: Array<AccountLinkPrivateVd>;
  /** An array relationship */
  accountLinks: Array<AccountLink>;
  /** fetch data from the table: "tbl_browser_session" using primary key columns */
  browserSession?: Maybe<BrowserSession>;
  /** fetch aggregated fields from the table: "tbl_browser_session" */
  browserSessionAggregate: BrowserSession_Aggregate;
  /** An array relationship */
  browserSessions: Array<BrowserSession>;
  /** fetch data from the table: "tbl_buyer_info" using primary key columns */
  buyerInfo?: Maybe<BuyerInfo>;
  /** fetch aggregated fields from the table: "tbl_buyer_info" */
  buyerInfoAggregate: BuyerInfo_Aggregate;
  /** fetch aggregated fields from the table: "view_buyer_info_private_vd" */
  buyerInfoPrivateVdAggregate: BuyerInfoPrivateVd_Aggregate;
  /** fetch data from the table: "view_buyer_info_private_vd" */
  buyerInfoPrivateVds: Array<BuyerInfoPrivateVd>;
  /** An array relationship */
  buyerInfos: Array<BuyerInfo>;
  /** fetch data from the table: "tbl_campaign" using primary key columns */
  campaign?: Maybe<Campaign>;
  /** fetch aggregated fields from the table: "tbl_campaign" */
  campaignAggregate: Campaign_Aggregate;
  /** fetch aggregated fields from the table: "view_campaign_private_vd" */
  campaignPrivateVdAggregate: CampaignPrivateVd_Aggregate;
  /** fetch data from the table: "view_campaign_private_vd" */
  campaignPrivateVds: Array<CampaignPrivateVd>;
  /** fetch data from the table: "tbl_campaign" */
  campaigns: Array<Campaign>;
  /** fetch data from the table: "mn_cart_product" using primary key columns */
  cartProduct?: Maybe<CartProduct>;
  /** fetch aggregated fields from the table: "mn_cart_product" */
  cartProductAggregate: CartProduct_Aggregate;
  /** fetch aggregated fields from the table: "view_cart_product_private_vd" */
  cartProductPrivateVdAggregate: CartProductPrivateVd_Aggregate;
  /** fetch data from the table: "view_cart_product_private_vd" */
  cartProductPrivateVds: Array<CartProductPrivateVd>;
  /** fetch data from the table: "mn_cart_product" */
  cartProducts: Array<CartProduct>;
  /** fetch data from the table: "tbl_contact_us_message" using primary key columns */
  contactUsMessage?: Maybe<ContactUsMessage>;
  /** fetch aggregated fields from the table: "tbl_contact_us_message" */
  contactUsMessageAggregate: ContactUsMessage_Aggregate;
  /** fetch data from the table: "tbl_contact_us_message" */
  contactUsMessages: Array<ContactUsMessage>;
  /** fetch data from the table: "tbl_coupon" using primary key columns */
  coupon?: Maybe<Coupon>;
  /** fetch aggregated fields from the table: "tbl_coupon" */
  couponAggregate: Coupon_Aggregate;
  /** fetch aggregated fields from the table: "view_coupon_private_vd" */
  couponPrivateVdAggregate: CouponPrivateVd_Aggregate;
  /** fetch data from the table: "view_coupon_private_vd" */
  couponPrivateVds: Array<CouponPrivateVd>;
  /** fetch data from the table: "tbl_coupon_record" using primary key columns */
  couponRecord?: Maybe<CouponRecord>;
  /** fetch aggregated fields from the table: "tbl_coupon_record" */
  couponRecordAggregate: CouponRecord_Aggregate;
  /** fetch aggregated fields from the table: "view_coupon_record_private_vd" */
  couponRecordPrivateVdAggregate: CouponRecordPrivateVd_Aggregate;
  /** fetch data from the table: "view_coupon_record_private_vd" */
  couponRecordPrivateVds: Array<CouponRecordPrivateVd>;
  /** An array relationship */
  couponRecords: Array<CouponRecord>;
  /** An array relationship */
  coupons: Array<Coupon>;
  /** fetch data from the table: "mn_group_invitation" using primary key columns */
  groupInvitation?: Maybe<GroupInvitation>;
  /** fetch aggregated fields from the table: "mn_group_invitation" */
  groupInvitationAggregate: GroupInvitation_Aggregate;
  /** fetch aggregated fields from the table: "view_group_invitation_private_vd" */
  groupInvitationPrivateVdAggregate: GroupInvitationPrivateVd_Aggregate;
  /** fetch data from the table: "view_group_invitation_private_vd" */
  groupInvitationPrivateVds: Array<GroupInvitationPrivateVd>;
  /** An array relationship */
  groupInvitations: Array<GroupInvitation>;
  /** fetch data from the table: "tbl_issue" using primary key columns */
  issue?: Maybe<Issue>;
  /** fetch aggregated fields from the table: "tbl_issue" */
  issueAggregate: Issue_Aggregate;
  /** fetch data from the table: "tbl_issue_comment" using primary key columns */
  issueComment?: Maybe<IssueComment>;
  /** fetch aggregated fields from the table: "tbl_issue_comment" */
  issueCommentAggregate: IssueComment_Aggregate;
  /** fetch data from the table: "tbl_issue_comment" */
  issueComments: Array<IssueComment>;
  /** An array relationship */
  issues: Array<Issue>;
  /** fetch data from the table: "tbl_log" using primary key columns */
  log?: Maybe<Log>;
  /** fetch aggregated fields from the table: "tbl_log" */
  logAggregate: Log_Aggregate;
  /** fetch data from the table: "tbl_log" */
  logs: Array<Log>;
  /** fetch data from the table: "tbl_memo" using primary key columns */
  memo?: Maybe<Memo>;
  /** fetch aggregated fields from the table: "tbl_memo" */
  memoAggregate: Memo_Aggregate;
  /** fetch aggregated fields from the table: "view_memo_private_vd" */
  memoPrivateVdAggregate: MemoPrivateVd_Aggregate;
  /** fetch data from the table: "view_memo_private_vd" */
  memoPrivateVds: Array<MemoPrivateVd>;
  /** fetch data from the table: "tbl_memo" */
  memos: Array<Memo>;
  /** fetch data from the table: "tbl_notification" using primary key columns */
  notification?: Maybe<Notification>;
  /** fetch aggregated fields from the table: "tbl_notification" */
  notificationAggregate: Notification_Aggregate;
  /** An array relationship */
  notifications: Array<Notification>;
  /** fetch data from the table: "tbl_order" using primary key columns */
  order?: Maybe<Order>;
  /** fetch aggregated fields from the table: "tbl_order" */
  orderAggregate: Order_Aggregate;
  /** fetch data from the table: "mn_order_campaign" using primary key columns */
  orderCampaign?: Maybe<OrderCampaign>;
  /** fetch aggregated fields from the table: "mn_order_campaign" */
  orderCampaignAggregate: OrderCampaign_Aggregate;
  /** fetch aggregated fields from the table: "view_order_campaign_private_vd" */
  orderCampaignPrivateVdAggregate: OrderCampaignPrivateVd_Aggregate;
  /** fetch data from the table: "view_order_campaign_private_vd" */
  orderCampaignPrivateVds: Array<OrderCampaignPrivateVd>;
  /** fetch data from the table: "mn_order_campaign" */
  orderCampaigns: Array<OrderCampaign>;
  /** fetch aggregated fields from the table: "view_order_private_vd" */
  orderPrivateVdAggregate: OrderPrivateVd_Aggregate;
  /** fetch data from the table: "view_order_private_vd" */
  orderPrivateVds: Array<OrderPrivateVd>;
  /** fetch data from the table: "mn_order_product" using primary key columns */
  orderProduct?: Maybe<OrderProduct>;
  /** fetch aggregated fields from the table: "mn_order_product" */
  orderProductAggregate: OrderProduct_Aggregate;
  /** fetch aggregated fields from the table: "view_order_product_private_vd" */
  orderProductPrivateVdAggregate: OrderProductPrivateVd_Aggregate;
  /** fetch data from the table: "view_order_product_private_vd" */
  orderProductPrivateVds: Array<OrderProductPrivateVd>;
  /** fetch data from the table: "mn_order_product" */
  orderProducts: Array<OrderProduct>;
  /** An array relationship */
  orders: Array<Order>;
  /** fetch data from the table: "tbl_organization" using primary key columns */
  organization?: Maybe<Organization>;
  /** fetch aggregated fields from the table: "tbl_organization" */
  organizationAggregate: Organization_Aggregate;
  /** fetch data from the table: "mn_organization_invitation" using primary key columns */
  organizationInvitation?: Maybe<OrganizationInvitation>;
  /** fetch aggregated fields from the table: "mn_organization_invitation" */
  organizationInvitationAggregate: OrganizationInvitation_Aggregate;
  /** fetch aggregated fields from the table: "view_organization_invitation_private_vd" */
  organizationInvitationPrivateVdAggregate: OrganizationInvitationPrivateVd_Aggregate;
  /** fetch data from the table: "view_organization_invitation_private_vd" */
  organizationInvitationPrivateVds: Array<OrganizationInvitationPrivateVd>;
  /** An array relationship */
  organizationInvitations: Array<OrganizationInvitation>;
  /** fetch aggregated fields from the table: "view_organization_private_vd" */
  organizationPrivateVdAggregate: OrganizationPrivateVd_Aggregate;
  /** fetch data from the table: "view_organization_private_vd" */
  organizationPrivateVds: Array<OrganizationPrivateVd>;
  /** fetch data from the table: "tbl_organization" */
  organizations: Array<Organization>;
  /** fetch data from the table: "tbl_product" using primary key columns */
  product?: Maybe<Product>;
  /** fetch aggregated fields from the table: "tbl_product" */
  productAggregate: Product_Aggregate;
  /** fetch data from the table: "tbl_product_category" */
  productCategories: Array<ProductCategory>;
  /** fetch data from the table: "tbl_product_category" using primary key columns */
  productCategory?: Maybe<ProductCategory>;
  /** fetch aggregated fields from the table: "tbl_product_category" */
  productCategoryAggregate: ProductCategory_Aggregate;
  /** fetch aggregated fields from the table: "view_product_category_private_vd" */
  productCategoryPrivateVdAggregate: ProductCategoryPrivateVd_Aggregate;
  /** fetch data from the table: "view_product_category_private_vd" */
  productCategoryPrivateVds: Array<ProductCategoryPrivateVd>;
  /** fetch data from the table: "tbl_product_group" using primary key columns */
  productGroup?: Maybe<ProductGroup>;
  /** fetch aggregated fields from the table: "tbl_product_group" */
  productGroupAggregate: ProductGroup_Aggregate;
  /** fetch data from the table: "mn_product_group_campaign" using primary key columns */
  productGroupCampaign?: Maybe<ProductGroupCampaign>;
  /** fetch aggregated fields from the table: "mn_product_group_campaign" */
  productGroupCampaignAggregate: ProductGroupCampaign_Aggregate;
  /** fetch aggregated fields from the table: "view_product_group_campaign_private_vd" */
  productGroupCampaignPrivateVdAggregate: ProductGroupCampaignPrivateVd_Aggregate;
  /** fetch data from the table: "view_product_group_campaign_private_vd" */
  productGroupCampaignPrivateVds: Array<ProductGroupCampaignPrivateVd>;
  /** fetch data from the table: "mn_product_group_campaign" */
  productGroupCampaigns: Array<ProductGroupCampaign>;
  /** fetch aggregated fields from the table: "view_product_group_private_vd" */
  productGroupPrivateVdAggregate: ProductGroupPrivateVd_Aggregate;
  /** fetch data from the table: "view_product_group_private_vd" */
  productGroupPrivateVds: Array<ProductGroupPrivateVd>;
  /** fetch data from the table: "tbl_product_group" */
  productGroups: Array<ProductGroup>;
  /** fetch aggregated fields from the table: "view_product_private_vd" */
  productPrivateVdAggregate: ProductPrivateVd_Aggregate;
  /** fetch data from the table: "view_product_private_vd" */
  productPrivateVds: Array<ProductPrivateVd>;
  /** fetch data from the table: "tbl_product_spec" using primary key columns */
  productSpec?: Maybe<ProductSpec>;
  /** fetch aggregated fields from the table: "tbl_product_spec" */
  productSpecAggregate: ProductSpec_Aggregate;
  /** fetch aggregated fields from the table: "view_product_spec_private_vd" */
  productSpecPrivateVdAggregate: ProductSpecPrivateVd_Aggregate;
  /** fetch data from the table: "view_product_spec_private_vd" */
  productSpecPrivateVds: Array<ProductSpecPrivateVd>;
  /** fetch data from the table: "tbl_product_spec" */
  productSpecs: Array<ProductSpec>;
  /** An array relationship */
  products: Array<Product>;
  /** fetch data from the table: "tbl_project" using primary key columns */
  project?: Maybe<Project>;
  /** fetch aggregated fields from the table: "tbl_project" */
  projectAggregate: Project_Aggregate;
  /** fetch data from the table: "mn_project_invitation" using primary key columns */
  projectInvitation?: Maybe<ProjectInvitation>;
  /** fetch aggregated fields from the table: "mn_project_invitation" */
  projectInvitationAggregate: ProjectInvitation_Aggregate;
  /** fetch aggregated fields from the table: "view_project_invitation_private_vd" */
  projectInvitationPrivateVdAggregate: ProjectInvitationPrivateVd_Aggregate;
  /** fetch data from the table: "view_project_invitation_private_vd" */
  projectInvitationPrivateVds: Array<ProjectInvitationPrivateVd>;
  /** An array relationship */
  projectInvitations: Array<ProjectInvitation>;
  /** fetch aggregated fields from the table: "view_project_private_vd" */
  projectPrivateVdAggregate: ProjectPrivateVd_Aggregate;
  /** fetch data from the table: "view_project_private_vd" */
  projectPrivateVds: Array<ProjectPrivateVd>;
  /** An array relationship */
  projects: Array<Project>;
  /** fetch data from the table: "tbl_recipient_info" using primary key columns */
  recipientInfo?: Maybe<RecipientInfo>;
  /** fetch aggregated fields from the table: "tbl_recipient_info" */
  recipientInfoAggregate: RecipientInfo_Aggregate;
  /** fetch aggregated fields from the table: "view_recipient_info_private_vd" */
  recipientInfoPrivateVdAggregate: RecipientInfoPrivateVd_Aggregate;
  /** fetch data from the table: "view_recipient_info_private_vd" */
  recipientInfoPrivateVds: Array<RecipientInfoPrivateVd>;
  /** An array relationship */
  recipientInfos: Array<RecipientInfo>;
  /** fetch data from the table: "tbl_recovery_token" using primary key columns */
  recoveryToken?: Maybe<RecoveryToken>;
  /** fetch aggregated fields from the table: "tbl_recovery_token" */
  recoveryTokenAggregate: RecoveryToken_Aggregate;
  /** fetch data from the table: "tbl_recovery_token" */
  recoveryTokens: Array<RecoveryToken>;
  /** fetch data from the table: "tbl_shipping_fee" using primary key columns */
  shippingFee?: Maybe<ShippingFee>;
  /** fetch aggregated fields from the table: "tbl_shipping_fee" */
  shippingFeeAggregate: ShippingFee_Aggregate;
  /** fetch aggregated fields from the table: "view_shipping_fee_private_vd" */
  shippingFeePrivateVdAggregate: ShippingFeePrivateVd_Aggregate;
  /** fetch data from the table: "view_shipping_fee_private_vd" */
  shippingFeePrivateVds: Array<ShippingFeePrivateVd>;
  /** fetch data from the table: "tbl_shipping_fee" */
  shippingFees: Array<ShippingFee>;
  /** fetch data from the table: "tbl_subscription_order" using primary key columns */
  subscriptionOrder?: Maybe<SubscriptionOrder>;
  /** fetch aggregated fields from the table: "tbl_subscription_order" */
  subscriptionOrderAggregate: SubscriptionOrder_Aggregate;
  /** fetch aggregated fields from the table: "view_subscription_order_private_vd" */
  subscriptionOrderPrivateVdAggregate: SubscriptionOrderPrivateVd_Aggregate;
  /** fetch data from the table: "view_subscription_order_private_vd" */
  subscriptionOrderPrivateVds: Array<SubscriptionOrderPrivateVd>;
  /** An array relationship */
  subscriptionOrders: Array<SubscriptionOrder>;
  /** fetch data from the table: "tbl_user" using primary key columns */
  user?: Maybe<User>;
  /** fetch aggregated fields from the table: "tbl_user" */
  userAggregate: User_Aggregate;
  /** fetch data from the table: "tbl_user_group" using primary key columns */
  userGroup?: Maybe<UserGroup>;
  /** fetch aggregated fields from the table: "tbl_user_group" */
  userGroupAggregate: UserGroup_Aggregate;
  /** fetch aggregated fields from the table: "view_user_group_private_vd" */
  userGroupPrivateVdAggregate: UserGroupPrivateVd_Aggregate;
  /** fetch data from the table: "view_user_group_private_vd" */
  userGroupPrivateVds: Array<UserGroupPrivateVd>;
  /** fetch data from the table: "tbl_user_group" */
  userGroups: Array<UserGroup>;
  /** fetch data from the table: "mn_user_memo" using primary key columns */
  userMemo?: Maybe<UserMemo>;
  /** fetch aggregated fields from the table: "mn_user_memo" */
  userMemoAggregate: UserMemo_Aggregate;
  /** fetch aggregated fields from the table: "view_user_memo_private_vd" */
  userMemoPrivateVdAggregate: UserMemoPrivateVd_Aggregate;
  /** fetch data from the table: "view_user_memo_private_vd" */
  userMemoPrivateVds: Array<UserMemoPrivateVd>;
  /** fetch data from the table: "mn_user_memo" */
  userMemos: Array<UserMemo>;
  /** fetch data from the table: "mn_user_organization" using primary key columns */
  userOrganization?: Maybe<UserOrganization>;
  /** fetch aggregated fields from the table: "mn_user_organization" */
  userOrganizationAggregate: UserOrganization_Aggregate;
  /** fetch aggregated fields from the table: "view_user_organization_private_vd" */
  userOrganizationPrivateVdAggregate: UserOrganizationPrivateVd_Aggregate;
  /** fetch data from the table: "view_user_organization_private_vd" */
  userOrganizationPrivateVds: Array<UserOrganizationPrivateVd>;
  /** fetch data from the table: "mn_user_organization" */
  userOrganizations: Array<UserOrganization>;
  /** fetch aggregated fields from the table: "view_user_private_vd" */
  userPrivateVdAggregate: UserPrivateVd_Aggregate;
  /** fetch data from the table: "view_user_private_vd" */
  userPrivateVds: Array<UserPrivateVd>;
  /** fetch data from the table: "mn_user_project" using primary key columns */
  userProject?: Maybe<UserProject>;
  /** fetch aggregated fields from the table: "mn_user_project" */
  userProjectAggregate: UserProject_Aggregate;
  /** fetch aggregated fields from the table: "view_user_project_private_vd" */
  userProjectPrivateVdAggregate: UserProjectPrivateVd_Aggregate;
  /** fetch data from the table: "view_user_project_private_vd" */
  userProjectPrivateVds: Array<UserProjectPrivateVd>;
  /** fetch data from the table: "mn_user_project" */
  userProjects: Array<UserProject>;
  /** fetch data from the table: "tbl_user_setting" using primary key columns */
  userSetting?: Maybe<UserSetting>;
  /** fetch aggregated fields from the table: "tbl_user_setting" */
  userSettingAggregate: UserSetting_Aggregate;
  /** fetch aggregated fields from the table: "view_user_setting_private_vd" */
  userSettingPrivateVdAggregate: UserSettingPrivateVd_Aggregate;
  /** fetch data from the table: "view_user_setting_private_vd" */
  userSettingPrivateVds: Array<UserSettingPrivateVd>;
  /** An array relationship */
  userSettings: Array<UserSetting>;
  /** fetch data from the table: "mn_user_user_group" using primary key columns */
  userUserGroup?: Maybe<UserUserGroup>;
  /** fetch aggregated fields from the table: "mn_user_user_group" */
  userUserGroupAggregate: UserUserGroup_Aggregate;
  /** fetch aggregated fields from the table: "view_user_user_group_private_vd" */
  userUserGroupPrivateVdAggregate: UserUserGroupPrivateVd_Aggregate;
  /** fetch data from the table: "view_user_user_group_private_vd" */
  userUserGroupPrivateVds: Array<UserUserGroupPrivateVd>;
  /** fetch data from the table: "mn_user_user_group" */
  userUserGroups: Array<UserUserGroup>;
  /** fetch data from the table: "tbl_user" */
  users: Array<User>;
};


export type Query_RootAccountLinkArgs = {
  id: Scalars['bigint'];
};


export type Query_RootAccountLinkAggregateArgs = {
  distinct_on?: Maybe<Array<AccountLink_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<AccountLink_Order_By>>;
  where?: Maybe<AccountLink_Bool_Exp>;
};


export type Query_RootAccountLinkPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<AccountLinkPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<AccountLinkPrivateVd_Order_By>>;
  where?: Maybe<AccountLinkPrivateVd_Bool_Exp>;
};


export type Query_RootAccountLinkPrivateVdsArgs = {
  distinct_on?: Maybe<Array<AccountLinkPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<AccountLinkPrivateVd_Order_By>>;
  where?: Maybe<AccountLinkPrivateVd_Bool_Exp>;
};


export type Query_RootAccountLinksArgs = {
  distinct_on?: Maybe<Array<AccountLink_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<AccountLink_Order_By>>;
  where?: Maybe<AccountLink_Bool_Exp>;
};


export type Query_RootBrowserSessionArgs = {
  id: Scalars['bigint'];
};


export type Query_RootBrowserSessionAggregateArgs = {
  distinct_on?: Maybe<Array<BrowserSession_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<BrowserSession_Order_By>>;
  where?: Maybe<BrowserSession_Bool_Exp>;
};


export type Query_RootBrowserSessionsArgs = {
  distinct_on?: Maybe<Array<BrowserSession_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<BrowserSession_Order_By>>;
  where?: Maybe<BrowserSession_Bool_Exp>;
};


export type Query_RootBuyerInfoArgs = {
  id: Scalars['bigint'];
};


export type Query_RootBuyerInfoAggregateArgs = {
  distinct_on?: Maybe<Array<BuyerInfo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<BuyerInfo_Order_By>>;
  where?: Maybe<BuyerInfo_Bool_Exp>;
};


export type Query_RootBuyerInfoPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<BuyerInfoPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<BuyerInfoPrivateVd_Order_By>>;
  where?: Maybe<BuyerInfoPrivateVd_Bool_Exp>;
};


export type Query_RootBuyerInfoPrivateVdsArgs = {
  distinct_on?: Maybe<Array<BuyerInfoPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<BuyerInfoPrivateVd_Order_By>>;
  where?: Maybe<BuyerInfoPrivateVd_Bool_Exp>;
};


export type Query_RootBuyerInfosArgs = {
  distinct_on?: Maybe<Array<BuyerInfo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<BuyerInfo_Order_By>>;
  where?: Maybe<BuyerInfo_Bool_Exp>;
};


export type Query_RootCampaignArgs = {
  id: Scalars['bigint'];
};


export type Query_RootCampaignAggregateArgs = {
  distinct_on?: Maybe<Array<Campaign_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Campaign_Order_By>>;
  where?: Maybe<Campaign_Bool_Exp>;
};


export type Query_RootCampaignPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<CampaignPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<CampaignPrivateVd_Order_By>>;
  where?: Maybe<CampaignPrivateVd_Bool_Exp>;
};


export type Query_RootCampaignPrivateVdsArgs = {
  distinct_on?: Maybe<Array<CampaignPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<CampaignPrivateVd_Order_By>>;
  where?: Maybe<CampaignPrivateVd_Bool_Exp>;
};


export type Query_RootCampaignsArgs = {
  distinct_on?: Maybe<Array<Campaign_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Campaign_Order_By>>;
  where?: Maybe<Campaign_Bool_Exp>;
};


export type Query_RootCartProductArgs = {
  id: Scalars['bigint'];
};


export type Query_RootCartProductAggregateArgs = {
  distinct_on?: Maybe<Array<CartProduct_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<CartProduct_Order_By>>;
  where?: Maybe<CartProduct_Bool_Exp>;
};


export type Query_RootCartProductPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<CartProductPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<CartProductPrivateVd_Order_By>>;
  where?: Maybe<CartProductPrivateVd_Bool_Exp>;
};


export type Query_RootCartProductPrivateVdsArgs = {
  distinct_on?: Maybe<Array<CartProductPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<CartProductPrivateVd_Order_By>>;
  where?: Maybe<CartProductPrivateVd_Bool_Exp>;
};


export type Query_RootCartProductsArgs = {
  distinct_on?: Maybe<Array<CartProduct_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<CartProduct_Order_By>>;
  where?: Maybe<CartProduct_Bool_Exp>;
};


export type Query_RootContactUsMessageArgs = {
  id: Scalars['bigint'];
};


export type Query_RootContactUsMessageAggregateArgs = {
  distinct_on?: Maybe<Array<ContactUsMessage_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContactUsMessage_Order_By>>;
  where?: Maybe<ContactUsMessage_Bool_Exp>;
};


export type Query_RootContactUsMessagesArgs = {
  distinct_on?: Maybe<Array<ContactUsMessage_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContactUsMessage_Order_By>>;
  where?: Maybe<ContactUsMessage_Bool_Exp>;
};


export type Query_RootCouponArgs = {
  id: Scalars['bigint'];
};


export type Query_RootCouponAggregateArgs = {
  distinct_on?: Maybe<Array<Coupon_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Coupon_Order_By>>;
  where?: Maybe<Coupon_Bool_Exp>;
};


export type Query_RootCouponPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<CouponPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<CouponPrivateVd_Order_By>>;
  where?: Maybe<CouponPrivateVd_Bool_Exp>;
};


export type Query_RootCouponPrivateVdsArgs = {
  distinct_on?: Maybe<Array<CouponPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<CouponPrivateVd_Order_By>>;
  where?: Maybe<CouponPrivateVd_Bool_Exp>;
};


export type Query_RootCouponRecordArgs = {
  id: Scalars['bigint'];
};


export type Query_RootCouponRecordAggregateArgs = {
  distinct_on?: Maybe<Array<CouponRecord_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<CouponRecord_Order_By>>;
  where?: Maybe<CouponRecord_Bool_Exp>;
};


export type Query_RootCouponRecordPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<CouponRecordPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<CouponRecordPrivateVd_Order_By>>;
  where?: Maybe<CouponRecordPrivateVd_Bool_Exp>;
};


export type Query_RootCouponRecordPrivateVdsArgs = {
  distinct_on?: Maybe<Array<CouponRecordPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<CouponRecordPrivateVd_Order_By>>;
  where?: Maybe<CouponRecordPrivateVd_Bool_Exp>;
};


export type Query_RootCouponRecordsArgs = {
  distinct_on?: Maybe<Array<CouponRecord_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<CouponRecord_Order_By>>;
  where?: Maybe<CouponRecord_Bool_Exp>;
};


export type Query_RootCouponsArgs = {
  distinct_on?: Maybe<Array<Coupon_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Coupon_Order_By>>;
  where?: Maybe<Coupon_Bool_Exp>;
};


export type Query_RootGroupInvitationArgs = {
  id: Scalars['bigint'];
};


export type Query_RootGroupInvitationAggregateArgs = {
  distinct_on?: Maybe<Array<GroupInvitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<GroupInvitation_Order_By>>;
  where?: Maybe<GroupInvitation_Bool_Exp>;
};


export type Query_RootGroupInvitationPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<GroupInvitationPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<GroupInvitationPrivateVd_Order_By>>;
  where?: Maybe<GroupInvitationPrivateVd_Bool_Exp>;
};


export type Query_RootGroupInvitationPrivateVdsArgs = {
  distinct_on?: Maybe<Array<GroupInvitationPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<GroupInvitationPrivateVd_Order_By>>;
  where?: Maybe<GroupInvitationPrivateVd_Bool_Exp>;
};


export type Query_RootGroupInvitationsArgs = {
  distinct_on?: Maybe<Array<GroupInvitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<GroupInvitation_Order_By>>;
  where?: Maybe<GroupInvitation_Bool_Exp>;
};


export type Query_RootIssueArgs = {
  id: Scalars['bigint'];
};


export type Query_RootIssueAggregateArgs = {
  distinct_on?: Maybe<Array<Issue_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Issue_Order_By>>;
  where?: Maybe<Issue_Bool_Exp>;
};


export type Query_RootIssueCommentArgs = {
  id: Scalars['bigint'];
};


export type Query_RootIssueCommentAggregateArgs = {
  distinct_on?: Maybe<Array<IssueComment_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<IssueComment_Order_By>>;
  where?: Maybe<IssueComment_Bool_Exp>;
};


export type Query_RootIssueCommentsArgs = {
  distinct_on?: Maybe<Array<IssueComment_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<IssueComment_Order_By>>;
  where?: Maybe<IssueComment_Bool_Exp>;
};


export type Query_RootIssuesArgs = {
  distinct_on?: Maybe<Array<Issue_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Issue_Order_By>>;
  where?: Maybe<Issue_Bool_Exp>;
};


export type Query_RootLogArgs = {
  id: Scalars['bigint'];
};


export type Query_RootLogAggregateArgs = {
  distinct_on?: Maybe<Array<Log_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Log_Order_By>>;
  where?: Maybe<Log_Bool_Exp>;
};


export type Query_RootLogsArgs = {
  distinct_on?: Maybe<Array<Log_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Log_Order_By>>;
  where?: Maybe<Log_Bool_Exp>;
};


export type Query_RootMemoArgs = {
  id: Scalars['bigint'];
};


export type Query_RootMemoAggregateArgs = {
  distinct_on?: Maybe<Array<Memo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Memo_Order_By>>;
  where?: Maybe<Memo_Bool_Exp>;
};


export type Query_RootMemoPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<MemoPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<MemoPrivateVd_Order_By>>;
  where?: Maybe<MemoPrivateVd_Bool_Exp>;
};


export type Query_RootMemoPrivateVdsArgs = {
  distinct_on?: Maybe<Array<MemoPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<MemoPrivateVd_Order_By>>;
  where?: Maybe<MemoPrivateVd_Bool_Exp>;
};


export type Query_RootMemosArgs = {
  distinct_on?: Maybe<Array<Memo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Memo_Order_By>>;
  where?: Maybe<Memo_Bool_Exp>;
};


export type Query_RootNotificationArgs = {
  id: Scalars['bigint'];
};


export type Query_RootNotificationAggregateArgs = {
  distinct_on?: Maybe<Array<Notification_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Notification_Order_By>>;
  where?: Maybe<Notification_Bool_Exp>;
};


export type Query_RootNotificationsArgs = {
  distinct_on?: Maybe<Array<Notification_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Notification_Order_By>>;
  where?: Maybe<Notification_Bool_Exp>;
};


export type Query_RootOrderArgs = {
  id: Scalars['bigint'];
};


export type Query_RootOrderAggregateArgs = {
  distinct_on?: Maybe<Array<Order_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Order_Order_By>>;
  where?: Maybe<Order_Bool_Exp>;
};


export type Query_RootOrderCampaignArgs = {
  id: Scalars['bigint'];
};


export type Query_RootOrderCampaignAggregateArgs = {
  distinct_on?: Maybe<Array<OrderCampaign_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrderCampaign_Order_By>>;
  where?: Maybe<OrderCampaign_Bool_Exp>;
};


export type Query_RootOrderCampaignPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<OrderCampaignPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrderCampaignPrivateVd_Order_By>>;
  where?: Maybe<OrderCampaignPrivateVd_Bool_Exp>;
};


export type Query_RootOrderCampaignPrivateVdsArgs = {
  distinct_on?: Maybe<Array<OrderCampaignPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrderCampaignPrivateVd_Order_By>>;
  where?: Maybe<OrderCampaignPrivateVd_Bool_Exp>;
};


export type Query_RootOrderCampaignsArgs = {
  distinct_on?: Maybe<Array<OrderCampaign_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrderCampaign_Order_By>>;
  where?: Maybe<OrderCampaign_Bool_Exp>;
};


export type Query_RootOrderPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<OrderPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrderPrivateVd_Order_By>>;
  where?: Maybe<OrderPrivateVd_Bool_Exp>;
};


export type Query_RootOrderPrivateVdsArgs = {
  distinct_on?: Maybe<Array<OrderPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrderPrivateVd_Order_By>>;
  where?: Maybe<OrderPrivateVd_Bool_Exp>;
};


export type Query_RootOrderProductArgs = {
  id: Scalars['bigint'];
};


export type Query_RootOrderProductAggregateArgs = {
  distinct_on?: Maybe<Array<OrderProduct_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrderProduct_Order_By>>;
  where?: Maybe<OrderProduct_Bool_Exp>;
};


export type Query_RootOrderProductPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<OrderProductPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrderProductPrivateVd_Order_By>>;
  where?: Maybe<OrderProductPrivateVd_Bool_Exp>;
};


export type Query_RootOrderProductPrivateVdsArgs = {
  distinct_on?: Maybe<Array<OrderProductPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrderProductPrivateVd_Order_By>>;
  where?: Maybe<OrderProductPrivateVd_Bool_Exp>;
};


export type Query_RootOrderProductsArgs = {
  distinct_on?: Maybe<Array<OrderProduct_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrderProduct_Order_By>>;
  where?: Maybe<OrderProduct_Bool_Exp>;
};


export type Query_RootOrdersArgs = {
  distinct_on?: Maybe<Array<Order_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Order_Order_By>>;
  where?: Maybe<Order_Bool_Exp>;
};


export type Query_RootOrganizationArgs = {
  id: Scalars['bigint'];
};


export type Query_RootOrganizationAggregateArgs = {
  distinct_on?: Maybe<Array<Organization_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Organization_Order_By>>;
  where?: Maybe<Organization_Bool_Exp>;
};


export type Query_RootOrganizationInvitationArgs = {
  id: Scalars['bigint'];
};


export type Query_RootOrganizationInvitationAggregateArgs = {
  distinct_on?: Maybe<Array<OrganizationInvitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrganizationInvitation_Order_By>>;
  where?: Maybe<OrganizationInvitation_Bool_Exp>;
};


export type Query_RootOrganizationInvitationPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<OrganizationInvitationPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrganizationInvitationPrivateVd_Order_By>>;
  where?: Maybe<OrganizationInvitationPrivateVd_Bool_Exp>;
};


export type Query_RootOrganizationInvitationPrivateVdsArgs = {
  distinct_on?: Maybe<Array<OrganizationInvitationPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrganizationInvitationPrivateVd_Order_By>>;
  where?: Maybe<OrganizationInvitationPrivateVd_Bool_Exp>;
};


export type Query_RootOrganizationInvitationsArgs = {
  distinct_on?: Maybe<Array<OrganizationInvitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrganizationInvitation_Order_By>>;
  where?: Maybe<OrganizationInvitation_Bool_Exp>;
};


export type Query_RootOrganizationPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<OrganizationPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrganizationPrivateVd_Order_By>>;
  where?: Maybe<OrganizationPrivateVd_Bool_Exp>;
};


export type Query_RootOrganizationPrivateVdsArgs = {
  distinct_on?: Maybe<Array<OrganizationPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrganizationPrivateVd_Order_By>>;
  where?: Maybe<OrganizationPrivateVd_Bool_Exp>;
};


export type Query_RootOrganizationsArgs = {
  distinct_on?: Maybe<Array<Organization_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Organization_Order_By>>;
  where?: Maybe<Organization_Bool_Exp>;
};


export type Query_RootProductArgs = {
  id: Scalars['bigint'];
};


export type Query_RootProductAggregateArgs = {
  distinct_on?: Maybe<Array<Product_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Order_By>>;
  where?: Maybe<Product_Bool_Exp>;
};


export type Query_RootProductCategoriesArgs = {
  distinct_on?: Maybe<Array<ProductCategory_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductCategory_Order_By>>;
  where?: Maybe<ProductCategory_Bool_Exp>;
};


export type Query_RootProductCategoryArgs = {
  id: Scalars['bigint'];
};


export type Query_RootProductCategoryAggregateArgs = {
  distinct_on?: Maybe<Array<ProductCategory_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductCategory_Order_By>>;
  where?: Maybe<ProductCategory_Bool_Exp>;
};


export type Query_RootProductCategoryPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<ProductCategoryPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductCategoryPrivateVd_Order_By>>;
  where?: Maybe<ProductCategoryPrivateVd_Bool_Exp>;
};


export type Query_RootProductCategoryPrivateVdsArgs = {
  distinct_on?: Maybe<Array<ProductCategoryPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductCategoryPrivateVd_Order_By>>;
  where?: Maybe<ProductCategoryPrivateVd_Bool_Exp>;
};


export type Query_RootProductGroupArgs = {
  id: Scalars['bigint'];
};


export type Query_RootProductGroupAggregateArgs = {
  distinct_on?: Maybe<Array<ProductGroup_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductGroup_Order_By>>;
  where?: Maybe<ProductGroup_Bool_Exp>;
};


export type Query_RootProductGroupCampaignArgs = {
  id: Scalars['bigint'];
};


export type Query_RootProductGroupCampaignAggregateArgs = {
  distinct_on?: Maybe<Array<ProductGroupCampaign_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductGroupCampaign_Order_By>>;
  where?: Maybe<ProductGroupCampaign_Bool_Exp>;
};


export type Query_RootProductGroupCampaignPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<ProductGroupCampaignPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductGroupCampaignPrivateVd_Order_By>>;
  where?: Maybe<ProductGroupCampaignPrivateVd_Bool_Exp>;
};


export type Query_RootProductGroupCampaignPrivateVdsArgs = {
  distinct_on?: Maybe<Array<ProductGroupCampaignPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductGroupCampaignPrivateVd_Order_By>>;
  where?: Maybe<ProductGroupCampaignPrivateVd_Bool_Exp>;
};


export type Query_RootProductGroupCampaignsArgs = {
  distinct_on?: Maybe<Array<ProductGroupCampaign_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductGroupCampaign_Order_By>>;
  where?: Maybe<ProductGroupCampaign_Bool_Exp>;
};


export type Query_RootProductGroupPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<ProductGroupPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductGroupPrivateVd_Order_By>>;
  where?: Maybe<ProductGroupPrivateVd_Bool_Exp>;
};


export type Query_RootProductGroupPrivateVdsArgs = {
  distinct_on?: Maybe<Array<ProductGroupPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductGroupPrivateVd_Order_By>>;
  where?: Maybe<ProductGroupPrivateVd_Bool_Exp>;
};


export type Query_RootProductGroupsArgs = {
  distinct_on?: Maybe<Array<ProductGroup_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductGroup_Order_By>>;
  where?: Maybe<ProductGroup_Bool_Exp>;
};


export type Query_RootProductPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<ProductPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductPrivateVd_Order_By>>;
  where?: Maybe<ProductPrivateVd_Bool_Exp>;
};


export type Query_RootProductPrivateVdsArgs = {
  distinct_on?: Maybe<Array<ProductPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductPrivateVd_Order_By>>;
  where?: Maybe<ProductPrivateVd_Bool_Exp>;
};


export type Query_RootProductSpecArgs = {
  id: Scalars['bigint'];
};


export type Query_RootProductSpecAggregateArgs = {
  distinct_on?: Maybe<Array<ProductSpec_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductSpec_Order_By>>;
  where?: Maybe<ProductSpec_Bool_Exp>;
};


export type Query_RootProductSpecPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<ProductSpecPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductSpecPrivateVd_Order_By>>;
  where?: Maybe<ProductSpecPrivateVd_Bool_Exp>;
};


export type Query_RootProductSpecPrivateVdsArgs = {
  distinct_on?: Maybe<Array<ProductSpecPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductSpecPrivateVd_Order_By>>;
  where?: Maybe<ProductSpecPrivateVd_Bool_Exp>;
};


export type Query_RootProductSpecsArgs = {
  distinct_on?: Maybe<Array<ProductSpec_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductSpec_Order_By>>;
  where?: Maybe<ProductSpec_Bool_Exp>;
};


export type Query_RootProductsArgs = {
  distinct_on?: Maybe<Array<Product_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Order_By>>;
  where?: Maybe<Product_Bool_Exp>;
};


export type Query_RootProjectArgs = {
  id: Scalars['bigint'];
};


export type Query_RootProjectAggregateArgs = {
  distinct_on?: Maybe<Array<Project_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Project_Order_By>>;
  where?: Maybe<Project_Bool_Exp>;
};


export type Query_RootProjectInvitationArgs = {
  id: Scalars['bigint'];
};


export type Query_RootProjectInvitationAggregateArgs = {
  distinct_on?: Maybe<Array<ProjectInvitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProjectInvitation_Order_By>>;
  where?: Maybe<ProjectInvitation_Bool_Exp>;
};


export type Query_RootProjectInvitationPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<ProjectInvitationPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProjectInvitationPrivateVd_Order_By>>;
  where?: Maybe<ProjectInvitationPrivateVd_Bool_Exp>;
};


export type Query_RootProjectInvitationPrivateVdsArgs = {
  distinct_on?: Maybe<Array<ProjectInvitationPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProjectInvitationPrivateVd_Order_By>>;
  where?: Maybe<ProjectInvitationPrivateVd_Bool_Exp>;
};


export type Query_RootProjectInvitationsArgs = {
  distinct_on?: Maybe<Array<ProjectInvitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProjectInvitation_Order_By>>;
  where?: Maybe<ProjectInvitation_Bool_Exp>;
};


export type Query_RootProjectPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<ProjectPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProjectPrivateVd_Order_By>>;
  where?: Maybe<ProjectPrivateVd_Bool_Exp>;
};


export type Query_RootProjectPrivateVdsArgs = {
  distinct_on?: Maybe<Array<ProjectPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProjectPrivateVd_Order_By>>;
  where?: Maybe<ProjectPrivateVd_Bool_Exp>;
};


export type Query_RootProjectsArgs = {
  distinct_on?: Maybe<Array<Project_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Project_Order_By>>;
  where?: Maybe<Project_Bool_Exp>;
};


export type Query_RootRecipientInfoArgs = {
  id: Scalars['bigint'];
};


export type Query_RootRecipientInfoAggregateArgs = {
  distinct_on?: Maybe<Array<RecipientInfo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RecipientInfo_Order_By>>;
  where?: Maybe<RecipientInfo_Bool_Exp>;
};


export type Query_RootRecipientInfoPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<RecipientInfoPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RecipientInfoPrivateVd_Order_By>>;
  where?: Maybe<RecipientInfoPrivateVd_Bool_Exp>;
};


export type Query_RootRecipientInfoPrivateVdsArgs = {
  distinct_on?: Maybe<Array<RecipientInfoPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RecipientInfoPrivateVd_Order_By>>;
  where?: Maybe<RecipientInfoPrivateVd_Bool_Exp>;
};


export type Query_RootRecipientInfosArgs = {
  distinct_on?: Maybe<Array<RecipientInfo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RecipientInfo_Order_By>>;
  where?: Maybe<RecipientInfo_Bool_Exp>;
};


export type Query_RootRecoveryTokenArgs = {
  id: Scalars['bigint'];
};


export type Query_RootRecoveryTokenAggregateArgs = {
  distinct_on?: Maybe<Array<RecoveryToken_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RecoveryToken_Order_By>>;
  where?: Maybe<RecoveryToken_Bool_Exp>;
};


export type Query_RootRecoveryTokensArgs = {
  distinct_on?: Maybe<Array<RecoveryToken_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RecoveryToken_Order_By>>;
  where?: Maybe<RecoveryToken_Bool_Exp>;
};


export type Query_RootShippingFeeArgs = {
  id: Scalars['bigint'];
};


export type Query_RootShippingFeeAggregateArgs = {
  distinct_on?: Maybe<Array<ShippingFee_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ShippingFee_Order_By>>;
  where?: Maybe<ShippingFee_Bool_Exp>;
};


export type Query_RootShippingFeePrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<ShippingFeePrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ShippingFeePrivateVd_Order_By>>;
  where?: Maybe<ShippingFeePrivateVd_Bool_Exp>;
};


export type Query_RootShippingFeePrivateVdsArgs = {
  distinct_on?: Maybe<Array<ShippingFeePrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ShippingFeePrivateVd_Order_By>>;
  where?: Maybe<ShippingFeePrivateVd_Bool_Exp>;
};


export type Query_RootShippingFeesArgs = {
  distinct_on?: Maybe<Array<ShippingFee_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ShippingFee_Order_By>>;
  where?: Maybe<ShippingFee_Bool_Exp>;
};


export type Query_RootSubscriptionOrderArgs = {
  id: Scalars['bigint'];
};


export type Query_RootSubscriptionOrderAggregateArgs = {
  distinct_on?: Maybe<Array<SubscriptionOrder_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<SubscriptionOrder_Order_By>>;
  where?: Maybe<SubscriptionOrder_Bool_Exp>;
};


export type Query_RootSubscriptionOrderPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<SubscriptionOrderPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<SubscriptionOrderPrivateVd_Order_By>>;
  where?: Maybe<SubscriptionOrderPrivateVd_Bool_Exp>;
};


export type Query_RootSubscriptionOrderPrivateVdsArgs = {
  distinct_on?: Maybe<Array<SubscriptionOrderPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<SubscriptionOrderPrivateVd_Order_By>>;
  where?: Maybe<SubscriptionOrderPrivateVd_Bool_Exp>;
};


export type Query_RootSubscriptionOrdersArgs = {
  distinct_on?: Maybe<Array<SubscriptionOrder_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<SubscriptionOrder_Order_By>>;
  where?: Maybe<SubscriptionOrder_Bool_Exp>;
};


export type Query_RootUserArgs = {
  id: Scalars['bigint'];
};


export type Query_RootUserAggregateArgs = {
  distinct_on?: Maybe<Array<User_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<User_Order_By>>;
  where?: Maybe<User_Bool_Exp>;
};


export type Query_RootUserGroupArgs = {
  id: Scalars['bigint'];
};


export type Query_RootUserGroupAggregateArgs = {
  distinct_on?: Maybe<Array<UserGroup_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserGroup_Order_By>>;
  where?: Maybe<UserGroup_Bool_Exp>;
};


export type Query_RootUserGroupPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<UserGroupPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserGroupPrivateVd_Order_By>>;
  where?: Maybe<UserGroupPrivateVd_Bool_Exp>;
};


export type Query_RootUserGroupPrivateVdsArgs = {
  distinct_on?: Maybe<Array<UserGroupPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserGroupPrivateVd_Order_By>>;
  where?: Maybe<UserGroupPrivateVd_Bool_Exp>;
};


export type Query_RootUserGroupsArgs = {
  distinct_on?: Maybe<Array<UserGroup_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserGroup_Order_By>>;
  where?: Maybe<UserGroup_Bool_Exp>;
};


export type Query_RootUserMemoArgs = {
  id: Scalars['bigint'];
};


export type Query_RootUserMemoAggregateArgs = {
  distinct_on?: Maybe<Array<UserMemo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserMemo_Order_By>>;
  where?: Maybe<UserMemo_Bool_Exp>;
};


export type Query_RootUserMemoPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<UserMemoPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserMemoPrivateVd_Order_By>>;
  where?: Maybe<UserMemoPrivateVd_Bool_Exp>;
};


export type Query_RootUserMemoPrivateVdsArgs = {
  distinct_on?: Maybe<Array<UserMemoPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserMemoPrivateVd_Order_By>>;
  where?: Maybe<UserMemoPrivateVd_Bool_Exp>;
};


export type Query_RootUserMemosArgs = {
  distinct_on?: Maybe<Array<UserMemo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserMemo_Order_By>>;
  where?: Maybe<UserMemo_Bool_Exp>;
};


export type Query_RootUserOrganizationArgs = {
  id: Scalars['bigint'];
};


export type Query_RootUserOrganizationAggregateArgs = {
  distinct_on?: Maybe<Array<UserOrganization_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserOrganization_Order_By>>;
  where?: Maybe<UserOrganization_Bool_Exp>;
};


export type Query_RootUserOrganizationPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<UserOrganizationPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserOrganizationPrivateVd_Order_By>>;
  where?: Maybe<UserOrganizationPrivateVd_Bool_Exp>;
};


export type Query_RootUserOrganizationPrivateVdsArgs = {
  distinct_on?: Maybe<Array<UserOrganizationPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserOrganizationPrivateVd_Order_By>>;
  where?: Maybe<UserOrganizationPrivateVd_Bool_Exp>;
};


export type Query_RootUserOrganizationsArgs = {
  distinct_on?: Maybe<Array<UserOrganization_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserOrganization_Order_By>>;
  where?: Maybe<UserOrganization_Bool_Exp>;
};


export type Query_RootUserPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<UserPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserPrivateVd_Order_By>>;
  where?: Maybe<UserPrivateVd_Bool_Exp>;
};


export type Query_RootUserPrivateVdsArgs = {
  distinct_on?: Maybe<Array<UserPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserPrivateVd_Order_By>>;
  where?: Maybe<UserPrivateVd_Bool_Exp>;
};


export type Query_RootUserProjectArgs = {
  id: Scalars['bigint'];
};


export type Query_RootUserProjectAggregateArgs = {
  distinct_on?: Maybe<Array<UserProject_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserProject_Order_By>>;
  where?: Maybe<UserProject_Bool_Exp>;
};


export type Query_RootUserProjectPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<UserProjectPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserProjectPrivateVd_Order_By>>;
  where?: Maybe<UserProjectPrivateVd_Bool_Exp>;
};


export type Query_RootUserProjectPrivateVdsArgs = {
  distinct_on?: Maybe<Array<UserProjectPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserProjectPrivateVd_Order_By>>;
  where?: Maybe<UserProjectPrivateVd_Bool_Exp>;
};


export type Query_RootUserProjectsArgs = {
  distinct_on?: Maybe<Array<UserProject_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserProject_Order_By>>;
  where?: Maybe<UserProject_Bool_Exp>;
};


export type Query_RootUserSettingArgs = {
  id: Scalars['bigint'];
};


export type Query_RootUserSettingAggregateArgs = {
  distinct_on?: Maybe<Array<UserSetting_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserSetting_Order_By>>;
  where?: Maybe<UserSetting_Bool_Exp>;
};


export type Query_RootUserSettingPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<UserSettingPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserSettingPrivateVd_Order_By>>;
  where?: Maybe<UserSettingPrivateVd_Bool_Exp>;
};


export type Query_RootUserSettingPrivateVdsArgs = {
  distinct_on?: Maybe<Array<UserSettingPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserSettingPrivateVd_Order_By>>;
  where?: Maybe<UserSettingPrivateVd_Bool_Exp>;
};


export type Query_RootUserSettingsArgs = {
  distinct_on?: Maybe<Array<UserSetting_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserSetting_Order_By>>;
  where?: Maybe<UserSetting_Bool_Exp>;
};


export type Query_RootUserUserGroupArgs = {
  id: Scalars['bigint'];
};


export type Query_RootUserUserGroupAggregateArgs = {
  distinct_on?: Maybe<Array<UserUserGroup_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserUserGroup_Order_By>>;
  where?: Maybe<UserUserGroup_Bool_Exp>;
};


export type Query_RootUserUserGroupPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<UserUserGroupPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserUserGroupPrivateVd_Order_By>>;
  where?: Maybe<UserUserGroupPrivateVd_Bool_Exp>;
};


export type Query_RootUserUserGroupPrivateVdsArgs = {
  distinct_on?: Maybe<Array<UserUserGroupPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserUserGroupPrivateVd_Order_By>>;
  where?: Maybe<UserUserGroupPrivateVd_Bool_Exp>;
};


export type Query_RootUserUserGroupsArgs = {
  distinct_on?: Maybe<Array<UserUserGroup_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserUserGroup_Order_By>>;
  where?: Maybe<UserUserGroup_Bool_Exp>;
};


export type Query_RootUsersArgs = {
  distinct_on?: Maybe<Array<User_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<User_Order_By>>;
  where?: Maybe<User_Bool_Exp>;
};

/** columns and relationships of "tbl_recipient_info" */
export type RecipientInfo = {
  __typename?: 'recipientInfo';
  address?: Maybe<Scalars['String']>;
  area?: Maybe<Scalars['String']>;
  /** An object relationship */
  asDefaultTo: User;
  as_default_to?: Maybe<Scalars['bigint']>;
  configName?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  email1?: Maybe<Scalars['String']>;
  email2?: Maybe<Scalars['String']>;
  id: Scalars['bigint'];
  memo?: Maybe<Scalars['String']>;
  mobile?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  phone1?: Maybe<Scalars['String']>;
  phone2?: Maybe<Scalars['String']>;
  /** An object relationship */
  privateVd?: Maybe<RecipientInfoPrivateVd>;
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user: User;
  user_id?: Maybe<Scalars['bigint']>;
  zipcode?: Maybe<Scalars['String']>;
};


/** columns and relationships of "tbl_recipient_info" */
export type RecipientInfoDataArgs = {
  path?: Maybe<Scalars['String']>;
};

/** columns and relationships of "view_recipient_info_private_vd" */
export type RecipientInfoPrivateVd = {
  __typename?: 'recipientInfoPrivateVd';
  address?: Maybe<Scalars['String']>;
  area?: Maybe<Scalars['String']>;
  /** An object relationship */
  asDefaultTo?: Maybe<User>;
  as_default_to?: Maybe<Scalars['bigint']>;
  configName?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  email1?: Maybe<Scalars['String']>;
  email2?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  memo?: Maybe<Scalars['String']>;
  mobile?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  phone1?: Maybe<Scalars['String']>;
  phone2?: Maybe<Scalars['String']>;
  /** An object relationship */
  publicData?: Maybe<RecipientInfo>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  user?: Maybe<User>;
  user_id?: Maybe<Scalars['bigint']>;
  zipcode?: Maybe<Scalars['String']>;
};


/** columns and relationships of "view_recipient_info_private_vd" */
export type RecipientInfoPrivateVdDataArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "view_recipient_info_private_vd" */
export type RecipientInfoPrivateVd_Aggregate = {
  __typename?: 'recipientInfoPrivateVd_aggregate';
  aggregate?: Maybe<RecipientInfoPrivateVd_Aggregate_Fields>;
  nodes: Array<RecipientInfoPrivateVd>;
};

/** aggregate fields of "view_recipient_info_private_vd" */
export type RecipientInfoPrivateVd_Aggregate_Fields = {
  __typename?: 'recipientInfoPrivateVd_aggregate_fields';
  avg?: Maybe<RecipientInfoPrivateVd_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<RecipientInfoPrivateVd_Max_Fields>;
  min?: Maybe<RecipientInfoPrivateVd_Min_Fields>;
  stddev?: Maybe<RecipientInfoPrivateVd_Stddev_Fields>;
  stddev_pop?: Maybe<RecipientInfoPrivateVd_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<RecipientInfoPrivateVd_Stddev_Samp_Fields>;
  sum?: Maybe<RecipientInfoPrivateVd_Sum_Fields>;
  var_pop?: Maybe<RecipientInfoPrivateVd_Var_Pop_Fields>;
  var_samp?: Maybe<RecipientInfoPrivateVd_Var_Samp_Fields>;
  variance?: Maybe<RecipientInfoPrivateVd_Variance_Fields>;
};


/** aggregate fields of "view_recipient_info_private_vd" */
export type RecipientInfoPrivateVd_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<RecipientInfoPrivateVd_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type RecipientInfoPrivateVd_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type RecipientInfoPrivateVd_Avg_Fields = {
  __typename?: 'recipientInfoPrivateVd_avg_fields';
  as_default_to?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "view_recipient_info_private_vd". All fields are combined with a logical 'AND'. */
export type RecipientInfoPrivateVd_Bool_Exp = {
  _and?: Maybe<Array<RecipientInfoPrivateVd_Bool_Exp>>;
  _not?: Maybe<RecipientInfoPrivateVd_Bool_Exp>;
  _or?: Maybe<Array<RecipientInfoPrivateVd_Bool_Exp>>;
  address?: Maybe<String_Comparison_Exp>;
  area?: Maybe<String_Comparison_Exp>;
  asDefaultTo?: Maybe<User_Bool_Exp>;
  as_default_to?: Maybe<Bigint_Comparison_Exp>;
  configName?: Maybe<String_Comparison_Exp>;
  country?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  email1?: Maybe<String_Comparison_Exp>;
  email2?: Maybe<String_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  memo?: Maybe<String_Comparison_Exp>;
  mobile?: Maybe<String_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  phone1?: Maybe<String_Comparison_Exp>;
  phone2?: Maybe<String_Comparison_Exp>;
  publicData?: Maybe<RecipientInfo_Bool_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<User_Bool_Exp>;
  user_id?: Maybe<Bigint_Comparison_Exp>;
  zipcode?: Maybe<String_Comparison_Exp>;
};

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type RecipientInfoPrivateVd_Delete_At_Path_Input = {
  data?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type RecipientInfoPrivateVd_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type RecipientInfoPrivateVd_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "view_recipient_info_private_vd" */
export type RecipientInfoPrivateVd_Inc_Input = {
  as_default_to?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "view_recipient_info_private_vd" */
export type RecipientInfoPrivateVd_Insert_Input = {
  address?: Maybe<Scalars['String']>;
  area?: Maybe<Scalars['String']>;
  asDefaultTo?: Maybe<User_Obj_Rel_Insert_Input>;
  as_default_to?: Maybe<Scalars['bigint']>;
  configName?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  email1?: Maybe<Scalars['String']>;
  email2?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  memo?: Maybe<Scalars['String']>;
  mobile?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  phone1?: Maybe<Scalars['String']>;
  phone2?: Maybe<Scalars['String']>;
  publicData?: Maybe<RecipientInfo_Obj_Rel_Insert_Input>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<User_Obj_Rel_Insert_Input>;
  user_id?: Maybe<Scalars['bigint']>;
  zipcode?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type RecipientInfoPrivateVd_Max_Fields = {
  __typename?: 'recipientInfoPrivateVd_max_fields';
  address?: Maybe<Scalars['String']>;
  area?: Maybe<Scalars['String']>;
  as_default_to?: Maybe<Scalars['bigint']>;
  configName?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  email1?: Maybe<Scalars['String']>;
  email2?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  memo?: Maybe<Scalars['String']>;
  mobile?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  phone1?: Maybe<Scalars['String']>;
  phone2?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
  zipcode?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type RecipientInfoPrivateVd_Min_Fields = {
  __typename?: 'recipientInfoPrivateVd_min_fields';
  address?: Maybe<Scalars['String']>;
  area?: Maybe<Scalars['String']>;
  as_default_to?: Maybe<Scalars['bigint']>;
  configName?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  email1?: Maybe<Scalars['String']>;
  email2?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  memo?: Maybe<Scalars['String']>;
  mobile?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  phone1?: Maybe<Scalars['String']>;
  phone2?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
  zipcode?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "view_recipient_info_private_vd" */
export type RecipientInfoPrivateVd_Mutation_Response = {
  __typename?: 'recipientInfoPrivateVd_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<RecipientInfoPrivateVd>;
};

/** input type for inserting object relation for remote table "view_recipient_info_private_vd" */
export type RecipientInfoPrivateVd_Obj_Rel_Insert_Input = {
  data: RecipientInfoPrivateVd_Insert_Input;
};

/** Ordering options when selecting data from "view_recipient_info_private_vd". */
export type RecipientInfoPrivateVd_Order_By = {
  address?: Maybe<Order_By>;
  area?: Maybe<Order_By>;
  asDefaultTo?: Maybe<User_Order_By>;
  as_default_to?: Maybe<Order_By>;
  configName?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  email1?: Maybe<Order_By>;
  email2?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  memo?: Maybe<Order_By>;
  mobile?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  phone1?: Maybe<Order_By>;
  phone2?: Maybe<Order_By>;
  publicData?: Maybe<RecipientInfo_Order_By>;
  updated_at?: Maybe<Order_By>;
  user?: Maybe<User_Order_By>;
  user_id?: Maybe<Order_By>;
  zipcode?: Maybe<Order_By>;
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type RecipientInfoPrivateVd_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "view_recipient_info_private_vd" */
export enum RecipientInfoPrivateVd_Select_Column {
  /** column name */
  Address = 'address',
  /** column name */
  Area = 'area',
  /** column name */
  AsDefaultTo = 'as_default_to',
  /** column name */
  ConfigName = 'configName',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Email1 = 'email1',
  /** column name */
  Email2 = 'email2',
  /** column name */
  Id = 'id',
  /** column name */
  Memo = 'memo',
  /** column name */
  Mobile = 'mobile',
  /** column name */
  Name = 'name',
  /** column name */
  Phone1 = 'phone1',
  /** column name */
  Phone2 = 'phone2',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id',
  /** column name */
  Zipcode = 'zipcode'
}

/** input type for updating data in table "view_recipient_info_private_vd" */
export type RecipientInfoPrivateVd_Set_Input = {
  address?: Maybe<Scalars['String']>;
  area?: Maybe<Scalars['String']>;
  as_default_to?: Maybe<Scalars['bigint']>;
  configName?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  email1?: Maybe<Scalars['String']>;
  email2?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  memo?: Maybe<Scalars['String']>;
  mobile?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  phone1?: Maybe<Scalars['String']>;
  phone2?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
  zipcode?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type RecipientInfoPrivateVd_Stddev_Fields = {
  __typename?: 'recipientInfoPrivateVd_stddev_fields';
  as_default_to?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type RecipientInfoPrivateVd_Stddev_Pop_Fields = {
  __typename?: 'recipientInfoPrivateVd_stddev_pop_fields';
  as_default_to?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type RecipientInfoPrivateVd_Stddev_Samp_Fields = {
  __typename?: 'recipientInfoPrivateVd_stddev_samp_fields';
  as_default_to?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type RecipientInfoPrivateVd_Sum_Fields = {
  __typename?: 'recipientInfoPrivateVd_sum_fields';
  as_default_to?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate var_pop on columns */
export type RecipientInfoPrivateVd_Var_Pop_Fields = {
  __typename?: 'recipientInfoPrivateVd_var_pop_fields';
  as_default_to?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type RecipientInfoPrivateVd_Var_Samp_Fields = {
  __typename?: 'recipientInfoPrivateVd_var_samp_fields';
  as_default_to?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type RecipientInfoPrivateVd_Variance_Fields = {
  __typename?: 'recipientInfoPrivateVd_variance_fields';
  as_default_to?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregated selection of "tbl_recipient_info" */
export type RecipientInfo_Aggregate = {
  __typename?: 'recipientInfo_aggregate';
  aggregate?: Maybe<RecipientInfo_Aggregate_Fields>;
  nodes: Array<RecipientInfo>;
};

/** aggregate fields of "tbl_recipient_info" */
export type RecipientInfo_Aggregate_Fields = {
  __typename?: 'recipientInfo_aggregate_fields';
  avg?: Maybe<RecipientInfo_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<RecipientInfo_Max_Fields>;
  min?: Maybe<RecipientInfo_Min_Fields>;
  stddev?: Maybe<RecipientInfo_Stddev_Fields>;
  stddev_pop?: Maybe<RecipientInfo_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<RecipientInfo_Stddev_Samp_Fields>;
  sum?: Maybe<RecipientInfo_Sum_Fields>;
  var_pop?: Maybe<RecipientInfo_Var_Pop_Fields>;
  var_samp?: Maybe<RecipientInfo_Var_Samp_Fields>;
  variance?: Maybe<RecipientInfo_Variance_Fields>;
};


/** aggregate fields of "tbl_recipient_info" */
export type RecipientInfo_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<RecipientInfo_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "tbl_recipient_info" */
export type RecipientInfo_Aggregate_Order_By = {
  avg?: Maybe<RecipientInfo_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<RecipientInfo_Max_Order_By>;
  min?: Maybe<RecipientInfo_Min_Order_By>;
  stddev?: Maybe<RecipientInfo_Stddev_Order_By>;
  stddev_pop?: Maybe<RecipientInfo_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<RecipientInfo_Stddev_Samp_Order_By>;
  sum?: Maybe<RecipientInfo_Sum_Order_By>;
  var_pop?: Maybe<RecipientInfo_Var_Pop_Order_By>;
  var_samp?: Maybe<RecipientInfo_Var_Samp_Order_By>;
  variance?: Maybe<RecipientInfo_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type RecipientInfo_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "tbl_recipient_info" */
export type RecipientInfo_Arr_Rel_Insert_Input = {
  data: Array<RecipientInfo_Insert_Input>;
  /** on conflict condition */
  on_conflict?: Maybe<RecipientInfo_On_Conflict>;
};

/** aggregate avg on columns */
export type RecipientInfo_Avg_Fields = {
  __typename?: 'recipientInfo_avg_fields';
  as_default_to?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "tbl_recipient_info" */
export type RecipientInfo_Avg_Order_By = {
  as_default_to?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "tbl_recipient_info". All fields are combined with a logical 'AND'. */
export type RecipientInfo_Bool_Exp = {
  _and?: Maybe<Array<RecipientInfo_Bool_Exp>>;
  _not?: Maybe<RecipientInfo_Bool_Exp>;
  _or?: Maybe<Array<RecipientInfo_Bool_Exp>>;
  address?: Maybe<String_Comparison_Exp>;
  area?: Maybe<String_Comparison_Exp>;
  asDefaultTo?: Maybe<User_Bool_Exp>;
  as_default_to?: Maybe<Bigint_Comparison_Exp>;
  configName?: Maybe<String_Comparison_Exp>;
  country?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  email1?: Maybe<String_Comparison_Exp>;
  email2?: Maybe<String_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  memo?: Maybe<String_Comparison_Exp>;
  mobile?: Maybe<String_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  phone1?: Maybe<String_Comparison_Exp>;
  phone2?: Maybe<String_Comparison_Exp>;
  privateVd?: Maybe<RecipientInfoPrivateVd_Bool_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<User_Bool_Exp>;
  user_id?: Maybe<Bigint_Comparison_Exp>;
  zipcode?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "tbl_recipient_info" */
export enum RecipientInfo_Constraint {
  /** unique or primary key constraint */
  TblRecipientInfoPkey = 'tbl_recipient_info_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type RecipientInfo_Delete_At_Path_Input = {
  data?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type RecipientInfo_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type RecipientInfo_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "tbl_recipient_info" */
export type RecipientInfo_Inc_Input = {
  as_default_to?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "tbl_recipient_info" */
export type RecipientInfo_Insert_Input = {
  address?: Maybe<Scalars['String']>;
  area?: Maybe<Scalars['String']>;
  asDefaultTo?: Maybe<User_Obj_Rel_Insert_Input>;
  as_default_to?: Maybe<Scalars['bigint']>;
  configName?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  email1?: Maybe<Scalars['String']>;
  email2?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  memo?: Maybe<Scalars['String']>;
  mobile?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  phone1?: Maybe<Scalars['String']>;
  phone2?: Maybe<Scalars['String']>;
  privateVd?: Maybe<RecipientInfoPrivateVd_Obj_Rel_Insert_Input>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<User_Obj_Rel_Insert_Input>;
  user_id?: Maybe<Scalars['bigint']>;
  zipcode?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type RecipientInfo_Max_Fields = {
  __typename?: 'recipientInfo_max_fields';
  address?: Maybe<Scalars['String']>;
  area?: Maybe<Scalars['String']>;
  as_default_to?: Maybe<Scalars['bigint']>;
  configName?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  email1?: Maybe<Scalars['String']>;
  email2?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  memo?: Maybe<Scalars['String']>;
  mobile?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  phone1?: Maybe<Scalars['String']>;
  phone2?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
  zipcode?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "tbl_recipient_info" */
export type RecipientInfo_Max_Order_By = {
  address?: Maybe<Order_By>;
  area?: Maybe<Order_By>;
  as_default_to?: Maybe<Order_By>;
  configName?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  email1?: Maybe<Order_By>;
  email2?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  memo?: Maybe<Order_By>;
  mobile?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  phone1?: Maybe<Order_By>;
  phone2?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
  zipcode?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type RecipientInfo_Min_Fields = {
  __typename?: 'recipientInfo_min_fields';
  address?: Maybe<Scalars['String']>;
  area?: Maybe<Scalars['String']>;
  as_default_to?: Maybe<Scalars['bigint']>;
  configName?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  email1?: Maybe<Scalars['String']>;
  email2?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  memo?: Maybe<Scalars['String']>;
  mobile?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  phone1?: Maybe<Scalars['String']>;
  phone2?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
  zipcode?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "tbl_recipient_info" */
export type RecipientInfo_Min_Order_By = {
  address?: Maybe<Order_By>;
  area?: Maybe<Order_By>;
  as_default_to?: Maybe<Order_By>;
  configName?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  email1?: Maybe<Order_By>;
  email2?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  memo?: Maybe<Order_By>;
  mobile?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  phone1?: Maybe<Order_By>;
  phone2?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
  zipcode?: Maybe<Order_By>;
};

/** response of any mutation on the table "tbl_recipient_info" */
export type RecipientInfo_Mutation_Response = {
  __typename?: 'recipientInfo_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<RecipientInfo>;
};

/** input type for inserting object relation for remote table "tbl_recipient_info" */
export type RecipientInfo_Obj_Rel_Insert_Input = {
  data: RecipientInfo_Insert_Input;
  /** on conflict condition */
  on_conflict?: Maybe<RecipientInfo_On_Conflict>;
};

/** on conflict condition type for table "tbl_recipient_info" */
export type RecipientInfo_On_Conflict = {
  constraint: RecipientInfo_Constraint;
  update_columns: Array<RecipientInfo_Update_Column>;
  where?: Maybe<RecipientInfo_Bool_Exp>;
};

/** Ordering options when selecting data from "tbl_recipient_info". */
export type RecipientInfo_Order_By = {
  address?: Maybe<Order_By>;
  area?: Maybe<Order_By>;
  asDefaultTo?: Maybe<User_Order_By>;
  as_default_to?: Maybe<Order_By>;
  configName?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  email1?: Maybe<Order_By>;
  email2?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  memo?: Maybe<Order_By>;
  mobile?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  phone1?: Maybe<Order_By>;
  phone2?: Maybe<Order_By>;
  privateVd?: Maybe<RecipientInfoPrivateVd_Order_By>;
  updated_at?: Maybe<Order_By>;
  user?: Maybe<User_Order_By>;
  user_id?: Maybe<Order_By>;
  zipcode?: Maybe<Order_By>;
};

/** primary key columns input for table: recipientInfo */
export type RecipientInfo_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type RecipientInfo_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "tbl_recipient_info" */
export enum RecipientInfo_Select_Column {
  /** column name */
  Address = 'address',
  /** column name */
  Area = 'area',
  /** column name */
  AsDefaultTo = 'as_default_to',
  /** column name */
  ConfigName = 'configName',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Email1 = 'email1',
  /** column name */
  Email2 = 'email2',
  /** column name */
  Id = 'id',
  /** column name */
  Memo = 'memo',
  /** column name */
  Mobile = 'mobile',
  /** column name */
  Name = 'name',
  /** column name */
  Phone1 = 'phone1',
  /** column name */
  Phone2 = 'phone2',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id',
  /** column name */
  Zipcode = 'zipcode'
}

/** input type for updating data in table "tbl_recipient_info" */
export type RecipientInfo_Set_Input = {
  address?: Maybe<Scalars['String']>;
  area?: Maybe<Scalars['String']>;
  as_default_to?: Maybe<Scalars['bigint']>;
  configName?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  email1?: Maybe<Scalars['String']>;
  email2?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  memo?: Maybe<Scalars['String']>;
  mobile?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  phone1?: Maybe<Scalars['String']>;
  phone2?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
  zipcode?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type RecipientInfo_Stddev_Fields = {
  __typename?: 'recipientInfo_stddev_fields';
  as_default_to?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "tbl_recipient_info" */
export type RecipientInfo_Stddev_Order_By = {
  as_default_to?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type RecipientInfo_Stddev_Pop_Fields = {
  __typename?: 'recipientInfo_stddev_pop_fields';
  as_default_to?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "tbl_recipient_info" */
export type RecipientInfo_Stddev_Pop_Order_By = {
  as_default_to?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type RecipientInfo_Stddev_Samp_Fields = {
  __typename?: 'recipientInfo_stddev_samp_fields';
  as_default_to?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "tbl_recipient_info" */
export type RecipientInfo_Stddev_Samp_Order_By = {
  as_default_to?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type RecipientInfo_Sum_Fields = {
  __typename?: 'recipientInfo_sum_fields';
  as_default_to?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "tbl_recipient_info" */
export type RecipientInfo_Sum_Order_By = {
  as_default_to?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** update columns of table "tbl_recipient_info" */
export enum RecipientInfo_Update_Column {
  /** column name */
  Address = 'address',
  /** column name */
  Area = 'area',
  /** column name */
  AsDefaultTo = 'as_default_to',
  /** column name */
  ConfigName = 'configName',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Email1 = 'email1',
  /** column name */
  Email2 = 'email2',
  /** column name */
  Id = 'id',
  /** column name */
  Memo = 'memo',
  /** column name */
  Mobile = 'mobile',
  /** column name */
  Name = 'name',
  /** column name */
  Phone1 = 'phone1',
  /** column name */
  Phone2 = 'phone2',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id',
  /** column name */
  Zipcode = 'zipcode'
}

/** aggregate var_pop on columns */
export type RecipientInfo_Var_Pop_Fields = {
  __typename?: 'recipientInfo_var_pop_fields';
  as_default_to?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "tbl_recipient_info" */
export type RecipientInfo_Var_Pop_Order_By = {
  as_default_to?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type RecipientInfo_Var_Samp_Fields = {
  __typename?: 'recipientInfo_var_samp_fields';
  as_default_to?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "tbl_recipient_info" */
export type RecipientInfo_Var_Samp_Order_By = {
  as_default_to?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type RecipientInfo_Variance_Fields = {
  __typename?: 'recipientInfo_variance_fields';
  as_default_to?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "tbl_recipient_info" */
export type RecipientInfo_Variance_Order_By = {
  as_default_to?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** columns and relationships of "tbl_recovery_token" */
export type RecoveryToken = {
  __typename?: 'recoveryToken';
  /** An object relationship */
  accountLink: AccountLink;
  account_link_id?: Maybe<Scalars['bigint']>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id: Scalars['bigint'];
  key?: Maybe<Scalars['String']>;
  token?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "tbl_recovery_token" */
export type RecoveryToken_Aggregate = {
  __typename?: 'recoveryToken_aggregate';
  aggregate?: Maybe<RecoveryToken_Aggregate_Fields>;
  nodes: Array<RecoveryToken>;
};

/** aggregate fields of "tbl_recovery_token" */
export type RecoveryToken_Aggregate_Fields = {
  __typename?: 'recoveryToken_aggregate_fields';
  avg?: Maybe<RecoveryToken_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<RecoveryToken_Max_Fields>;
  min?: Maybe<RecoveryToken_Min_Fields>;
  stddev?: Maybe<RecoveryToken_Stddev_Fields>;
  stddev_pop?: Maybe<RecoveryToken_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<RecoveryToken_Stddev_Samp_Fields>;
  sum?: Maybe<RecoveryToken_Sum_Fields>;
  var_pop?: Maybe<RecoveryToken_Var_Pop_Fields>;
  var_samp?: Maybe<RecoveryToken_Var_Samp_Fields>;
  variance?: Maybe<RecoveryToken_Variance_Fields>;
};


/** aggregate fields of "tbl_recovery_token" */
export type RecoveryToken_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<RecoveryToken_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "tbl_recovery_token" */
export type RecoveryToken_Aggregate_Order_By = {
  avg?: Maybe<RecoveryToken_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<RecoveryToken_Max_Order_By>;
  min?: Maybe<RecoveryToken_Min_Order_By>;
  stddev?: Maybe<RecoveryToken_Stddev_Order_By>;
  stddev_pop?: Maybe<RecoveryToken_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<RecoveryToken_Stddev_Samp_Order_By>;
  sum?: Maybe<RecoveryToken_Sum_Order_By>;
  var_pop?: Maybe<RecoveryToken_Var_Pop_Order_By>;
  var_samp?: Maybe<RecoveryToken_Var_Samp_Order_By>;
  variance?: Maybe<RecoveryToken_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "tbl_recovery_token" */
export type RecoveryToken_Arr_Rel_Insert_Input = {
  data: Array<RecoveryToken_Insert_Input>;
  /** on conflict condition */
  on_conflict?: Maybe<RecoveryToken_On_Conflict>;
};

/** aggregate avg on columns */
export type RecoveryToken_Avg_Fields = {
  __typename?: 'recoveryToken_avg_fields';
  account_link_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "tbl_recovery_token" */
export type RecoveryToken_Avg_Order_By = {
  account_link_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "tbl_recovery_token". All fields are combined with a logical 'AND'. */
export type RecoveryToken_Bool_Exp = {
  _and?: Maybe<Array<RecoveryToken_Bool_Exp>>;
  _not?: Maybe<RecoveryToken_Bool_Exp>;
  _or?: Maybe<Array<RecoveryToken_Bool_Exp>>;
  accountLink?: Maybe<AccountLink_Bool_Exp>;
  account_link_id?: Maybe<Bigint_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  key?: Maybe<String_Comparison_Exp>;
  token?: Maybe<String_Comparison_Exp>;
  type?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "tbl_recovery_token" */
export enum RecoveryToken_Constraint {
  /** unique or primary key constraint */
  OnlyOneResetPasswordTokenForAccountLink = 'only_one_reset_password_token_for_account_link',
  /** unique or primary key constraint */
  ResetPasswordKeyShouldBeUnique = 'reset_password_key_should_be_unique',
  /** unique or primary key constraint */
  ResetPasswordTokenShouldBeUnique = 'reset_password_token_should_be_unique',
  /** unique or primary key constraint */
  TblRecoveryTokenPkey = 'tbl_recovery_token_pkey'
}

/** input type for incrementing numeric columns in table "tbl_recovery_token" */
export type RecoveryToken_Inc_Input = {
  account_link_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "tbl_recovery_token" */
export type RecoveryToken_Insert_Input = {
  accountLink?: Maybe<AccountLink_Obj_Rel_Insert_Input>;
  account_link_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  key?: Maybe<Scalars['String']>;
  token?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type RecoveryToken_Max_Fields = {
  __typename?: 'recoveryToken_max_fields';
  account_link_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  key?: Maybe<Scalars['String']>;
  token?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "tbl_recovery_token" */
export type RecoveryToken_Max_Order_By = {
  account_link_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  key?: Maybe<Order_By>;
  token?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type RecoveryToken_Min_Fields = {
  __typename?: 'recoveryToken_min_fields';
  account_link_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  key?: Maybe<Scalars['String']>;
  token?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "tbl_recovery_token" */
export type RecoveryToken_Min_Order_By = {
  account_link_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  key?: Maybe<Order_By>;
  token?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "tbl_recovery_token" */
export type RecoveryToken_Mutation_Response = {
  __typename?: 'recoveryToken_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<RecoveryToken>;
};

/** on conflict condition type for table "tbl_recovery_token" */
export type RecoveryToken_On_Conflict = {
  constraint: RecoveryToken_Constraint;
  update_columns: Array<RecoveryToken_Update_Column>;
  where?: Maybe<RecoveryToken_Bool_Exp>;
};

/** Ordering options when selecting data from "tbl_recovery_token". */
export type RecoveryToken_Order_By = {
  accountLink?: Maybe<AccountLink_Order_By>;
  account_link_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  key?: Maybe<Order_By>;
  token?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: recoveryToken */
export type RecoveryToken_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** select columns of table "tbl_recovery_token" */
export enum RecoveryToken_Select_Column {
  /** column name */
  AccountLinkId = 'account_link_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  Key = 'key',
  /** column name */
  Token = 'token',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "tbl_recovery_token" */
export type RecoveryToken_Set_Input = {
  account_link_id?: Maybe<Scalars['bigint']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  key?: Maybe<Scalars['String']>;
  token?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type RecoveryToken_Stddev_Fields = {
  __typename?: 'recoveryToken_stddev_fields';
  account_link_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "tbl_recovery_token" */
export type RecoveryToken_Stddev_Order_By = {
  account_link_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type RecoveryToken_Stddev_Pop_Fields = {
  __typename?: 'recoveryToken_stddev_pop_fields';
  account_link_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "tbl_recovery_token" */
export type RecoveryToken_Stddev_Pop_Order_By = {
  account_link_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type RecoveryToken_Stddev_Samp_Fields = {
  __typename?: 'recoveryToken_stddev_samp_fields';
  account_link_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "tbl_recovery_token" */
export type RecoveryToken_Stddev_Samp_Order_By = {
  account_link_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type RecoveryToken_Sum_Fields = {
  __typename?: 'recoveryToken_sum_fields';
  account_link_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "tbl_recovery_token" */
export type RecoveryToken_Sum_Order_By = {
  account_link_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** update columns of table "tbl_recovery_token" */
export enum RecoveryToken_Update_Column {
  /** column name */
  AccountLinkId = 'account_link_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  Key = 'key',
  /** column name */
  Token = 'token',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type RecoveryToken_Var_Pop_Fields = {
  __typename?: 'recoveryToken_var_pop_fields';
  account_link_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "tbl_recovery_token" */
export type RecoveryToken_Var_Pop_Order_By = {
  account_link_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type RecoveryToken_Var_Samp_Fields = {
  __typename?: 'recoveryToken_var_samp_fields';
  account_link_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "tbl_recovery_token" */
export type RecoveryToken_Var_Samp_Order_By = {
  account_link_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type RecoveryToken_Variance_Fields = {
  __typename?: 'recoveryToken_variance_fields';
  account_link_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "tbl_recovery_token" */
export type RecoveryToken_Variance_Order_By = {
  account_link_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** columns and relationships of "tbl_shipping_fee" */
export type ShippingFee = {
  __typename?: 'shippingFee';
  countryCode?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id: Scalars['bigint'];
  price?: Maybe<Scalars['Int']>;
  /** An object relationship */
  privateVd?: Maybe<ShippingFeePrivateVd>;
  updated_at: Scalars['timestamptz'];
  weight?: Maybe<Scalars['float8']>;
};

/** columns and relationships of "view_shipping_fee_private_vd" */
export type ShippingFeePrivateVd = {
  __typename?: 'shippingFeePrivateVd';
  countryCode?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  /** An object relationship */
  publicData?: Maybe<ShippingFee>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  weight?: Maybe<Scalars['float8']>;
};

/** aggregated selection of "view_shipping_fee_private_vd" */
export type ShippingFeePrivateVd_Aggregate = {
  __typename?: 'shippingFeePrivateVd_aggregate';
  aggregate?: Maybe<ShippingFeePrivateVd_Aggregate_Fields>;
  nodes: Array<ShippingFeePrivateVd>;
};

/** aggregate fields of "view_shipping_fee_private_vd" */
export type ShippingFeePrivateVd_Aggregate_Fields = {
  __typename?: 'shippingFeePrivateVd_aggregate_fields';
  avg?: Maybe<ShippingFeePrivateVd_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<ShippingFeePrivateVd_Max_Fields>;
  min?: Maybe<ShippingFeePrivateVd_Min_Fields>;
  stddev?: Maybe<ShippingFeePrivateVd_Stddev_Fields>;
  stddev_pop?: Maybe<ShippingFeePrivateVd_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ShippingFeePrivateVd_Stddev_Samp_Fields>;
  sum?: Maybe<ShippingFeePrivateVd_Sum_Fields>;
  var_pop?: Maybe<ShippingFeePrivateVd_Var_Pop_Fields>;
  var_samp?: Maybe<ShippingFeePrivateVd_Var_Samp_Fields>;
  variance?: Maybe<ShippingFeePrivateVd_Variance_Fields>;
};


/** aggregate fields of "view_shipping_fee_private_vd" */
export type ShippingFeePrivateVd_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<ShippingFeePrivateVd_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type ShippingFeePrivateVd_Avg_Fields = {
  __typename?: 'shippingFeePrivateVd_avg_fields';
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  weight?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "view_shipping_fee_private_vd". All fields are combined with a logical 'AND'. */
export type ShippingFeePrivateVd_Bool_Exp = {
  _and?: Maybe<Array<ShippingFeePrivateVd_Bool_Exp>>;
  _not?: Maybe<ShippingFeePrivateVd_Bool_Exp>;
  _or?: Maybe<Array<ShippingFeePrivateVd_Bool_Exp>>;
  countryCode?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  price?: Maybe<Int_Comparison_Exp>;
  publicData?: Maybe<ShippingFee_Bool_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  weight?: Maybe<Float8_Comparison_Exp>;
};

/** input type for incrementing numeric columns in table "view_shipping_fee_private_vd" */
export type ShippingFeePrivateVd_Inc_Input = {
  id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  weight?: Maybe<Scalars['float8']>;
};

/** input type for inserting data into table "view_shipping_fee_private_vd" */
export type ShippingFeePrivateVd_Insert_Input = {
  countryCode?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  publicData?: Maybe<ShippingFee_Obj_Rel_Insert_Input>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  weight?: Maybe<Scalars['float8']>;
};

/** aggregate max on columns */
export type ShippingFeePrivateVd_Max_Fields = {
  __typename?: 'shippingFeePrivateVd_max_fields';
  countryCode?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  weight?: Maybe<Scalars['float8']>;
};

/** aggregate min on columns */
export type ShippingFeePrivateVd_Min_Fields = {
  __typename?: 'shippingFeePrivateVd_min_fields';
  countryCode?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  weight?: Maybe<Scalars['float8']>;
};

/** response of any mutation on the table "view_shipping_fee_private_vd" */
export type ShippingFeePrivateVd_Mutation_Response = {
  __typename?: 'shippingFeePrivateVd_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<ShippingFeePrivateVd>;
};

/** input type for inserting object relation for remote table "view_shipping_fee_private_vd" */
export type ShippingFeePrivateVd_Obj_Rel_Insert_Input = {
  data: ShippingFeePrivateVd_Insert_Input;
};

/** Ordering options when selecting data from "view_shipping_fee_private_vd". */
export type ShippingFeePrivateVd_Order_By = {
  countryCode?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  publicData?: Maybe<ShippingFee_Order_By>;
  updated_at?: Maybe<Order_By>;
  weight?: Maybe<Order_By>;
};

/** select columns of table "view_shipping_fee_private_vd" */
export enum ShippingFeePrivateVd_Select_Column {
  /** column name */
  CountryCode = 'countryCode',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  Price = 'price',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Weight = 'weight'
}

/** input type for updating data in table "view_shipping_fee_private_vd" */
export type ShippingFeePrivateVd_Set_Input = {
  countryCode?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  weight?: Maybe<Scalars['float8']>;
};

/** aggregate stddev on columns */
export type ShippingFeePrivateVd_Stddev_Fields = {
  __typename?: 'shippingFeePrivateVd_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  weight?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type ShippingFeePrivateVd_Stddev_Pop_Fields = {
  __typename?: 'shippingFeePrivateVd_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  weight?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type ShippingFeePrivateVd_Stddev_Samp_Fields = {
  __typename?: 'shippingFeePrivateVd_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  weight?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type ShippingFeePrivateVd_Sum_Fields = {
  __typename?: 'shippingFeePrivateVd_sum_fields';
  id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  weight?: Maybe<Scalars['float8']>;
};

/** aggregate var_pop on columns */
export type ShippingFeePrivateVd_Var_Pop_Fields = {
  __typename?: 'shippingFeePrivateVd_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  weight?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type ShippingFeePrivateVd_Var_Samp_Fields = {
  __typename?: 'shippingFeePrivateVd_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  weight?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type ShippingFeePrivateVd_Variance_Fields = {
  __typename?: 'shippingFeePrivateVd_variance_fields';
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  weight?: Maybe<Scalars['Float']>;
};

/** aggregated selection of "tbl_shipping_fee" */
export type ShippingFee_Aggregate = {
  __typename?: 'shippingFee_aggregate';
  aggregate?: Maybe<ShippingFee_Aggregate_Fields>;
  nodes: Array<ShippingFee>;
};

/** aggregate fields of "tbl_shipping_fee" */
export type ShippingFee_Aggregate_Fields = {
  __typename?: 'shippingFee_aggregate_fields';
  avg?: Maybe<ShippingFee_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<ShippingFee_Max_Fields>;
  min?: Maybe<ShippingFee_Min_Fields>;
  stddev?: Maybe<ShippingFee_Stddev_Fields>;
  stddev_pop?: Maybe<ShippingFee_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ShippingFee_Stddev_Samp_Fields>;
  sum?: Maybe<ShippingFee_Sum_Fields>;
  var_pop?: Maybe<ShippingFee_Var_Pop_Fields>;
  var_samp?: Maybe<ShippingFee_Var_Samp_Fields>;
  variance?: Maybe<ShippingFee_Variance_Fields>;
};


/** aggregate fields of "tbl_shipping_fee" */
export type ShippingFee_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<ShippingFee_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type ShippingFee_Avg_Fields = {
  __typename?: 'shippingFee_avg_fields';
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  weight?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "tbl_shipping_fee". All fields are combined with a logical 'AND'. */
export type ShippingFee_Bool_Exp = {
  _and?: Maybe<Array<ShippingFee_Bool_Exp>>;
  _not?: Maybe<ShippingFee_Bool_Exp>;
  _or?: Maybe<Array<ShippingFee_Bool_Exp>>;
  countryCode?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  price?: Maybe<Int_Comparison_Exp>;
  privateVd?: Maybe<ShippingFeePrivateVd_Bool_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  weight?: Maybe<Float8_Comparison_Exp>;
};

/** unique or primary key constraints on table "tbl_shipping_fee" */
export enum ShippingFee_Constraint {
  /** unique or primary key constraint */
  TblShippingFeePkey = 'tbl_shipping_fee_pkey'
}

/** input type for incrementing numeric columns in table "tbl_shipping_fee" */
export type ShippingFee_Inc_Input = {
  id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  weight?: Maybe<Scalars['float8']>;
};

/** input type for inserting data into table "tbl_shipping_fee" */
export type ShippingFee_Insert_Input = {
  countryCode?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  privateVd?: Maybe<ShippingFeePrivateVd_Obj_Rel_Insert_Input>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  weight?: Maybe<Scalars['float8']>;
};

/** aggregate max on columns */
export type ShippingFee_Max_Fields = {
  __typename?: 'shippingFee_max_fields';
  countryCode?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  weight?: Maybe<Scalars['float8']>;
};

/** aggregate min on columns */
export type ShippingFee_Min_Fields = {
  __typename?: 'shippingFee_min_fields';
  countryCode?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  weight?: Maybe<Scalars['float8']>;
};

/** response of any mutation on the table "tbl_shipping_fee" */
export type ShippingFee_Mutation_Response = {
  __typename?: 'shippingFee_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<ShippingFee>;
};

/** input type for inserting object relation for remote table "tbl_shipping_fee" */
export type ShippingFee_Obj_Rel_Insert_Input = {
  data: ShippingFee_Insert_Input;
  /** on conflict condition */
  on_conflict?: Maybe<ShippingFee_On_Conflict>;
};

/** on conflict condition type for table "tbl_shipping_fee" */
export type ShippingFee_On_Conflict = {
  constraint: ShippingFee_Constraint;
  update_columns: Array<ShippingFee_Update_Column>;
  where?: Maybe<ShippingFee_Bool_Exp>;
};

/** Ordering options when selecting data from "tbl_shipping_fee". */
export type ShippingFee_Order_By = {
  countryCode?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  price?: Maybe<Order_By>;
  privateVd?: Maybe<ShippingFeePrivateVd_Order_By>;
  updated_at?: Maybe<Order_By>;
  weight?: Maybe<Order_By>;
};

/** primary key columns input for table: shippingFee */
export type ShippingFee_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** select columns of table "tbl_shipping_fee" */
export enum ShippingFee_Select_Column {
  /** column name */
  CountryCode = 'countryCode',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  Price = 'price',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Weight = 'weight'
}

/** input type for updating data in table "tbl_shipping_fee" */
export type ShippingFee_Set_Input = {
  countryCode?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  weight?: Maybe<Scalars['float8']>;
};

/** aggregate stddev on columns */
export type ShippingFee_Stddev_Fields = {
  __typename?: 'shippingFee_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  weight?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type ShippingFee_Stddev_Pop_Fields = {
  __typename?: 'shippingFee_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  weight?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type ShippingFee_Stddev_Samp_Fields = {
  __typename?: 'shippingFee_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  weight?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type ShippingFee_Sum_Fields = {
  __typename?: 'shippingFee_sum_fields';
  id?: Maybe<Scalars['bigint']>;
  price?: Maybe<Scalars['Int']>;
  weight?: Maybe<Scalars['float8']>;
};

/** update columns of table "tbl_shipping_fee" */
export enum ShippingFee_Update_Column {
  /** column name */
  CountryCode = 'countryCode',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  Price = 'price',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Weight = 'weight'
}

/** aggregate var_pop on columns */
export type ShippingFee_Var_Pop_Fields = {
  __typename?: 'shippingFee_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  weight?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type ShippingFee_Var_Samp_Fields = {
  __typename?: 'shippingFee_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  weight?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type ShippingFee_Variance_Fields = {
  __typename?: 'shippingFee_variance_fields';
  id?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  weight?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "tbl_subscription_order" */
export type SubscriptionOrder = {
  __typename?: 'subscriptionOrder';
  buyer?: Maybe<Scalars['jsonb']>;
  created_at: Scalars['timestamptz'];
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id: Scalars['bigint'];
  memo?: Maybe<Scalars['String']>;
  /** An object relationship */
  privateVd?: Maybe<SubscriptionOrderPrivateVd>;
  recipient?: Maybe<Scalars['jsonb']>;
  shipmentId?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user: User;
  user_id?: Maybe<Scalars['bigint']>;
};


/** columns and relationships of "tbl_subscription_order" */
export type SubscriptionOrderBuyerArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "tbl_subscription_order" */
export type SubscriptionOrderDataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "tbl_subscription_order" */
export type SubscriptionOrderRecipientArgs = {
  path?: Maybe<Scalars['String']>;
};

/** columns and relationships of "view_subscription_order_private_vd" */
export type SubscriptionOrderPrivateVd = {
  __typename?: 'subscriptionOrderPrivateVd';
  buyer?: Maybe<Scalars['jsonb']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  memo?: Maybe<Scalars['String']>;
  /** An object relationship */
  publicData?: Maybe<SubscriptionOrder>;
  recipient?: Maybe<Scalars['jsonb']>;
  shipmentId?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  user?: Maybe<User>;
  user_id?: Maybe<Scalars['bigint']>;
};


/** columns and relationships of "view_subscription_order_private_vd" */
export type SubscriptionOrderPrivateVdBuyerArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "view_subscription_order_private_vd" */
export type SubscriptionOrderPrivateVdDataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "view_subscription_order_private_vd" */
export type SubscriptionOrderPrivateVdRecipientArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "view_subscription_order_private_vd" */
export type SubscriptionOrderPrivateVd_Aggregate = {
  __typename?: 'subscriptionOrderPrivateVd_aggregate';
  aggregate?: Maybe<SubscriptionOrderPrivateVd_Aggregate_Fields>;
  nodes: Array<SubscriptionOrderPrivateVd>;
};

/** aggregate fields of "view_subscription_order_private_vd" */
export type SubscriptionOrderPrivateVd_Aggregate_Fields = {
  __typename?: 'subscriptionOrderPrivateVd_aggregate_fields';
  avg?: Maybe<SubscriptionOrderPrivateVd_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<SubscriptionOrderPrivateVd_Max_Fields>;
  min?: Maybe<SubscriptionOrderPrivateVd_Min_Fields>;
  stddev?: Maybe<SubscriptionOrderPrivateVd_Stddev_Fields>;
  stddev_pop?: Maybe<SubscriptionOrderPrivateVd_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<SubscriptionOrderPrivateVd_Stddev_Samp_Fields>;
  sum?: Maybe<SubscriptionOrderPrivateVd_Sum_Fields>;
  var_pop?: Maybe<SubscriptionOrderPrivateVd_Var_Pop_Fields>;
  var_samp?: Maybe<SubscriptionOrderPrivateVd_Var_Samp_Fields>;
  variance?: Maybe<SubscriptionOrderPrivateVd_Variance_Fields>;
};


/** aggregate fields of "view_subscription_order_private_vd" */
export type SubscriptionOrderPrivateVd_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<SubscriptionOrderPrivateVd_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type SubscriptionOrderPrivateVd_Append_Input = {
  buyer?: Maybe<Scalars['jsonb']>;
  data?: Maybe<Scalars['jsonb']>;
  recipient?: Maybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type SubscriptionOrderPrivateVd_Avg_Fields = {
  __typename?: 'subscriptionOrderPrivateVd_avg_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "view_subscription_order_private_vd". All fields are combined with a logical 'AND'. */
export type SubscriptionOrderPrivateVd_Bool_Exp = {
  _and?: Maybe<Array<SubscriptionOrderPrivateVd_Bool_Exp>>;
  _not?: Maybe<SubscriptionOrderPrivateVd_Bool_Exp>;
  _or?: Maybe<Array<SubscriptionOrderPrivateVd_Bool_Exp>>;
  buyer?: Maybe<Jsonb_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  memo?: Maybe<String_Comparison_Exp>;
  publicData?: Maybe<SubscriptionOrder_Bool_Exp>;
  recipient?: Maybe<Jsonb_Comparison_Exp>;
  shipmentId?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<User_Bool_Exp>;
  user_id?: Maybe<Bigint_Comparison_Exp>;
};

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type SubscriptionOrderPrivateVd_Delete_At_Path_Input = {
  buyer?: Maybe<Array<Scalars['String']>>;
  data?: Maybe<Array<Scalars['String']>>;
  recipient?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type SubscriptionOrderPrivateVd_Delete_Elem_Input = {
  buyer?: Maybe<Scalars['Int']>;
  data?: Maybe<Scalars['Int']>;
  recipient?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type SubscriptionOrderPrivateVd_Delete_Key_Input = {
  buyer?: Maybe<Scalars['String']>;
  data?: Maybe<Scalars['String']>;
  recipient?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "view_subscription_order_private_vd" */
export type SubscriptionOrderPrivateVd_Inc_Input = {
  id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "view_subscription_order_private_vd" */
export type SubscriptionOrderPrivateVd_Insert_Input = {
  buyer?: Maybe<Scalars['jsonb']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  memo?: Maybe<Scalars['String']>;
  publicData?: Maybe<SubscriptionOrder_Obj_Rel_Insert_Input>;
  recipient?: Maybe<Scalars['jsonb']>;
  shipmentId?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<User_Obj_Rel_Insert_Input>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate max on columns */
export type SubscriptionOrderPrivateVd_Max_Fields = {
  __typename?: 'subscriptionOrderPrivateVd_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  memo?: Maybe<Scalars['String']>;
  shipmentId?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate min on columns */
export type SubscriptionOrderPrivateVd_Min_Fields = {
  __typename?: 'subscriptionOrderPrivateVd_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  memo?: Maybe<Scalars['String']>;
  shipmentId?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** response of any mutation on the table "view_subscription_order_private_vd" */
export type SubscriptionOrderPrivateVd_Mutation_Response = {
  __typename?: 'subscriptionOrderPrivateVd_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<SubscriptionOrderPrivateVd>;
};

/** input type for inserting object relation for remote table "view_subscription_order_private_vd" */
export type SubscriptionOrderPrivateVd_Obj_Rel_Insert_Input = {
  data: SubscriptionOrderPrivateVd_Insert_Input;
};

/** Ordering options when selecting data from "view_subscription_order_private_vd". */
export type SubscriptionOrderPrivateVd_Order_By = {
  buyer?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  memo?: Maybe<Order_By>;
  publicData?: Maybe<SubscriptionOrder_Order_By>;
  recipient?: Maybe<Order_By>;
  shipmentId?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user?: Maybe<User_Order_By>;
  user_id?: Maybe<Order_By>;
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type SubscriptionOrderPrivateVd_Prepend_Input = {
  buyer?: Maybe<Scalars['jsonb']>;
  data?: Maybe<Scalars['jsonb']>;
  recipient?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "view_subscription_order_private_vd" */
export enum SubscriptionOrderPrivateVd_Select_Column {
  /** column name */
  Buyer = 'buyer',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  Memo = 'memo',
  /** column name */
  Recipient = 'recipient',
  /** column name */
  ShipmentId = 'shipmentId',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "view_subscription_order_private_vd" */
export type SubscriptionOrderPrivateVd_Set_Input = {
  buyer?: Maybe<Scalars['jsonb']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  memo?: Maybe<Scalars['String']>;
  recipient?: Maybe<Scalars['jsonb']>;
  shipmentId?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate stddev on columns */
export type SubscriptionOrderPrivateVd_Stddev_Fields = {
  __typename?: 'subscriptionOrderPrivateVd_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type SubscriptionOrderPrivateVd_Stddev_Pop_Fields = {
  __typename?: 'subscriptionOrderPrivateVd_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type SubscriptionOrderPrivateVd_Stddev_Samp_Fields = {
  __typename?: 'subscriptionOrderPrivateVd_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type SubscriptionOrderPrivateVd_Sum_Fields = {
  __typename?: 'subscriptionOrderPrivateVd_sum_fields';
  id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate var_pop on columns */
export type SubscriptionOrderPrivateVd_Var_Pop_Fields = {
  __typename?: 'subscriptionOrderPrivateVd_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type SubscriptionOrderPrivateVd_Var_Samp_Fields = {
  __typename?: 'subscriptionOrderPrivateVd_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type SubscriptionOrderPrivateVd_Variance_Fields = {
  __typename?: 'subscriptionOrderPrivateVd_variance_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregated selection of "tbl_subscription_order" */
export type SubscriptionOrder_Aggregate = {
  __typename?: 'subscriptionOrder_aggregate';
  aggregate?: Maybe<SubscriptionOrder_Aggregate_Fields>;
  nodes: Array<SubscriptionOrder>;
};

/** aggregate fields of "tbl_subscription_order" */
export type SubscriptionOrder_Aggregate_Fields = {
  __typename?: 'subscriptionOrder_aggregate_fields';
  avg?: Maybe<SubscriptionOrder_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<SubscriptionOrder_Max_Fields>;
  min?: Maybe<SubscriptionOrder_Min_Fields>;
  stddev?: Maybe<SubscriptionOrder_Stddev_Fields>;
  stddev_pop?: Maybe<SubscriptionOrder_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<SubscriptionOrder_Stddev_Samp_Fields>;
  sum?: Maybe<SubscriptionOrder_Sum_Fields>;
  var_pop?: Maybe<SubscriptionOrder_Var_Pop_Fields>;
  var_samp?: Maybe<SubscriptionOrder_Var_Samp_Fields>;
  variance?: Maybe<SubscriptionOrder_Variance_Fields>;
};


/** aggregate fields of "tbl_subscription_order" */
export type SubscriptionOrder_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<SubscriptionOrder_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "tbl_subscription_order" */
export type SubscriptionOrder_Aggregate_Order_By = {
  avg?: Maybe<SubscriptionOrder_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<SubscriptionOrder_Max_Order_By>;
  min?: Maybe<SubscriptionOrder_Min_Order_By>;
  stddev?: Maybe<SubscriptionOrder_Stddev_Order_By>;
  stddev_pop?: Maybe<SubscriptionOrder_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<SubscriptionOrder_Stddev_Samp_Order_By>;
  sum?: Maybe<SubscriptionOrder_Sum_Order_By>;
  var_pop?: Maybe<SubscriptionOrder_Var_Pop_Order_By>;
  var_samp?: Maybe<SubscriptionOrder_Var_Samp_Order_By>;
  variance?: Maybe<SubscriptionOrder_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type SubscriptionOrder_Append_Input = {
  buyer?: Maybe<Scalars['jsonb']>;
  data?: Maybe<Scalars['jsonb']>;
  recipient?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "tbl_subscription_order" */
export type SubscriptionOrder_Arr_Rel_Insert_Input = {
  data: Array<SubscriptionOrder_Insert_Input>;
  /** on conflict condition */
  on_conflict?: Maybe<SubscriptionOrder_On_Conflict>;
};

/** aggregate avg on columns */
export type SubscriptionOrder_Avg_Fields = {
  __typename?: 'subscriptionOrder_avg_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "tbl_subscription_order" */
export type SubscriptionOrder_Avg_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "tbl_subscription_order". All fields are combined with a logical 'AND'. */
export type SubscriptionOrder_Bool_Exp = {
  _and?: Maybe<Array<SubscriptionOrder_Bool_Exp>>;
  _not?: Maybe<SubscriptionOrder_Bool_Exp>;
  _or?: Maybe<Array<SubscriptionOrder_Bool_Exp>>;
  buyer?: Maybe<Jsonb_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  memo?: Maybe<String_Comparison_Exp>;
  privateVd?: Maybe<SubscriptionOrderPrivateVd_Bool_Exp>;
  recipient?: Maybe<Jsonb_Comparison_Exp>;
  shipmentId?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<User_Bool_Exp>;
  user_id?: Maybe<Bigint_Comparison_Exp>;
};

/** unique or primary key constraints on table "tbl_subscription_order" */
export enum SubscriptionOrder_Constraint {
  /** unique or primary key constraint */
  TblSubscriptionOrderPkey = 'tbl_subscription_order_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type SubscriptionOrder_Delete_At_Path_Input = {
  buyer?: Maybe<Array<Scalars['String']>>;
  data?: Maybe<Array<Scalars['String']>>;
  recipient?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type SubscriptionOrder_Delete_Elem_Input = {
  buyer?: Maybe<Scalars['Int']>;
  data?: Maybe<Scalars['Int']>;
  recipient?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type SubscriptionOrder_Delete_Key_Input = {
  buyer?: Maybe<Scalars['String']>;
  data?: Maybe<Scalars['String']>;
  recipient?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "tbl_subscription_order" */
export type SubscriptionOrder_Inc_Input = {
  id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "tbl_subscription_order" */
export type SubscriptionOrder_Insert_Input = {
  buyer?: Maybe<Scalars['jsonb']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  memo?: Maybe<Scalars['String']>;
  privateVd?: Maybe<SubscriptionOrderPrivateVd_Obj_Rel_Insert_Input>;
  recipient?: Maybe<Scalars['jsonb']>;
  shipmentId?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<User_Obj_Rel_Insert_Input>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate max on columns */
export type SubscriptionOrder_Max_Fields = {
  __typename?: 'subscriptionOrder_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  memo?: Maybe<Scalars['String']>;
  shipmentId?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by max() on columns of table "tbl_subscription_order" */
export type SubscriptionOrder_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  memo?: Maybe<Order_By>;
  shipmentId?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type SubscriptionOrder_Min_Fields = {
  __typename?: 'subscriptionOrder_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  memo?: Maybe<Scalars['String']>;
  shipmentId?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by min() on columns of table "tbl_subscription_order" */
export type SubscriptionOrder_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  memo?: Maybe<Order_By>;
  shipmentId?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** response of any mutation on the table "tbl_subscription_order" */
export type SubscriptionOrder_Mutation_Response = {
  __typename?: 'subscriptionOrder_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<SubscriptionOrder>;
};

/** input type for inserting object relation for remote table "tbl_subscription_order" */
export type SubscriptionOrder_Obj_Rel_Insert_Input = {
  data: SubscriptionOrder_Insert_Input;
  /** on conflict condition */
  on_conflict?: Maybe<SubscriptionOrder_On_Conflict>;
};

/** on conflict condition type for table "tbl_subscription_order" */
export type SubscriptionOrder_On_Conflict = {
  constraint: SubscriptionOrder_Constraint;
  update_columns: Array<SubscriptionOrder_Update_Column>;
  where?: Maybe<SubscriptionOrder_Bool_Exp>;
};

/** Ordering options when selecting data from "tbl_subscription_order". */
export type SubscriptionOrder_Order_By = {
  buyer?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  memo?: Maybe<Order_By>;
  privateVd?: Maybe<SubscriptionOrderPrivateVd_Order_By>;
  recipient?: Maybe<Order_By>;
  shipmentId?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user?: Maybe<User_Order_By>;
  user_id?: Maybe<Order_By>;
};

/** primary key columns input for table: subscriptionOrder */
export type SubscriptionOrder_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type SubscriptionOrder_Prepend_Input = {
  buyer?: Maybe<Scalars['jsonb']>;
  data?: Maybe<Scalars['jsonb']>;
  recipient?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "tbl_subscription_order" */
export enum SubscriptionOrder_Select_Column {
  /** column name */
  Buyer = 'buyer',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  Memo = 'memo',
  /** column name */
  Recipient = 'recipient',
  /** column name */
  ShipmentId = 'shipmentId',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "tbl_subscription_order" */
export type SubscriptionOrder_Set_Input = {
  buyer?: Maybe<Scalars['jsonb']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  memo?: Maybe<Scalars['String']>;
  recipient?: Maybe<Scalars['jsonb']>;
  shipmentId?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate stddev on columns */
export type SubscriptionOrder_Stddev_Fields = {
  __typename?: 'subscriptionOrder_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "tbl_subscription_order" */
export type SubscriptionOrder_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type SubscriptionOrder_Stddev_Pop_Fields = {
  __typename?: 'subscriptionOrder_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "tbl_subscription_order" */
export type SubscriptionOrder_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type SubscriptionOrder_Stddev_Samp_Fields = {
  __typename?: 'subscriptionOrder_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "tbl_subscription_order" */
export type SubscriptionOrder_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type SubscriptionOrder_Sum_Fields = {
  __typename?: 'subscriptionOrder_sum_fields';
  id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "tbl_subscription_order" */
export type SubscriptionOrder_Sum_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** update columns of table "tbl_subscription_order" */
export enum SubscriptionOrder_Update_Column {
  /** column name */
  Buyer = 'buyer',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  Memo = 'memo',
  /** column name */
  Recipient = 'recipient',
  /** column name */
  ShipmentId = 'shipmentId',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** aggregate var_pop on columns */
export type SubscriptionOrder_Var_Pop_Fields = {
  __typename?: 'subscriptionOrder_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "tbl_subscription_order" */
export type SubscriptionOrder_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type SubscriptionOrder_Var_Samp_Fields = {
  __typename?: 'subscriptionOrder_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "tbl_subscription_order" */
export type SubscriptionOrder_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type SubscriptionOrder_Variance_Fields = {
  __typename?: 'subscriptionOrder_variance_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "tbl_subscription_order" */
export type SubscriptionOrder_Variance_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

export type Subscription_Root = {
  __typename?: 'subscription_root';
  /** fetch data from the table: "tbl_account_link" using primary key columns */
  accountLink?: Maybe<AccountLink>;
  /** fetch aggregated fields from the table: "tbl_account_link" */
  accountLinkAggregate: AccountLink_Aggregate;
  /** fetch aggregated fields from the table: "view_account_link_private_vd" */
  accountLinkPrivateVdAggregate: AccountLinkPrivateVd_Aggregate;
  /** fetch data from the table: "view_account_link_private_vd" */
  accountLinkPrivateVds: Array<AccountLinkPrivateVd>;
  /** An array relationship */
  accountLinks: Array<AccountLink>;
  /** fetch data from the table: "tbl_browser_session" using primary key columns */
  browserSession?: Maybe<BrowserSession>;
  /** fetch aggregated fields from the table: "tbl_browser_session" */
  browserSessionAggregate: BrowserSession_Aggregate;
  /** An array relationship */
  browserSessions: Array<BrowserSession>;
  /** fetch data from the table: "tbl_buyer_info" using primary key columns */
  buyerInfo?: Maybe<BuyerInfo>;
  /** fetch aggregated fields from the table: "tbl_buyer_info" */
  buyerInfoAggregate: BuyerInfo_Aggregate;
  /** fetch aggregated fields from the table: "view_buyer_info_private_vd" */
  buyerInfoPrivateVdAggregate: BuyerInfoPrivateVd_Aggregate;
  /** fetch data from the table: "view_buyer_info_private_vd" */
  buyerInfoPrivateVds: Array<BuyerInfoPrivateVd>;
  /** An array relationship */
  buyerInfos: Array<BuyerInfo>;
  /** fetch data from the table: "tbl_campaign" using primary key columns */
  campaign?: Maybe<Campaign>;
  /** fetch aggregated fields from the table: "tbl_campaign" */
  campaignAggregate: Campaign_Aggregate;
  /** fetch aggregated fields from the table: "view_campaign_private_vd" */
  campaignPrivateVdAggregate: CampaignPrivateVd_Aggregate;
  /** fetch data from the table: "view_campaign_private_vd" */
  campaignPrivateVds: Array<CampaignPrivateVd>;
  /** fetch data from the table: "tbl_campaign" */
  campaigns: Array<Campaign>;
  /** fetch data from the table: "mn_cart_product" using primary key columns */
  cartProduct?: Maybe<CartProduct>;
  /** fetch aggregated fields from the table: "mn_cart_product" */
  cartProductAggregate: CartProduct_Aggregate;
  /** fetch aggregated fields from the table: "view_cart_product_private_vd" */
  cartProductPrivateVdAggregate: CartProductPrivateVd_Aggregate;
  /** fetch data from the table: "view_cart_product_private_vd" */
  cartProductPrivateVds: Array<CartProductPrivateVd>;
  /** fetch data from the table: "mn_cart_product" */
  cartProducts: Array<CartProduct>;
  /** fetch data from the table: "tbl_contact_us_message" using primary key columns */
  contactUsMessage?: Maybe<ContactUsMessage>;
  /** fetch aggregated fields from the table: "tbl_contact_us_message" */
  contactUsMessageAggregate: ContactUsMessage_Aggregate;
  /** fetch data from the table: "tbl_contact_us_message" */
  contactUsMessages: Array<ContactUsMessage>;
  /** fetch data from the table: "tbl_coupon" using primary key columns */
  coupon?: Maybe<Coupon>;
  /** fetch aggregated fields from the table: "tbl_coupon" */
  couponAggregate: Coupon_Aggregate;
  /** fetch aggregated fields from the table: "view_coupon_private_vd" */
  couponPrivateVdAggregate: CouponPrivateVd_Aggregate;
  /** fetch data from the table: "view_coupon_private_vd" */
  couponPrivateVds: Array<CouponPrivateVd>;
  /** fetch data from the table: "tbl_coupon_record" using primary key columns */
  couponRecord?: Maybe<CouponRecord>;
  /** fetch aggregated fields from the table: "tbl_coupon_record" */
  couponRecordAggregate: CouponRecord_Aggregate;
  /** fetch aggregated fields from the table: "view_coupon_record_private_vd" */
  couponRecordPrivateVdAggregate: CouponRecordPrivateVd_Aggregate;
  /** fetch data from the table: "view_coupon_record_private_vd" */
  couponRecordPrivateVds: Array<CouponRecordPrivateVd>;
  /** An array relationship */
  couponRecords: Array<CouponRecord>;
  /** An array relationship */
  coupons: Array<Coupon>;
  /** fetch data from the table: "mn_group_invitation" using primary key columns */
  groupInvitation?: Maybe<GroupInvitation>;
  /** fetch aggregated fields from the table: "mn_group_invitation" */
  groupInvitationAggregate: GroupInvitation_Aggregate;
  /** fetch aggregated fields from the table: "view_group_invitation_private_vd" */
  groupInvitationPrivateVdAggregate: GroupInvitationPrivateVd_Aggregate;
  /** fetch data from the table: "view_group_invitation_private_vd" */
  groupInvitationPrivateVds: Array<GroupInvitationPrivateVd>;
  /** An array relationship */
  groupInvitations: Array<GroupInvitation>;
  /** fetch data from the table: "tbl_issue" using primary key columns */
  issue?: Maybe<Issue>;
  /** fetch aggregated fields from the table: "tbl_issue" */
  issueAggregate: Issue_Aggregate;
  /** fetch data from the table: "tbl_issue_comment" using primary key columns */
  issueComment?: Maybe<IssueComment>;
  /** fetch aggregated fields from the table: "tbl_issue_comment" */
  issueCommentAggregate: IssueComment_Aggregate;
  /** fetch data from the table: "tbl_issue_comment" */
  issueComments: Array<IssueComment>;
  /** An array relationship */
  issues: Array<Issue>;
  /** fetch data from the table: "tbl_log" using primary key columns */
  log?: Maybe<Log>;
  /** fetch aggregated fields from the table: "tbl_log" */
  logAggregate: Log_Aggregate;
  /** fetch data from the table: "tbl_log" */
  logs: Array<Log>;
  /** fetch data from the table: "tbl_memo" using primary key columns */
  memo?: Maybe<Memo>;
  /** fetch aggregated fields from the table: "tbl_memo" */
  memoAggregate: Memo_Aggregate;
  /** fetch aggregated fields from the table: "view_memo_private_vd" */
  memoPrivateVdAggregate: MemoPrivateVd_Aggregate;
  /** fetch data from the table: "view_memo_private_vd" */
  memoPrivateVds: Array<MemoPrivateVd>;
  /** fetch data from the table: "tbl_memo" */
  memos: Array<Memo>;
  /** fetch data from the table: "tbl_notification" using primary key columns */
  notification?: Maybe<Notification>;
  /** fetch aggregated fields from the table: "tbl_notification" */
  notificationAggregate: Notification_Aggregate;
  /** An array relationship */
  notifications: Array<Notification>;
  /** fetch data from the table: "tbl_order" using primary key columns */
  order?: Maybe<Order>;
  /** fetch aggregated fields from the table: "tbl_order" */
  orderAggregate: Order_Aggregate;
  /** fetch data from the table: "mn_order_campaign" using primary key columns */
  orderCampaign?: Maybe<OrderCampaign>;
  /** fetch aggregated fields from the table: "mn_order_campaign" */
  orderCampaignAggregate: OrderCampaign_Aggregate;
  /** fetch aggregated fields from the table: "view_order_campaign_private_vd" */
  orderCampaignPrivateVdAggregate: OrderCampaignPrivateVd_Aggregate;
  /** fetch data from the table: "view_order_campaign_private_vd" */
  orderCampaignPrivateVds: Array<OrderCampaignPrivateVd>;
  /** fetch data from the table: "mn_order_campaign" */
  orderCampaigns: Array<OrderCampaign>;
  /** fetch aggregated fields from the table: "view_order_private_vd" */
  orderPrivateVdAggregate: OrderPrivateVd_Aggregate;
  /** fetch data from the table: "view_order_private_vd" */
  orderPrivateVds: Array<OrderPrivateVd>;
  /** fetch data from the table: "mn_order_product" using primary key columns */
  orderProduct?: Maybe<OrderProduct>;
  /** fetch aggregated fields from the table: "mn_order_product" */
  orderProductAggregate: OrderProduct_Aggregate;
  /** fetch aggregated fields from the table: "view_order_product_private_vd" */
  orderProductPrivateVdAggregate: OrderProductPrivateVd_Aggregate;
  /** fetch data from the table: "view_order_product_private_vd" */
  orderProductPrivateVds: Array<OrderProductPrivateVd>;
  /** fetch data from the table: "mn_order_product" */
  orderProducts: Array<OrderProduct>;
  /** An array relationship */
  orders: Array<Order>;
  /** fetch data from the table: "tbl_organization" using primary key columns */
  organization?: Maybe<Organization>;
  /** fetch aggregated fields from the table: "tbl_organization" */
  organizationAggregate: Organization_Aggregate;
  /** fetch data from the table: "mn_organization_invitation" using primary key columns */
  organizationInvitation?: Maybe<OrganizationInvitation>;
  /** fetch aggregated fields from the table: "mn_organization_invitation" */
  organizationInvitationAggregate: OrganizationInvitation_Aggregate;
  /** fetch aggregated fields from the table: "view_organization_invitation_private_vd" */
  organizationInvitationPrivateVdAggregate: OrganizationInvitationPrivateVd_Aggregate;
  /** fetch data from the table: "view_organization_invitation_private_vd" */
  organizationInvitationPrivateVds: Array<OrganizationInvitationPrivateVd>;
  /** An array relationship */
  organizationInvitations: Array<OrganizationInvitation>;
  /** fetch aggregated fields from the table: "view_organization_private_vd" */
  organizationPrivateVdAggregate: OrganizationPrivateVd_Aggregate;
  /** fetch data from the table: "view_organization_private_vd" */
  organizationPrivateVds: Array<OrganizationPrivateVd>;
  /** fetch data from the table: "tbl_organization" */
  organizations: Array<Organization>;
  /** fetch data from the table: "tbl_product" using primary key columns */
  product?: Maybe<Product>;
  /** fetch aggregated fields from the table: "tbl_product" */
  productAggregate: Product_Aggregate;
  /** fetch data from the table: "tbl_product_category" */
  productCategories: Array<ProductCategory>;
  /** fetch data from the table: "tbl_product_category" using primary key columns */
  productCategory?: Maybe<ProductCategory>;
  /** fetch aggregated fields from the table: "tbl_product_category" */
  productCategoryAggregate: ProductCategory_Aggregate;
  /** fetch aggregated fields from the table: "view_product_category_private_vd" */
  productCategoryPrivateVdAggregate: ProductCategoryPrivateVd_Aggregate;
  /** fetch data from the table: "view_product_category_private_vd" */
  productCategoryPrivateVds: Array<ProductCategoryPrivateVd>;
  /** fetch data from the table: "tbl_product_group" using primary key columns */
  productGroup?: Maybe<ProductGroup>;
  /** fetch aggregated fields from the table: "tbl_product_group" */
  productGroupAggregate: ProductGroup_Aggregate;
  /** fetch data from the table: "mn_product_group_campaign" using primary key columns */
  productGroupCampaign?: Maybe<ProductGroupCampaign>;
  /** fetch aggregated fields from the table: "mn_product_group_campaign" */
  productGroupCampaignAggregate: ProductGroupCampaign_Aggregate;
  /** fetch aggregated fields from the table: "view_product_group_campaign_private_vd" */
  productGroupCampaignPrivateVdAggregate: ProductGroupCampaignPrivateVd_Aggregate;
  /** fetch data from the table: "view_product_group_campaign_private_vd" */
  productGroupCampaignPrivateVds: Array<ProductGroupCampaignPrivateVd>;
  /** fetch data from the table: "mn_product_group_campaign" */
  productGroupCampaigns: Array<ProductGroupCampaign>;
  /** fetch aggregated fields from the table: "view_product_group_private_vd" */
  productGroupPrivateVdAggregate: ProductGroupPrivateVd_Aggregate;
  /** fetch data from the table: "view_product_group_private_vd" */
  productGroupPrivateVds: Array<ProductGroupPrivateVd>;
  /** fetch data from the table: "tbl_product_group" */
  productGroups: Array<ProductGroup>;
  /** fetch aggregated fields from the table: "view_product_private_vd" */
  productPrivateVdAggregate: ProductPrivateVd_Aggregate;
  /** fetch data from the table: "view_product_private_vd" */
  productPrivateVds: Array<ProductPrivateVd>;
  /** fetch data from the table: "tbl_product_spec" using primary key columns */
  productSpec?: Maybe<ProductSpec>;
  /** fetch aggregated fields from the table: "tbl_product_spec" */
  productSpecAggregate: ProductSpec_Aggregate;
  /** fetch aggregated fields from the table: "view_product_spec_private_vd" */
  productSpecPrivateVdAggregate: ProductSpecPrivateVd_Aggregate;
  /** fetch data from the table: "view_product_spec_private_vd" */
  productSpecPrivateVds: Array<ProductSpecPrivateVd>;
  /** fetch data from the table: "tbl_product_spec" */
  productSpecs: Array<ProductSpec>;
  /** An array relationship */
  products: Array<Product>;
  /** fetch data from the table: "tbl_project" using primary key columns */
  project?: Maybe<Project>;
  /** fetch aggregated fields from the table: "tbl_project" */
  projectAggregate: Project_Aggregate;
  /** fetch data from the table: "mn_project_invitation" using primary key columns */
  projectInvitation?: Maybe<ProjectInvitation>;
  /** fetch aggregated fields from the table: "mn_project_invitation" */
  projectInvitationAggregate: ProjectInvitation_Aggregate;
  /** fetch aggregated fields from the table: "view_project_invitation_private_vd" */
  projectInvitationPrivateVdAggregate: ProjectInvitationPrivateVd_Aggregate;
  /** fetch data from the table: "view_project_invitation_private_vd" */
  projectInvitationPrivateVds: Array<ProjectInvitationPrivateVd>;
  /** An array relationship */
  projectInvitations: Array<ProjectInvitation>;
  /** fetch aggregated fields from the table: "view_project_private_vd" */
  projectPrivateVdAggregate: ProjectPrivateVd_Aggregate;
  /** fetch data from the table: "view_project_private_vd" */
  projectPrivateVds: Array<ProjectPrivateVd>;
  /** An array relationship */
  projects: Array<Project>;
  /** fetch data from the table: "tbl_recipient_info" using primary key columns */
  recipientInfo?: Maybe<RecipientInfo>;
  /** fetch aggregated fields from the table: "tbl_recipient_info" */
  recipientInfoAggregate: RecipientInfo_Aggregate;
  /** fetch aggregated fields from the table: "view_recipient_info_private_vd" */
  recipientInfoPrivateVdAggregate: RecipientInfoPrivateVd_Aggregate;
  /** fetch data from the table: "view_recipient_info_private_vd" */
  recipientInfoPrivateVds: Array<RecipientInfoPrivateVd>;
  /** An array relationship */
  recipientInfos: Array<RecipientInfo>;
  /** fetch data from the table: "tbl_recovery_token" using primary key columns */
  recoveryToken?: Maybe<RecoveryToken>;
  /** fetch aggregated fields from the table: "tbl_recovery_token" */
  recoveryTokenAggregate: RecoveryToken_Aggregate;
  /** fetch data from the table: "tbl_recovery_token" */
  recoveryTokens: Array<RecoveryToken>;
  /** fetch data from the table: "tbl_shipping_fee" using primary key columns */
  shippingFee?: Maybe<ShippingFee>;
  /** fetch aggregated fields from the table: "tbl_shipping_fee" */
  shippingFeeAggregate: ShippingFee_Aggregate;
  /** fetch aggregated fields from the table: "view_shipping_fee_private_vd" */
  shippingFeePrivateVdAggregate: ShippingFeePrivateVd_Aggregate;
  /** fetch data from the table: "view_shipping_fee_private_vd" */
  shippingFeePrivateVds: Array<ShippingFeePrivateVd>;
  /** fetch data from the table: "tbl_shipping_fee" */
  shippingFees: Array<ShippingFee>;
  /** fetch data from the table: "tbl_subscription_order" using primary key columns */
  subscriptionOrder?: Maybe<SubscriptionOrder>;
  /** fetch aggregated fields from the table: "tbl_subscription_order" */
  subscriptionOrderAggregate: SubscriptionOrder_Aggregate;
  /** fetch aggregated fields from the table: "view_subscription_order_private_vd" */
  subscriptionOrderPrivateVdAggregate: SubscriptionOrderPrivateVd_Aggregate;
  /** fetch data from the table: "view_subscription_order_private_vd" */
  subscriptionOrderPrivateVds: Array<SubscriptionOrderPrivateVd>;
  /** An array relationship */
  subscriptionOrders: Array<SubscriptionOrder>;
  /** fetch data from the table: "tbl_user" using primary key columns */
  user?: Maybe<User>;
  /** fetch aggregated fields from the table: "tbl_user" */
  userAggregate: User_Aggregate;
  /** fetch data from the table: "tbl_user_group" using primary key columns */
  userGroup?: Maybe<UserGroup>;
  /** fetch aggregated fields from the table: "tbl_user_group" */
  userGroupAggregate: UserGroup_Aggregate;
  /** fetch aggregated fields from the table: "view_user_group_private_vd" */
  userGroupPrivateVdAggregate: UserGroupPrivateVd_Aggregate;
  /** fetch data from the table: "view_user_group_private_vd" */
  userGroupPrivateVds: Array<UserGroupPrivateVd>;
  /** fetch data from the table: "tbl_user_group" */
  userGroups: Array<UserGroup>;
  /** fetch data from the table: "mn_user_memo" using primary key columns */
  userMemo?: Maybe<UserMemo>;
  /** fetch aggregated fields from the table: "mn_user_memo" */
  userMemoAggregate: UserMemo_Aggregate;
  /** fetch aggregated fields from the table: "view_user_memo_private_vd" */
  userMemoPrivateVdAggregate: UserMemoPrivateVd_Aggregate;
  /** fetch data from the table: "view_user_memo_private_vd" */
  userMemoPrivateVds: Array<UserMemoPrivateVd>;
  /** fetch data from the table: "mn_user_memo" */
  userMemos: Array<UserMemo>;
  /** fetch data from the table: "mn_user_organization" using primary key columns */
  userOrganization?: Maybe<UserOrganization>;
  /** fetch aggregated fields from the table: "mn_user_organization" */
  userOrganizationAggregate: UserOrganization_Aggregate;
  /** fetch aggregated fields from the table: "view_user_organization_private_vd" */
  userOrganizationPrivateVdAggregate: UserOrganizationPrivateVd_Aggregate;
  /** fetch data from the table: "view_user_organization_private_vd" */
  userOrganizationPrivateVds: Array<UserOrganizationPrivateVd>;
  /** fetch data from the table: "mn_user_organization" */
  userOrganizations: Array<UserOrganization>;
  /** fetch aggregated fields from the table: "view_user_private_vd" */
  userPrivateVdAggregate: UserPrivateVd_Aggregate;
  /** fetch data from the table: "view_user_private_vd" */
  userPrivateVds: Array<UserPrivateVd>;
  /** fetch data from the table: "mn_user_project" using primary key columns */
  userProject?: Maybe<UserProject>;
  /** fetch aggregated fields from the table: "mn_user_project" */
  userProjectAggregate: UserProject_Aggregate;
  /** fetch aggregated fields from the table: "view_user_project_private_vd" */
  userProjectPrivateVdAggregate: UserProjectPrivateVd_Aggregate;
  /** fetch data from the table: "view_user_project_private_vd" */
  userProjectPrivateVds: Array<UserProjectPrivateVd>;
  /** fetch data from the table: "mn_user_project" */
  userProjects: Array<UserProject>;
  /** fetch data from the table: "tbl_user_setting" using primary key columns */
  userSetting?: Maybe<UserSetting>;
  /** fetch aggregated fields from the table: "tbl_user_setting" */
  userSettingAggregate: UserSetting_Aggregate;
  /** fetch aggregated fields from the table: "view_user_setting_private_vd" */
  userSettingPrivateVdAggregate: UserSettingPrivateVd_Aggregate;
  /** fetch data from the table: "view_user_setting_private_vd" */
  userSettingPrivateVds: Array<UserSettingPrivateVd>;
  /** An array relationship */
  userSettings: Array<UserSetting>;
  /** fetch data from the table: "mn_user_user_group" using primary key columns */
  userUserGroup?: Maybe<UserUserGroup>;
  /** fetch aggregated fields from the table: "mn_user_user_group" */
  userUserGroupAggregate: UserUserGroup_Aggregate;
  /** fetch aggregated fields from the table: "view_user_user_group_private_vd" */
  userUserGroupPrivateVdAggregate: UserUserGroupPrivateVd_Aggregate;
  /** fetch data from the table: "view_user_user_group_private_vd" */
  userUserGroupPrivateVds: Array<UserUserGroupPrivateVd>;
  /** fetch data from the table: "mn_user_user_group" */
  userUserGroups: Array<UserUserGroup>;
  /** fetch data from the table: "tbl_user" */
  users: Array<User>;
};


export type Subscription_RootAccountLinkArgs = {
  id: Scalars['bigint'];
};


export type Subscription_RootAccountLinkAggregateArgs = {
  distinct_on?: Maybe<Array<AccountLink_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<AccountLink_Order_By>>;
  where?: Maybe<AccountLink_Bool_Exp>;
};


export type Subscription_RootAccountLinkPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<AccountLinkPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<AccountLinkPrivateVd_Order_By>>;
  where?: Maybe<AccountLinkPrivateVd_Bool_Exp>;
};


export type Subscription_RootAccountLinkPrivateVdsArgs = {
  distinct_on?: Maybe<Array<AccountLinkPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<AccountLinkPrivateVd_Order_By>>;
  where?: Maybe<AccountLinkPrivateVd_Bool_Exp>;
};


export type Subscription_RootAccountLinksArgs = {
  distinct_on?: Maybe<Array<AccountLink_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<AccountLink_Order_By>>;
  where?: Maybe<AccountLink_Bool_Exp>;
};


export type Subscription_RootBrowserSessionArgs = {
  id: Scalars['bigint'];
};


export type Subscription_RootBrowserSessionAggregateArgs = {
  distinct_on?: Maybe<Array<BrowserSession_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<BrowserSession_Order_By>>;
  where?: Maybe<BrowserSession_Bool_Exp>;
};


export type Subscription_RootBrowserSessionsArgs = {
  distinct_on?: Maybe<Array<BrowserSession_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<BrowserSession_Order_By>>;
  where?: Maybe<BrowserSession_Bool_Exp>;
};


export type Subscription_RootBuyerInfoArgs = {
  id: Scalars['bigint'];
};


export type Subscription_RootBuyerInfoAggregateArgs = {
  distinct_on?: Maybe<Array<BuyerInfo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<BuyerInfo_Order_By>>;
  where?: Maybe<BuyerInfo_Bool_Exp>;
};


export type Subscription_RootBuyerInfoPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<BuyerInfoPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<BuyerInfoPrivateVd_Order_By>>;
  where?: Maybe<BuyerInfoPrivateVd_Bool_Exp>;
};


export type Subscription_RootBuyerInfoPrivateVdsArgs = {
  distinct_on?: Maybe<Array<BuyerInfoPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<BuyerInfoPrivateVd_Order_By>>;
  where?: Maybe<BuyerInfoPrivateVd_Bool_Exp>;
};


export type Subscription_RootBuyerInfosArgs = {
  distinct_on?: Maybe<Array<BuyerInfo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<BuyerInfo_Order_By>>;
  where?: Maybe<BuyerInfo_Bool_Exp>;
};


export type Subscription_RootCampaignArgs = {
  id: Scalars['bigint'];
};


export type Subscription_RootCampaignAggregateArgs = {
  distinct_on?: Maybe<Array<Campaign_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Campaign_Order_By>>;
  where?: Maybe<Campaign_Bool_Exp>;
};


export type Subscription_RootCampaignPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<CampaignPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<CampaignPrivateVd_Order_By>>;
  where?: Maybe<CampaignPrivateVd_Bool_Exp>;
};


export type Subscription_RootCampaignPrivateVdsArgs = {
  distinct_on?: Maybe<Array<CampaignPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<CampaignPrivateVd_Order_By>>;
  where?: Maybe<CampaignPrivateVd_Bool_Exp>;
};


export type Subscription_RootCampaignsArgs = {
  distinct_on?: Maybe<Array<Campaign_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Campaign_Order_By>>;
  where?: Maybe<Campaign_Bool_Exp>;
};


export type Subscription_RootCartProductArgs = {
  id: Scalars['bigint'];
};


export type Subscription_RootCartProductAggregateArgs = {
  distinct_on?: Maybe<Array<CartProduct_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<CartProduct_Order_By>>;
  where?: Maybe<CartProduct_Bool_Exp>;
};


export type Subscription_RootCartProductPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<CartProductPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<CartProductPrivateVd_Order_By>>;
  where?: Maybe<CartProductPrivateVd_Bool_Exp>;
};


export type Subscription_RootCartProductPrivateVdsArgs = {
  distinct_on?: Maybe<Array<CartProductPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<CartProductPrivateVd_Order_By>>;
  where?: Maybe<CartProductPrivateVd_Bool_Exp>;
};


export type Subscription_RootCartProductsArgs = {
  distinct_on?: Maybe<Array<CartProduct_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<CartProduct_Order_By>>;
  where?: Maybe<CartProduct_Bool_Exp>;
};


export type Subscription_RootContactUsMessageArgs = {
  id: Scalars['bigint'];
};


export type Subscription_RootContactUsMessageAggregateArgs = {
  distinct_on?: Maybe<Array<ContactUsMessage_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContactUsMessage_Order_By>>;
  where?: Maybe<ContactUsMessage_Bool_Exp>;
};


export type Subscription_RootContactUsMessagesArgs = {
  distinct_on?: Maybe<Array<ContactUsMessage_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContactUsMessage_Order_By>>;
  where?: Maybe<ContactUsMessage_Bool_Exp>;
};


export type Subscription_RootCouponArgs = {
  id: Scalars['bigint'];
};


export type Subscription_RootCouponAggregateArgs = {
  distinct_on?: Maybe<Array<Coupon_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Coupon_Order_By>>;
  where?: Maybe<Coupon_Bool_Exp>;
};


export type Subscription_RootCouponPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<CouponPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<CouponPrivateVd_Order_By>>;
  where?: Maybe<CouponPrivateVd_Bool_Exp>;
};


export type Subscription_RootCouponPrivateVdsArgs = {
  distinct_on?: Maybe<Array<CouponPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<CouponPrivateVd_Order_By>>;
  where?: Maybe<CouponPrivateVd_Bool_Exp>;
};


export type Subscription_RootCouponRecordArgs = {
  id: Scalars['bigint'];
};


export type Subscription_RootCouponRecordAggregateArgs = {
  distinct_on?: Maybe<Array<CouponRecord_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<CouponRecord_Order_By>>;
  where?: Maybe<CouponRecord_Bool_Exp>;
};


export type Subscription_RootCouponRecordPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<CouponRecordPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<CouponRecordPrivateVd_Order_By>>;
  where?: Maybe<CouponRecordPrivateVd_Bool_Exp>;
};


export type Subscription_RootCouponRecordPrivateVdsArgs = {
  distinct_on?: Maybe<Array<CouponRecordPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<CouponRecordPrivateVd_Order_By>>;
  where?: Maybe<CouponRecordPrivateVd_Bool_Exp>;
};


export type Subscription_RootCouponRecordsArgs = {
  distinct_on?: Maybe<Array<CouponRecord_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<CouponRecord_Order_By>>;
  where?: Maybe<CouponRecord_Bool_Exp>;
};


export type Subscription_RootCouponsArgs = {
  distinct_on?: Maybe<Array<Coupon_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Coupon_Order_By>>;
  where?: Maybe<Coupon_Bool_Exp>;
};


export type Subscription_RootGroupInvitationArgs = {
  id: Scalars['bigint'];
};


export type Subscription_RootGroupInvitationAggregateArgs = {
  distinct_on?: Maybe<Array<GroupInvitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<GroupInvitation_Order_By>>;
  where?: Maybe<GroupInvitation_Bool_Exp>;
};


export type Subscription_RootGroupInvitationPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<GroupInvitationPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<GroupInvitationPrivateVd_Order_By>>;
  where?: Maybe<GroupInvitationPrivateVd_Bool_Exp>;
};


export type Subscription_RootGroupInvitationPrivateVdsArgs = {
  distinct_on?: Maybe<Array<GroupInvitationPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<GroupInvitationPrivateVd_Order_By>>;
  where?: Maybe<GroupInvitationPrivateVd_Bool_Exp>;
};


export type Subscription_RootGroupInvitationsArgs = {
  distinct_on?: Maybe<Array<GroupInvitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<GroupInvitation_Order_By>>;
  where?: Maybe<GroupInvitation_Bool_Exp>;
};


export type Subscription_RootIssueArgs = {
  id: Scalars['bigint'];
};


export type Subscription_RootIssueAggregateArgs = {
  distinct_on?: Maybe<Array<Issue_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Issue_Order_By>>;
  where?: Maybe<Issue_Bool_Exp>;
};


export type Subscription_RootIssueCommentArgs = {
  id: Scalars['bigint'];
};


export type Subscription_RootIssueCommentAggregateArgs = {
  distinct_on?: Maybe<Array<IssueComment_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<IssueComment_Order_By>>;
  where?: Maybe<IssueComment_Bool_Exp>;
};


export type Subscription_RootIssueCommentsArgs = {
  distinct_on?: Maybe<Array<IssueComment_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<IssueComment_Order_By>>;
  where?: Maybe<IssueComment_Bool_Exp>;
};


export type Subscription_RootIssuesArgs = {
  distinct_on?: Maybe<Array<Issue_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Issue_Order_By>>;
  where?: Maybe<Issue_Bool_Exp>;
};


export type Subscription_RootLogArgs = {
  id: Scalars['bigint'];
};


export type Subscription_RootLogAggregateArgs = {
  distinct_on?: Maybe<Array<Log_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Log_Order_By>>;
  where?: Maybe<Log_Bool_Exp>;
};


export type Subscription_RootLogsArgs = {
  distinct_on?: Maybe<Array<Log_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Log_Order_By>>;
  where?: Maybe<Log_Bool_Exp>;
};


export type Subscription_RootMemoArgs = {
  id: Scalars['bigint'];
};


export type Subscription_RootMemoAggregateArgs = {
  distinct_on?: Maybe<Array<Memo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Memo_Order_By>>;
  where?: Maybe<Memo_Bool_Exp>;
};


export type Subscription_RootMemoPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<MemoPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<MemoPrivateVd_Order_By>>;
  where?: Maybe<MemoPrivateVd_Bool_Exp>;
};


export type Subscription_RootMemoPrivateVdsArgs = {
  distinct_on?: Maybe<Array<MemoPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<MemoPrivateVd_Order_By>>;
  where?: Maybe<MemoPrivateVd_Bool_Exp>;
};


export type Subscription_RootMemosArgs = {
  distinct_on?: Maybe<Array<Memo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Memo_Order_By>>;
  where?: Maybe<Memo_Bool_Exp>;
};


export type Subscription_RootNotificationArgs = {
  id: Scalars['bigint'];
};


export type Subscription_RootNotificationAggregateArgs = {
  distinct_on?: Maybe<Array<Notification_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Notification_Order_By>>;
  where?: Maybe<Notification_Bool_Exp>;
};


export type Subscription_RootNotificationsArgs = {
  distinct_on?: Maybe<Array<Notification_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Notification_Order_By>>;
  where?: Maybe<Notification_Bool_Exp>;
};


export type Subscription_RootOrderArgs = {
  id: Scalars['bigint'];
};


export type Subscription_RootOrderAggregateArgs = {
  distinct_on?: Maybe<Array<Order_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Order_Order_By>>;
  where?: Maybe<Order_Bool_Exp>;
};


export type Subscription_RootOrderCampaignArgs = {
  id: Scalars['bigint'];
};


export type Subscription_RootOrderCampaignAggregateArgs = {
  distinct_on?: Maybe<Array<OrderCampaign_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrderCampaign_Order_By>>;
  where?: Maybe<OrderCampaign_Bool_Exp>;
};


export type Subscription_RootOrderCampaignPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<OrderCampaignPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrderCampaignPrivateVd_Order_By>>;
  where?: Maybe<OrderCampaignPrivateVd_Bool_Exp>;
};


export type Subscription_RootOrderCampaignPrivateVdsArgs = {
  distinct_on?: Maybe<Array<OrderCampaignPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrderCampaignPrivateVd_Order_By>>;
  where?: Maybe<OrderCampaignPrivateVd_Bool_Exp>;
};


export type Subscription_RootOrderCampaignsArgs = {
  distinct_on?: Maybe<Array<OrderCampaign_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrderCampaign_Order_By>>;
  where?: Maybe<OrderCampaign_Bool_Exp>;
};


export type Subscription_RootOrderPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<OrderPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrderPrivateVd_Order_By>>;
  where?: Maybe<OrderPrivateVd_Bool_Exp>;
};


export type Subscription_RootOrderPrivateVdsArgs = {
  distinct_on?: Maybe<Array<OrderPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrderPrivateVd_Order_By>>;
  where?: Maybe<OrderPrivateVd_Bool_Exp>;
};


export type Subscription_RootOrderProductArgs = {
  id: Scalars['bigint'];
};


export type Subscription_RootOrderProductAggregateArgs = {
  distinct_on?: Maybe<Array<OrderProduct_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrderProduct_Order_By>>;
  where?: Maybe<OrderProduct_Bool_Exp>;
};


export type Subscription_RootOrderProductPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<OrderProductPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrderProductPrivateVd_Order_By>>;
  where?: Maybe<OrderProductPrivateVd_Bool_Exp>;
};


export type Subscription_RootOrderProductPrivateVdsArgs = {
  distinct_on?: Maybe<Array<OrderProductPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrderProductPrivateVd_Order_By>>;
  where?: Maybe<OrderProductPrivateVd_Bool_Exp>;
};


export type Subscription_RootOrderProductsArgs = {
  distinct_on?: Maybe<Array<OrderProduct_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrderProduct_Order_By>>;
  where?: Maybe<OrderProduct_Bool_Exp>;
};


export type Subscription_RootOrdersArgs = {
  distinct_on?: Maybe<Array<Order_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Order_Order_By>>;
  where?: Maybe<Order_Bool_Exp>;
};


export type Subscription_RootOrganizationArgs = {
  id: Scalars['bigint'];
};


export type Subscription_RootOrganizationAggregateArgs = {
  distinct_on?: Maybe<Array<Organization_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Organization_Order_By>>;
  where?: Maybe<Organization_Bool_Exp>;
};


export type Subscription_RootOrganizationInvitationArgs = {
  id: Scalars['bigint'];
};


export type Subscription_RootOrganizationInvitationAggregateArgs = {
  distinct_on?: Maybe<Array<OrganizationInvitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrganizationInvitation_Order_By>>;
  where?: Maybe<OrganizationInvitation_Bool_Exp>;
};


export type Subscription_RootOrganizationInvitationPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<OrganizationInvitationPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrganizationInvitationPrivateVd_Order_By>>;
  where?: Maybe<OrganizationInvitationPrivateVd_Bool_Exp>;
};


export type Subscription_RootOrganizationInvitationPrivateVdsArgs = {
  distinct_on?: Maybe<Array<OrganizationInvitationPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrganizationInvitationPrivateVd_Order_By>>;
  where?: Maybe<OrganizationInvitationPrivateVd_Bool_Exp>;
};


export type Subscription_RootOrganizationInvitationsArgs = {
  distinct_on?: Maybe<Array<OrganizationInvitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrganizationInvitation_Order_By>>;
  where?: Maybe<OrganizationInvitation_Bool_Exp>;
};


export type Subscription_RootOrganizationPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<OrganizationPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrganizationPrivateVd_Order_By>>;
  where?: Maybe<OrganizationPrivateVd_Bool_Exp>;
};


export type Subscription_RootOrganizationPrivateVdsArgs = {
  distinct_on?: Maybe<Array<OrganizationPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrganizationPrivateVd_Order_By>>;
  where?: Maybe<OrganizationPrivateVd_Bool_Exp>;
};


export type Subscription_RootOrganizationsArgs = {
  distinct_on?: Maybe<Array<Organization_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Organization_Order_By>>;
  where?: Maybe<Organization_Bool_Exp>;
};


export type Subscription_RootProductArgs = {
  id: Scalars['bigint'];
};


export type Subscription_RootProductAggregateArgs = {
  distinct_on?: Maybe<Array<Product_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Order_By>>;
  where?: Maybe<Product_Bool_Exp>;
};


export type Subscription_RootProductCategoriesArgs = {
  distinct_on?: Maybe<Array<ProductCategory_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductCategory_Order_By>>;
  where?: Maybe<ProductCategory_Bool_Exp>;
};


export type Subscription_RootProductCategoryArgs = {
  id: Scalars['bigint'];
};


export type Subscription_RootProductCategoryAggregateArgs = {
  distinct_on?: Maybe<Array<ProductCategory_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductCategory_Order_By>>;
  where?: Maybe<ProductCategory_Bool_Exp>;
};


export type Subscription_RootProductCategoryPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<ProductCategoryPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductCategoryPrivateVd_Order_By>>;
  where?: Maybe<ProductCategoryPrivateVd_Bool_Exp>;
};


export type Subscription_RootProductCategoryPrivateVdsArgs = {
  distinct_on?: Maybe<Array<ProductCategoryPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductCategoryPrivateVd_Order_By>>;
  where?: Maybe<ProductCategoryPrivateVd_Bool_Exp>;
};


export type Subscription_RootProductGroupArgs = {
  id: Scalars['bigint'];
};


export type Subscription_RootProductGroupAggregateArgs = {
  distinct_on?: Maybe<Array<ProductGroup_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductGroup_Order_By>>;
  where?: Maybe<ProductGroup_Bool_Exp>;
};


export type Subscription_RootProductGroupCampaignArgs = {
  id: Scalars['bigint'];
};


export type Subscription_RootProductGroupCampaignAggregateArgs = {
  distinct_on?: Maybe<Array<ProductGroupCampaign_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductGroupCampaign_Order_By>>;
  where?: Maybe<ProductGroupCampaign_Bool_Exp>;
};


export type Subscription_RootProductGroupCampaignPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<ProductGroupCampaignPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductGroupCampaignPrivateVd_Order_By>>;
  where?: Maybe<ProductGroupCampaignPrivateVd_Bool_Exp>;
};


export type Subscription_RootProductGroupCampaignPrivateVdsArgs = {
  distinct_on?: Maybe<Array<ProductGroupCampaignPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductGroupCampaignPrivateVd_Order_By>>;
  where?: Maybe<ProductGroupCampaignPrivateVd_Bool_Exp>;
};


export type Subscription_RootProductGroupCampaignsArgs = {
  distinct_on?: Maybe<Array<ProductGroupCampaign_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductGroupCampaign_Order_By>>;
  where?: Maybe<ProductGroupCampaign_Bool_Exp>;
};


export type Subscription_RootProductGroupPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<ProductGroupPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductGroupPrivateVd_Order_By>>;
  where?: Maybe<ProductGroupPrivateVd_Bool_Exp>;
};


export type Subscription_RootProductGroupPrivateVdsArgs = {
  distinct_on?: Maybe<Array<ProductGroupPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductGroupPrivateVd_Order_By>>;
  where?: Maybe<ProductGroupPrivateVd_Bool_Exp>;
};


export type Subscription_RootProductGroupsArgs = {
  distinct_on?: Maybe<Array<ProductGroup_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductGroup_Order_By>>;
  where?: Maybe<ProductGroup_Bool_Exp>;
};


export type Subscription_RootProductPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<ProductPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductPrivateVd_Order_By>>;
  where?: Maybe<ProductPrivateVd_Bool_Exp>;
};


export type Subscription_RootProductPrivateVdsArgs = {
  distinct_on?: Maybe<Array<ProductPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductPrivateVd_Order_By>>;
  where?: Maybe<ProductPrivateVd_Bool_Exp>;
};


export type Subscription_RootProductSpecArgs = {
  id: Scalars['bigint'];
};


export type Subscription_RootProductSpecAggregateArgs = {
  distinct_on?: Maybe<Array<ProductSpec_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductSpec_Order_By>>;
  where?: Maybe<ProductSpec_Bool_Exp>;
};


export type Subscription_RootProductSpecPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<ProductSpecPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductSpecPrivateVd_Order_By>>;
  where?: Maybe<ProductSpecPrivateVd_Bool_Exp>;
};


export type Subscription_RootProductSpecPrivateVdsArgs = {
  distinct_on?: Maybe<Array<ProductSpecPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductSpecPrivateVd_Order_By>>;
  where?: Maybe<ProductSpecPrivateVd_Bool_Exp>;
};


export type Subscription_RootProductSpecsArgs = {
  distinct_on?: Maybe<Array<ProductSpec_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProductSpec_Order_By>>;
  where?: Maybe<ProductSpec_Bool_Exp>;
};


export type Subscription_RootProductsArgs = {
  distinct_on?: Maybe<Array<Product_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Order_By>>;
  where?: Maybe<Product_Bool_Exp>;
};


export type Subscription_RootProjectArgs = {
  id: Scalars['bigint'];
};


export type Subscription_RootProjectAggregateArgs = {
  distinct_on?: Maybe<Array<Project_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Project_Order_By>>;
  where?: Maybe<Project_Bool_Exp>;
};


export type Subscription_RootProjectInvitationArgs = {
  id: Scalars['bigint'];
};


export type Subscription_RootProjectInvitationAggregateArgs = {
  distinct_on?: Maybe<Array<ProjectInvitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProjectInvitation_Order_By>>;
  where?: Maybe<ProjectInvitation_Bool_Exp>;
};


export type Subscription_RootProjectInvitationPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<ProjectInvitationPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProjectInvitationPrivateVd_Order_By>>;
  where?: Maybe<ProjectInvitationPrivateVd_Bool_Exp>;
};


export type Subscription_RootProjectInvitationPrivateVdsArgs = {
  distinct_on?: Maybe<Array<ProjectInvitationPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProjectInvitationPrivateVd_Order_By>>;
  where?: Maybe<ProjectInvitationPrivateVd_Bool_Exp>;
};


export type Subscription_RootProjectInvitationsArgs = {
  distinct_on?: Maybe<Array<ProjectInvitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProjectInvitation_Order_By>>;
  where?: Maybe<ProjectInvitation_Bool_Exp>;
};


export type Subscription_RootProjectPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<ProjectPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProjectPrivateVd_Order_By>>;
  where?: Maybe<ProjectPrivateVd_Bool_Exp>;
};


export type Subscription_RootProjectPrivateVdsArgs = {
  distinct_on?: Maybe<Array<ProjectPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProjectPrivateVd_Order_By>>;
  where?: Maybe<ProjectPrivateVd_Bool_Exp>;
};


export type Subscription_RootProjectsArgs = {
  distinct_on?: Maybe<Array<Project_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Project_Order_By>>;
  where?: Maybe<Project_Bool_Exp>;
};


export type Subscription_RootRecipientInfoArgs = {
  id: Scalars['bigint'];
};


export type Subscription_RootRecipientInfoAggregateArgs = {
  distinct_on?: Maybe<Array<RecipientInfo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RecipientInfo_Order_By>>;
  where?: Maybe<RecipientInfo_Bool_Exp>;
};


export type Subscription_RootRecipientInfoPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<RecipientInfoPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RecipientInfoPrivateVd_Order_By>>;
  where?: Maybe<RecipientInfoPrivateVd_Bool_Exp>;
};


export type Subscription_RootRecipientInfoPrivateVdsArgs = {
  distinct_on?: Maybe<Array<RecipientInfoPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RecipientInfoPrivateVd_Order_By>>;
  where?: Maybe<RecipientInfoPrivateVd_Bool_Exp>;
};


export type Subscription_RootRecipientInfosArgs = {
  distinct_on?: Maybe<Array<RecipientInfo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RecipientInfo_Order_By>>;
  where?: Maybe<RecipientInfo_Bool_Exp>;
};


export type Subscription_RootRecoveryTokenArgs = {
  id: Scalars['bigint'];
};


export type Subscription_RootRecoveryTokenAggregateArgs = {
  distinct_on?: Maybe<Array<RecoveryToken_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RecoveryToken_Order_By>>;
  where?: Maybe<RecoveryToken_Bool_Exp>;
};


export type Subscription_RootRecoveryTokensArgs = {
  distinct_on?: Maybe<Array<RecoveryToken_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RecoveryToken_Order_By>>;
  where?: Maybe<RecoveryToken_Bool_Exp>;
};


export type Subscription_RootShippingFeeArgs = {
  id: Scalars['bigint'];
};


export type Subscription_RootShippingFeeAggregateArgs = {
  distinct_on?: Maybe<Array<ShippingFee_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ShippingFee_Order_By>>;
  where?: Maybe<ShippingFee_Bool_Exp>;
};


export type Subscription_RootShippingFeePrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<ShippingFeePrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ShippingFeePrivateVd_Order_By>>;
  where?: Maybe<ShippingFeePrivateVd_Bool_Exp>;
};


export type Subscription_RootShippingFeePrivateVdsArgs = {
  distinct_on?: Maybe<Array<ShippingFeePrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ShippingFeePrivateVd_Order_By>>;
  where?: Maybe<ShippingFeePrivateVd_Bool_Exp>;
};


export type Subscription_RootShippingFeesArgs = {
  distinct_on?: Maybe<Array<ShippingFee_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ShippingFee_Order_By>>;
  where?: Maybe<ShippingFee_Bool_Exp>;
};


export type Subscription_RootSubscriptionOrderArgs = {
  id: Scalars['bigint'];
};


export type Subscription_RootSubscriptionOrderAggregateArgs = {
  distinct_on?: Maybe<Array<SubscriptionOrder_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<SubscriptionOrder_Order_By>>;
  where?: Maybe<SubscriptionOrder_Bool_Exp>;
};


export type Subscription_RootSubscriptionOrderPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<SubscriptionOrderPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<SubscriptionOrderPrivateVd_Order_By>>;
  where?: Maybe<SubscriptionOrderPrivateVd_Bool_Exp>;
};


export type Subscription_RootSubscriptionOrderPrivateVdsArgs = {
  distinct_on?: Maybe<Array<SubscriptionOrderPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<SubscriptionOrderPrivateVd_Order_By>>;
  where?: Maybe<SubscriptionOrderPrivateVd_Bool_Exp>;
};


export type Subscription_RootSubscriptionOrdersArgs = {
  distinct_on?: Maybe<Array<SubscriptionOrder_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<SubscriptionOrder_Order_By>>;
  where?: Maybe<SubscriptionOrder_Bool_Exp>;
};


export type Subscription_RootUserArgs = {
  id: Scalars['bigint'];
};


export type Subscription_RootUserAggregateArgs = {
  distinct_on?: Maybe<Array<User_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<User_Order_By>>;
  where?: Maybe<User_Bool_Exp>;
};


export type Subscription_RootUserGroupArgs = {
  id: Scalars['bigint'];
};


export type Subscription_RootUserGroupAggregateArgs = {
  distinct_on?: Maybe<Array<UserGroup_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserGroup_Order_By>>;
  where?: Maybe<UserGroup_Bool_Exp>;
};


export type Subscription_RootUserGroupPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<UserGroupPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserGroupPrivateVd_Order_By>>;
  where?: Maybe<UserGroupPrivateVd_Bool_Exp>;
};


export type Subscription_RootUserGroupPrivateVdsArgs = {
  distinct_on?: Maybe<Array<UserGroupPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserGroupPrivateVd_Order_By>>;
  where?: Maybe<UserGroupPrivateVd_Bool_Exp>;
};


export type Subscription_RootUserGroupsArgs = {
  distinct_on?: Maybe<Array<UserGroup_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserGroup_Order_By>>;
  where?: Maybe<UserGroup_Bool_Exp>;
};


export type Subscription_RootUserMemoArgs = {
  id: Scalars['bigint'];
};


export type Subscription_RootUserMemoAggregateArgs = {
  distinct_on?: Maybe<Array<UserMemo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserMemo_Order_By>>;
  where?: Maybe<UserMemo_Bool_Exp>;
};


export type Subscription_RootUserMemoPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<UserMemoPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserMemoPrivateVd_Order_By>>;
  where?: Maybe<UserMemoPrivateVd_Bool_Exp>;
};


export type Subscription_RootUserMemoPrivateVdsArgs = {
  distinct_on?: Maybe<Array<UserMemoPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserMemoPrivateVd_Order_By>>;
  where?: Maybe<UserMemoPrivateVd_Bool_Exp>;
};


export type Subscription_RootUserMemosArgs = {
  distinct_on?: Maybe<Array<UserMemo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserMemo_Order_By>>;
  where?: Maybe<UserMemo_Bool_Exp>;
};


export type Subscription_RootUserOrganizationArgs = {
  id: Scalars['bigint'];
};


export type Subscription_RootUserOrganizationAggregateArgs = {
  distinct_on?: Maybe<Array<UserOrganization_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserOrganization_Order_By>>;
  where?: Maybe<UserOrganization_Bool_Exp>;
};


export type Subscription_RootUserOrganizationPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<UserOrganizationPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserOrganizationPrivateVd_Order_By>>;
  where?: Maybe<UserOrganizationPrivateVd_Bool_Exp>;
};


export type Subscription_RootUserOrganizationPrivateVdsArgs = {
  distinct_on?: Maybe<Array<UserOrganizationPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserOrganizationPrivateVd_Order_By>>;
  where?: Maybe<UserOrganizationPrivateVd_Bool_Exp>;
};


export type Subscription_RootUserOrganizationsArgs = {
  distinct_on?: Maybe<Array<UserOrganization_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserOrganization_Order_By>>;
  where?: Maybe<UserOrganization_Bool_Exp>;
};


export type Subscription_RootUserPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<UserPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserPrivateVd_Order_By>>;
  where?: Maybe<UserPrivateVd_Bool_Exp>;
};


export type Subscription_RootUserPrivateVdsArgs = {
  distinct_on?: Maybe<Array<UserPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserPrivateVd_Order_By>>;
  where?: Maybe<UserPrivateVd_Bool_Exp>;
};


export type Subscription_RootUserProjectArgs = {
  id: Scalars['bigint'];
};


export type Subscription_RootUserProjectAggregateArgs = {
  distinct_on?: Maybe<Array<UserProject_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserProject_Order_By>>;
  where?: Maybe<UserProject_Bool_Exp>;
};


export type Subscription_RootUserProjectPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<UserProjectPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserProjectPrivateVd_Order_By>>;
  where?: Maybe<UserProjectPrivateVd_Bool_Exp>;
};


export type Subscription_RootUserProjectPrivateVdsArgs = {
  distinct_on?: Maybe<Array<UserProjectPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserProjectPrivateVd_Order_By>>;
  where?: Maybe<UserProjectPrivateVd_Bool_Exp>;
};


export type Subscription_RootUserProjectsArgs = {
  distinct_on?: Maybe<Array<UserProject_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserProject_Order_By>>;
  where?: Maybe<UserProject_Bool_Exp>;
};


export type Subscription_RootUserSettingArgs = {
  id: Scalars['bigint'];
};


export type Subscription_RootUserSettingAggregateArgs = {
  distinct_on?: Maybe<Array<UserSetting_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserSetting_Order_By>>;
  where?: Maybe<UserSetting_Bool_Exp>;
};


export type Subscription_RootUserSettingPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<UserSettingPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserSettingPrivateVd_Order_By>>;
  where?: Maybe<UserSettingPrivateVd_Bool_Exp>;
};


export type Subscription_RootUserSettingPrivateVdsArgs = {
  distinct_on?: Maybe<Array<UserSettingPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserSettingPrivateVd_Order_By>>;
  where?: Maybe<UserSettingPrivateVd_Bool_Exp>;
};


export type Subscription_RootUserSettingsArgs = {
  distinct_on?: Maybe<Array<UserSetting_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserSetting_Order_By>>;
  where?: Maybe<UserSetting_Bool_Exp>;
};


export type Subscription_RootUserUserGroupArgs = {
  id: Scalars['bigint'];
};


export type Subscription_RootUserUserGroupAggregateArgs = {
  distinct_on?: Maybe<Array<UserUserGroup_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserUserGroup_Order_By>>;
  where?: Maybe<UserUserGroup_Bool_Exp>;
};


export type Subscription_RootUserUserGroupPrivateVdAggregateArgs = {
  distinct_on?: Maybe<Array<UserUserGroupPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserUserGroupPrivateVd_Order_By>>;
  where?: Maybe<UserUserGroupPrivateVd_Bool_Exp>;
};


export type Subscription_RootUserUserGroupPrivateVdsArgs = {
  distinct_on?: Maybe<Array<UserUserGroupPrivateVd_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserUserGroupPrivateVd_Order_By>>;
  where?: Maybe<UserUserGroupPrivateVd_Bool_Exp>;
};


export type Subscription_RootUserUserGroupsArgs = {
  distinct_on?: Maybe<Array<UserUserGroup_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserUserGroup_Order_By>>;
  where?: Maybe<UserUserGroup_Bool_Exp>;
};


export type Subscription_RootUsersArgs = {
  distinct_on?: Maybe<Array<User_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<User_Order_By>>;
  where?: Maybe<User_Bool_Exp>;
};


/** Boolean expression to compare columns of type "timestamptz". All fields are combined with logical 'AND'. */
export type Timestamptz_Comparison_Exp = {
  _eq?: Maybe<Scalars['timestamptz']>;
  _gt?: Maybe<Scalars['timestamptz']>;
  _gte?: Maybe<Scalars['timestamptz']>;
  _in?: Maybe<Array<Scalars['timestamptz']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['timestamptz']>;
  _lte?: Maybe<Scalars['timestamptz']>;
  _neq?: Maybe<Scalars['timestamptz']>;
  _nin?: Maybe<Array<Scalars['timestamptz']>>;
};

/** columns and relationships of "tbl_user" */
export type User = {
  __typename?: 'user';
  /** An array relationship */
  accountLinks: Array<AccountLink>;
  /** An aggregate relationship */
  accountLinks_aggregate: AccountLink_Aggregate;
  /** An array relationship */
  asIssueAuthor: Array<Issue>;
  /** An aggregate relationship */
  asIssueAuthor_aggregate: Issue_Aggregate;
  /** An array relationship */
  asIssueCommentAuthor: Array<IssueComment>;
  /** An aggregate relationship */
  asIssueCommentAuthor_aggregate: IssueComment_Aggregate;
  /** An array relationship */
  assignedMessage: Array<ContactUsMessage>;
  /** An aggregate relationship */
  assignedMessage_aggregate: ContactUsMessage_Aggregate;
  /** An array relationship */
  browserSessions: Array<BrowserSession>;
  /** An aggregate relationship */
  browserSessions_aggregate: BrowserSession_Aggregate;
  /** An array relationship */
  buyerInfos: Array<BuyerInfo>;
  /** An aggregate relationship */
  buyerInfos_aggregate: BuyerInfo_Aggregate;
  confirmationSentAt?: Maybe<Scalars['timestamptz']>;
  confirmationToken?: Maybe<Scalars['String']>;
  confirmedAt?: Maybe<Scalars['timestamptz']>;
  /** An array relationship */
  couponRecords: Array<CouponRecord>;
  /** An aggregate relationship */
  couponRecords_aggregate: CouponRecord_Aggregate;
  /** An array relationship */
  coupons: Array<Coupon>;
  /** An aggregate relationship */
  coupons_aggregate: Coupon_Aggregate;
  created_at: Scalars['timestamptz'];
  currentSignInAt?: Maybe<Scalars['String']>;
  currentSignInIp?: Maybe<Scalars['String']>;
  data?: Maybe<Scalars['jsonb']>;
  /** An array relationship */
  defaultBuyerInfo: Array<BuyerInfo>;
  /** An aggregate relationship */
  defaultBuyerInfo_aggregate: BuyerInfo_Aggregate;
  /** An array relationship */
  defaultRecipientInfo: Array<RecipientInfo>;
  /** An aggregate relationship */
  defaultRecipientInfo_aggregate: RecipientInfo_Aggregate;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  email?: Maybe<Scalars['String']>;
  /** An array relationship */
  groupInvitations: Array<GroupInvitation>;
  /** An aggregate relationship */
  groupInvitations_aggregate: GroupInvitation_Aggregate;
  id: Scalars['bigint'];
  /** An array relationship */
  invitedGroupUsers: Array<GroupInvitation>;
  /** An aggregate relationship */
  invitedGroupUsers_aggregate: GroupInvitation_Aggregate;
  /** An array relationship */
  invitedOrganizationUsers: Array<OrganizationInvitation>;
  /** An aggregate relationship */
  invitedOrganizationUsers_aggregate: OrganizationInvitation_Aggregate;
  /** An array relationship */
  invitedProjectUsers: Array<ProjectInvitation>;
  /** An aggregate relationship */
  invitedProjectUsers_aggregate: ProjectInvitation_Aggregate;
  labels?: Maybe<Scalars['jsonb']>;
  lastSignInAt?: Maybe<Scalars['String']>;
  lastSignInIp?: Maybe<Scalars['String']>;
  /** An array relationship */
  leftMessages: Array<ContactUsMessage>;
  /** An aggregate relationship */
  leftMessages_aggregate: ContactUsMessage_Aggregate;
  manageCoupon?: Maybe<Scalars['Boolean']>;
  /** An object relationship */
  managedBy: Organization;
  /** An array relationship */
  memos: Array<UserMemo>;
  /** An aggregate relationship */
  memos_aggregate: UserMemo_Aggregate;
  mobile?: Maybe<Scalars['String']>;
  /** Username */
  name?: Maybe<Scalars['String']>;
  /** An array relationship */
  notifications: Array<Notification>;
  /** An aggregate relationship */
  notifications_aggregate: Notification_Aggregate;
  /** An array relationship */
  orders: Array<Order>;
  ordersCount?: Maybe<Scalars['Int']>;
  ordersPriceTotal?: Maybe<Scalars['Int']>;
  /** An aggregate relationship */
  orders_aggregate: Order_Aggregate;
  org_mgr_id?: Maybe<Scalars['bigint']>;
  /** An array relationship */
  organizationInvitations: Array<OrganizationInvitation>;
  /** An aggregate relationship */
  organizationInvitations_aggregate: OrganizationInvitation_Aggregate;
  /** An array relationship */
  organizations: Array<UserOrganization>;
  /** An aggregate relationship */
  organizations_aggregate: UserOrganization_Aggregate;
  picture?: Maybe<Scalars['String']>;
  /** An object relationship */
  privateVd?: Maybe<UserPrivateVd>;
  privilege?: Maybe<Scalars['String']>;
  /** An array relationship */
  projectInvitations: Array<ProjectInvitation>;
  /** An aggregate relationship */
  projectInvitations_aggregate: ProjectInvitation_Aggregate;
  /** An array relationship */
  projects: Array<UserProject>;
  /** An aggregate relationship */
  projects_aggregate: UserProject_Aggregate;
  /** An array relationship */
  provideCoupons: Array<Coupon>;
  /** An aggregate relationship */
  provideCoupons_aggregate: Coupon_Aggregate;
  /** Username */
  realName?: Maybe<Scalars['String']>;
  /** An array relationship */
  recipientInfos: Array<RecipientInfo>;
  /** An aggregate relationship */
  recipientInfos_aggregate: RecipientInfo_Aggregate;
  signInCount?: Maybe<Scalars['Int']>;
  /** An array relationship */
  subscriptionOrders: Array<SubscriptionOrder>;
  /** An aggregate relationship */
  subscriptionOrders_aggregate: SubscriptionOrder_Aggregate;
  /** type of user. ex. regular, room, ... etc. */
  type?: Maybe<Scalars['String']>;
  unconfirmedEmail?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
  /** An array relationship */
  userGroups: Array<UserUserGroup>;
  /** An aggregate relationship */
  userGroups_aggregate: UserUserGroup_Aggregate;
  /** An array relationship */
  userSettings: Array<UserSetting>;
  /** An aggregate relationship */
  userSettings_aggregate: UserSetting_Aggregate;
};


/** columns and relationships of "tbl_user" */
export type UserAccountLinksArgs = {
  distinct_on?: Maybe<Array<AccountLink_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<AccountLink_Order_By>>;
  where?: Maybe<AccountLink_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserAccountLinks_AggregateArgs = {
  distinct_on?: Maybe<Array<AccountLink_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<AccountLink_Order_By>>;
  where?: Maybe<AccountLink_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserAsIssueAuthorArgs = {
  distinct_on?: Maybe<Array<Issue_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Issue_Order_By>>;
  where?: Maybe<Issue_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserAsIssueAuthor_AggregateArgs = {
  distinct_on?: Maybe<Array<Issue_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Issue_Order_By>>;
  where?: Maybe<Issue_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserAsIssueCommentAuthorArgs = {
  distinct_on?: Maybe<Array<IssueComment_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<IssueComment_Order_By>>;
  where?: Maybe<IssueComment_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserAsIssueCommentAuthor_AggregateArgs = {
  distinct_on?: Maybe<Array<IssueComment_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<IssueComment_Order_By>>;
  where?: Maybe<IssueComment_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserAssignedMessageArgs = {
  distinct_on?: Maybe<Array<ContactUsMessage_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContactUsMessage_Order_By>>;
  where?: Maybe<ContactUsMessage_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserAssignedMessage_AggregateArgs = {
  distinct_on?: Maybe<Array<ContactUsMessage_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContactUsMessage_Order_By>>;
  where?: Maybe<ContactUsMessage_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserBrowserSessionsArgs = {
  distinct_on?: Maybe<Array<BrowserSession_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<BrowserSession_Order_By>>;
  where?: Maybe<BrowserSession_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserBrowserSessions_AggregateArgs = {
  distinct_on?: Maybe<Array<BrowserSession_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<BrowserSession_Order_By>>;
  where?: Maybe<BrowserSession_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserBuyerInfosArgs = {
  distinct_on?: Maybe<Array<BuyerInfo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<BuyerInfo_Order_By>>;
  where?: Maybe<BuyerInfo_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserBuyerInfos_AggregateArgs = {
  distinct_on?: Maybe<Array<BuyerInfo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<BuyerInfo_Order_By>>;
  where?: Maybe<BuyerInfo_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserCouponRecordsArgs = {
  distinct_on?: Maybe<Array<CouponRecord_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<CouponRecord_Order_By>>;
  where?: Maybe<CouponRecord_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserCouponRecords_AggregateArgs = {
  distinct_on?: Maybe<Array<CouponRecord_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<CouponRecord_Order_By>>;
  where?: Maybe<CouponRecord_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserCouponsArgs = {
  distinct_on?: Maybe<Array<Coupon_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Coupon_Order_By>>;
  where?: Maybe<Coupon_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserCoupons_AggregateArgs = {
  distinct_on?: Maybe<Array<Coupon_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Coupon_Order_By>>;
  where?: Maybe<Coupon_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserDataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "tbl_user" */
export type UserDefaultBuyerInfoArgs = {
  distinct_on?: Maybe<Array<BuyerInfo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<BuyerInfo_Order_By>>;
  where?: Maybe<BuyerInfo_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserDefaultBuyerInfo_AggregateArgs = {
  distinct_on?: Maybe<Array<BuyerInfo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<BuyerInfo_Order_By>>;
  where?: Maybe<BuyerInfo_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserDefaultRecipientInfoArgs = {
  distinct_on?: Maybe<Array<RecipientInfo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RecipientInfo_Order_By>>;
  where?: Maybe<RecipientInfo_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserDefaultRecipientInfo_AggregateArgs = {
  distinct_on?: Maybe<Array<RecipientInfo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RecipientInfo_Order_By>>;
  where?: Maybe<RecipientInfo_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserGroupInvitationsArgs = {
  distinct_on?: Maybe<Array<GroupInvitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<GroupInvitation_Order_By>>;
  where?: Maybe<GroupInvitation_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserGroupInvitations_AggregateArgs = {
  distinct_on?: Maybe<Array<GroupInvitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<GroupInvitation_Order_By>>;
  where?: Maybe<GroupInvitation_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserInvitedGroupUsersArgs = {
  distinct_on?: Maybe<Array<GroupInvitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<GroupInvitation_Order_By>>;
  where?: Maybe<GroupInvitation_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserInvitedGroupUsers_AggregateArgs = {
  distinct_on?: Maybe<Array<GroupInvitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<GroupInvitation_Order_By>>;
  where?: Maybe<GroupInvitation_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserInvitedOrganizationUsersArgs = {
  distinct_on?: Maybe<Array<OrganizationInvitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrganizationInvitation_Order_By>>;
  where?: Maybe<OrganizationInvitation_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserInvitedOrganizationUsers_AggregateArgs = {
  distinct_on?: Maybe<Array<OrganizationInvitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrganizationInvitation_Order_By>>;
  where?: Maybe<OrganizationInvitation_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserInvitedProjectUsersArgs = {
  distinct_on?: Maybe<Array<ProjectInvitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProjectInvitation_Order_By>>;
  where?: Maybe<ProjectInvitation_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserInvitedProjectUsers_AggregateArgs = {
  distinct_on?: Maybe<Array<ProjectInvitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProjectInvitation_Order_By>>;
  where?: Maybe<ProjectInvitation_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserLabelsArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "tbl_user" */
export type UserLeftMessagesArgs = {
  distinct_on?: Maybe<Array<ContactUsMessage_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContactUsMessage_Order_By>>;
  where?: Maybe<ContactUsMessage_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserLeftMessages_AggregateArgs = {
  distinct_on?: Maybe<Array<ContactUsMessage_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContactUsMessage_Order_By>>;
  where?: Maybe<ContactUsMessage_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserMemosArgs = {
  distinct_on?: Maybe<Array<UserMemo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserMemo_Order_By>>;
  where?: Maybe<UserMemo_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserMemos_AggregateArgs = {
  distinct_on?: Maybe<Array<UserMemo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserMemo_Order_By>>;
  where?: Maybe<UserMemo_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserNotificationsArgs = {
  distinct_on?: Maybe<Array<Notification_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Notification_Order_By>>;
  where?: Maybe<Notification_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserNotifications_AggregateArgs = {
  distinct_on?: Maybe<Array<Notification_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Notification_Order_By>>;
  where?: Maybe<Notification_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserOrdersArgs = {
  distinct_on?: Maybe<Array<Order_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Order_Order_By>>;
  where?: Maybe<Order_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserOrders_AggregateArgs = {
  distinct_on?: Maybe<Array<Order_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Order_Order_By>>;
  where?: Maybe<Order_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserOrganizationInvitationsArgs = {
  distinct_on?: Maybe<Array<OrganizationInvitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrganizationInvitation_Order_By>>;
  where?: Maybe<OrganizationInvitation_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserOrganizationInvitations_AggregateArgs = {
  distinct_on?: Maybe<Array<OrganizationInvitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrganizationInvitation_Order_By>>;
  where?: Maybe<OrganizationInvitation_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserOrganizationsArgs = {
  distinct_on?: Maybe<Array<UserOrganization_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserOrganization_Order_By>>;
  where?: Maybe<UserOrganization_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserOrganizations_AggregateArgs = {
  distinct_on?: Maybe<Array<UserOrganization_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserOrganization_Order_By>>;
  where?: Maybe<UserOrganization_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserProjectInvitationsArgs = {
  distinct_on?: Maybe<Array<ProjectInvitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProjectInvitation_Order_By>>;
  where?: Maybe<ProjectInvitation_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserProjectInvitations_AggregateArgs = {
  distinct_on?: Maybe<Array<ProjectInvitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProjectInvitation_Order_By>>;
  where?: Maybe<ProjectInvitation_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserProjectsArgs = {
  distinct_on?: Maybe<Array<UserProject_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserProject_Order_By>>;
  where?: Maybe<UserProject_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserProjects_AggregateArgs = {
  distinct_on?: Maybe<Array<UserProject_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserProject_Order_By>>;
  where?: Maybe<UserProject_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserProvideCouponsArgs = {
  distinct_on?: Maybe<Array<Coupon_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Coupon_Order_By>>;
  where?: Maybe<Coupon_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserProvideCoupons_AggregateArgs = {
  distinct_on?: Maybe<Array<Coupon_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Coupon_Order_By>>;
  where?: Maybe<Coupon_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserRecipientInfosArgs = {
  distinct_on?: Maybe<Array<RecipientInfo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RecipientInfo_Order_By>>;
  where?: Maybe<RecipientInfo_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserRecipientInfos_AggregateArgs = {
  distinct_on?: Maybe<Array<RecipientInfo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RecipientInfo_Order_By>>;
  where?: Maybe<RecipientInfo_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserSubscriptionOrdersArgs = {
  distinct_on?: Maybe<Array<SubscriptionOrder_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<SubscriptionOrder_Order_By>>;
  where?: Maybe<SubscriptionOrder_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserSubscriptionOrders_AggregateArgs = {
  distinct_on?: Maybe<Array<SubscriptionOrder_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<SubscriptionOrder_Order_By>>;
  where?: Maybe<SubscriptionOrder_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserUserGroupsArgs = {
  distinct_on?: Maybe<Array<UserUserGroup_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserUserGroup_Order_By>>;
  where?: Maybe<UserUserGroup_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserUserGroups_AggregateArgs = {
  distinct_on?: Maybe<Array<UserUserGroup_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserUserGroup_Order_By>>;
  where?: Maybe<UserUserGroup_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserUserSettingsArgs = {
  distinct_on?: Maybe<Array<UserSetting_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserSetting_Order_By>>;
  where?: Maybe<UserSetting_Bool_Exp>;
};


/** columns and relationships of "tbl_user" */
export type UserUserSettings_AggregateArgs = {
  distinct_on?: Maybe<Array<UserSetting_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserSetting_Order_By>>;
  where?: Maybe<UserSetting_Bool_Exp>;
};

/** columns and relationships of "tbl_user_group" */
export type UserGroup = {
  __typename?: 'userGroup';
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id: Scalars['bigint'];
  /** An array relationship */
  invitees: Array<GroupInvitation>;
  /** An aggregate relationship */
  invitees_aggregate: GroupInvitation_Aggregate;
  name?: Maybe<Scalars['String']>;
  /** An object relationship */
  privateVd?: Maybe<UserGroupPrivateVd>;
  updated_at: Scalars['timestamptz'];
  /** An array relationship */
  users: Array<UserUserGroup>;
  /** An aggregate relationship */
  users_aggregate: UserUserGroup_Aggregate;
};


/** columns and relationships of "tbl_user_group" */
export type UserGroupInviteesArgs = {
  distinct_on?: Maybe<Array<GroupInvitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<GroupInvitation_Order_By>>;
  where?: Maybe<GroupInvitation_Bool_Exp>;
};


/** columns and relationships of "tbl_user_group" */
export type UserGroupInvitees_AggregateArgs = {
  distinct_on?: Maybe<Array<GroupInvitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<GroupInvitation_Order_By>>;
  where?: Maybe<GroupInvitation_Bool_Exp>;
};


/** columns and relationships of "tbl_user_group" */
export type UserGroupUsersArgs = {
  distinct_on?: Maybe<Array<UserUserGroup_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserUserGroup_Order_By>>;
  where?: Maybe<UserUserGroup_Bool_Exp>;
};


/** columns and relationships of "tbl_user_group" */
export type UserGroupUsers_AggregateArgs = {
  distinct_on?: Maybe<Array<UserUserGroup_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserUserGroup_Order_By>>;
  where?: Maybe<UserUserGroup_Bool_Exp>;
};

/** columns and relationships of "view_user_group_private_vd" */
export type UserGroupPrivateVd = {
  __typename?: 'userGroupPrivateVd';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  /** An array relationship */
  invitees: Array<GroupInvitation>;
  /** An aggregate relationship */
  invitees_aggregate: GroupInvitation_Aggregate;
  /** An array relationship */
  inviters: Array<GroupInvitation>;
  /** An aggregate relationship */
  inviters_aggregate: GroupInvitation_Aggregate;
  name?: Maybe<Scalars['String']>;
  /** An object relationship */
  publicData?: Maybe<UserGroup>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  /** An array relationship */
  users: Array<UserUserGroup>;
  /** An aggregate relationship */
  users_aggregate: UserUserGroup_Aggregate;
};


/** columns and relationships of "view_user_group_private_vd" */
export type UserGroupPrivateVdInviteesArgs = {
  distinct_on?: Maybe<Array<GroupInvitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<GroupInvitation_Order_By>>;
  where?: Maybe<GroupInvitation_Bool_Exp>;
};


/** columns and relationships of "view_user_group_private_vd" */
export type UserGroupPrivateVdInvitees_AggregateArgs = {
  distinct_on?: Maybe<Array<GroupInvitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<GroupInvitation_Order_By>>;
  where?: Maybe<GroupInvitation_Bool_Exp>;
};


/** columns and relationships of "view_user_group_private_vd" */
export type UserGroupPrivateVdInvitersArgs = {
  distinct_on?: Maybe<Array<GroupInvitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<GroupInvitation_Order_By>>;
  where?: Maybe<GroupInvitation_Bool_Exp>;
};


/** columns and relationships of "view_user_group_private_vd" */
export type UserGroupPrivateVdInviters_AggregateArgs = {
  distinct_on?: Maybe<Array<GroupInvitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<GroupInvitation_Order_By>>;
  where?: Maybe<GroupInvitation_Bool_Exp>;
};


/** columns and relationships of "view_user_group_private_vd" */
export type UserGroupPrivateVdUsersArgs = {
  distinct_on?: Maybe<Array<UserUserGroup_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserUserGroup_Order_By>>;
  where?: Maybe<UserUserGroup_Bool_Exp>;
};


/** columns and relationships of "view_user_group_private_vd" */
export type UserGroupPrivateVdUsers_AggregateArgs = {
  distinct_on?: Maybe<Array<UserUserGroup_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserUserGroup_Order_By>>;
  where?: Maybe<UserUserGroup_Bool_Exp>;
};

/** aggregated selection of "view_user_group_private_vd" */
export type UserGroupPrivateVd_Aggregate = {
  __typename?: 'userGroupPrivateVd_aggregate';
  aggregate?: Maybe<UserGroupPrivateVd_Aggregate_Fields>;
  nodes: Array<UserGroupPrivateVd>;
};

/** aggregate fields of "view_user_group_private_vd" */
export type UserGroupPrivateVd_Aggregate_Fields = {
  __typename?: 'userGroupPrivateVd_aggregate_fields';
  avg?: Maybe<UserGroupPrivateVd_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<UserGroupPrivateVd_Max_Fields>;
  min?: Maybe<UserGroupPrivateVd_Min_Fields>;
  stddev?: Maybe<UserGroupPrivateVd_Stddev_Fields>;
  stddev_pop?: Maybe<UserGroupPrivateVd_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<UserGroupPrivateVd_Stddev_Samp_Fields>;
  sum?: Maybe<UserGroupPrivateVd_Sum_Fields>;
  var_pop?: Maybe<UserGroupPrivateVd_Var_Pop_Fields>;
  var_samp?: Maybe<UserGroupPrivateVd_Var_Samp_Fields>;
  variance?: Maybe<UserGroupPrivateVd_Variance_Fields>;
};


/** aggregate fields of "view_user_group_private_vd" */
export type UserGroupPrivateVd_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<UserGroupPrivateVd_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type UserGroupPrivateVd_Avg_Fields = {
  __typename?: 'userGroupPrivateVd_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "view_user_group_private_vd". All fields are combined with a logical 'AND'. */
export type UserGroupPrivateVd_Bool_Exp = {
  _and?: Maybe<Array<UserGroupPrivateVd_Bool_Exp>>;
  _not?: Maybe<UserGroupPrivateVd_Bool_Exp>;
  _or?: Maybe<Array<UserGroupPrivateVd_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  invitees?: Maybe<GroupInvitation_Bool_Exp>;
  inviters?: Maybe<GroupInvitation_Bool_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  publicData?: Maybe<UserGroup_Bool_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  users?: Maybe<UserUserGroup_Bool_Exp>;
};

/** input type for incrementing numeric columns in table "view_user_group_private_vd" */
export type UserGroupPrivateVd_Inc_Input = {
  id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "view_user_group_private_vd" */
export type UserGroupPrivateVd_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  invitees?: Maybe<GroupInvitation_Arr_Rel_Insert_Input>;
  inviters?: Maybe<GroupInvitation_Arr_Rel_Insert_Input>;
  name?: Maybe<Scalars['String']>;
  publicData?: Maybe<UserGroup_Obj_Rel_Insert_Input>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  users?: Maybe<UserUserGroup_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type UserGroupPrivateVd_Max_Fields = {
  __typename?: 'userGroupPrivateVd_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  name?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type UserGroupPrivateVd_Min_Fields = {
  __typename?: 'userGroupPrivateVd_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  name?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "view_user_group_private_vd" */
export type UserGroupPrivateVd_Mutation_Response = {
  __typename?: 'userGroupPrivateVd_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<UserGroupPrivateVd>;
};

/** input type for inserting object relation for remote table "view_user_group_private_vd" */
export type UserGroupPrivateVd_Obj_Rel_Insert_Input = {
  data: UserGroupPrivateVd_Insert_Input;
};

/** Ordering options when selecting data from "view_user_group_private_vd". */
export type UserGroupPrivateVd_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  invitees_aggregate?: Maybe<GroupInvitation_Aggregate_Order_By>;
  inviters_aggregate?: Maybe<GroupInvitation_Aggregate_Order_By>;
  name?: Maybe<Order_By>;
  publicData?: Maybe<UserGroup_Order_By>;
  updated_at?: Maybe<Order_By>;
  users_aggregate?: Maybe<UserUserGroup_Aggregate_Order_By>;
};

/** select columns of table "view_user_group_private_vd" */
export enum UserGroupPrivateVd_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "view_user_group_private_vd" */
export type UserGroupPrivateVd_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  name?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type UserGroupPrivateVd_Stddev_Fields = {
  __typename?: 'userGroupPrivateVd_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type UserGroupPrivateVd_Stddev_Pop_Fields = {
  __typename?: 'userGroupPrivateVd_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type UserGroupPrivateVd_Stddev_Samp_Fields = {
  __typename?: 'userGroupPrivateVd_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type UserGroupPrivateVd_Sum_Fields = {
  __typename?: 'userGroupPrivateVd_sum_fields';
  id?: Maybe<Scalars['bigint']>;
};

/** aggregate var_pop on columns */
export type UserGroupPrivateVd_Var_Pop_Fields = {
  __typename?: 'userGroupPrivateVd_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type UserGroupPrivateVd_Var_Samp_Fields = {
  __typename?: 'userGroupPrivateVd_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type UserGroupPrivateVd_Variance_Fields = {
  __typename?: 'userGroupPrivateVd_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregated selection of "tbl_user_group" */
export type UserGroup_Aggregate = {
  __typename?: 'userGroup_aggregate';
  aggregate?: Maybe<UserGroup_Aggregate_Fields>;
  nodes: Array<UserGroup>;
};

/** aggregate fields of "tbl_user_group" */
export type UserGroup_Aggregate_Fields = {
  __typename?: 'userGroup_aggregate_fields';
  avg?: Maybe<UserGroup_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<UserGroup_Max_Fields>;
  min?: Maybe<UserGroup_Min_Fields>;
  stddev?: Maybe<UserGroup_Stddev_Fields>;
  stddev_pop?: Maybe<UserGroup_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<UserGroup_Stddev_Samp_Fields>;
  sum?: Maybe<UserGroup_Sum_Fields>;
  var_pop?: Maybe<UserGroup_Var_Pop_Fields>;
  var_samp?: Maybe<UserGroup_Var_Samp_Fields>;
  variance?: Maybe<UserGroup_Variance_Fields>;
};


/** aggregate fields of "tbl_user_group" */
export type UserGroup_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<UserGroup_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type UserGroup_Avg_Fields = {
  __typename?: 'userGroup_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "tbl_user_group". All fields are combined with a logical 'AND'. */
export type UserGroup_Bool_Exp = {
  _and?: Maybe<Array<UserGroup_Bool_Exp>>;
  _not?: Maybe<UserGroup_Bool_Exp>;
  _or?: Maybe<Array<UserGroup_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  invitees?: Maybe<GroupInvitation_Bool_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  privateVd?: Maybe<UserGroupPrivateVd_Bool_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  users?: Maybe<UserUserGroup_Bool_Exp>;
};

/** unique or primary key constraints on table "tbl_user_group" */
export enum UserGroup_Constraint {
  /** unique or primary key constraint */
  TblUserGroupPkey = 'tbl_user_group_pkey'
}

/** input type for incrementing numeric columns in table "tbl_user_group" */
export type UserGroup_Inc_Input = {
  id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "tbl_user_group" */
export type UserGroup_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  invitees?: Maybe<GroupInvitation_Arr_Rel_Insert_Input>;
  name?: Maybe<Scalars['String']>;
  privateVd?: Maybe<UserGroupPrivateVd_Obj_Rel_Insert_Input>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  users?: Maybe<UserUserGroup_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type UserGroup_Max_Fields = {
  __typename?: 'userGroup_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  name?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type UserGroup_Min_Fields = {
  __typename?: 'userGroup_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  name?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "tbl_user_group" */
export type UserGroup_Mutation_Response = {
  __typename?: 'userGroup_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<UserGroup>;
};

/** input type for inserting object relation for remote table "tbl_user_group" */
export type UserGroup_Obj_Rel_Insert_Input = {
  data: UserGroup_Insert_Input;
  /** on conflict condition */
  on_conflict?: Maybe<UserGroup_On_Conflict>;
};

/** on conflict condition type for table "tbl_user_group" */
export type UserGroup_On_Conflict = {
  constraint: UserGroup_Constraint;
  update_columns: Array<UserGroup_Update_Column>;
  where?: Maybe<UserGroup_Bool_Exp>;
};

/** Ordering options when selecting data from "tbl_user_group". */
export type UserGroup_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  invitees_aggregate?: Maybe<GroupInvitation_Aggregate_Order_By>;
  name?: Maybe<Order_By>;
  privateVd?: Maybe<UserGroupPrivateVd_Order_By>;
  updated_at?: Maybe<Order_By>;
  users_aggregate?: Maybe<UserUserGroup_Aggregate_Order_By>;
};

/** primary key columns input for table: userGroup */
export type UserGroup_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** select columns of table "tbl_user_group" */
export enum UserGroup_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "tbl_user_group" */
export type UserGroup_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  name?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type UserGroup_Stddev_Fields = {
  __typename?: 'userGroup_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type UserGroup_Stddev_Pop_Fields = {
  __typename?: 'userGroup_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type UserGroup_Stddev_Samp_Fields = {
  __typename?: 'userGroup_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type UserGroup_Sum_Fields = {
  __typename?: 'userGroup_sum_fields';
  id?: Maybe<Scalars['bigint']>;
};

/** update columns of table "tbl_user_group" */
export enum UserGroup_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type UserGroup_Var_Pop_Fields = {
  __typename?: 'userGroup_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type UserGroup_Var_Samp_Fields = {
  __typename?: 'userGroup_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type UserGroup_Variance_Fields = {
  __typename?: 'userGroup_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "mn_user_memo" */
export type UserMemo = {
  __typename?: 'userMemo';
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id: Scalars['bigint'];
  /** An object relationship */
  memo: Memo;
  memo_id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  privateVd?: Maybe<UserMemoPrivateVd>;
  role?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user: User;
  user_id?: Maybe<Scalars['bigint']>;
};

/** columns and relationships of "view_user_memo_private_vd" */
export type UserMemoPrivateVd = {
  __typename?: 'userMemoPrivateVd';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  memo?: Maybe<Memo>;
  memo_id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  publicData?: Maybe<UserMemo>;
  role?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  user?: Maybe<User>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregated selection of "view_user_memo_private_vd" */
export type UserMemoPrivateVd_Aggregate = {
  __typename?: 'userMemoPrivateVd_aggregate';
  aggregate?: Maybe<UserMemoPrivateVd_Aggregate_Fields>;
  nodes: Array<UserMemoPrivateVd>;
};

/** aggregate fields of "view_user_memo_private_vd" */
export type UserMemoPrivateVd_Aggregate_Fields = {
  __typename?: 'userMemoPrivateVd_aggregate_fields';
  avg?: Maybe<UserMemoPrivateVd_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<UserMemoPrivateVd_Max_Fields>;
  min?: Maybe<UserMemoPrivateVd_Min_Fields>;
  stddev?: Maybe<UserMemoPrivateVd_Stddev_Fields>;
  stddev_pop?: Maybe<UserMemoPrivateVd_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<UserMemoPrivateVd_Stddev_Samp_Fields>;
  sum?: Maybe<UserMemoPrivateVd_Sum_Fields>;
  var_pop?: Maybe<UserMemoPrivateVd_Var_Pop_Fields>;
  var_samp?: Maybe<UserMemoPrivateVd_Var_Samp_Fields>;
  variance?: Maybe<UserMemoPrivateVd_Variance_Fields>;
};


/** aggregate fields of "view_user_memo_private_vd" */
export type UserMemoPrivateVd_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<UserMemoPrivateVd_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type UserMemoPrivateVd_Avg_Fields = {
  __typename?: 'userMemoPrivateVd_avg_fields';
  id?: Maybe<Scalars['Float']>;
  memo_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "view_user_memo_private_vd". All fields are combined with a logical 'AND'. */
export type UserMemoPrivateVd_Bool_Exp = {
  _and?: Maybe<Array<UserMemoPrivateVd_Bool_Exp>>;
  _not?: Maybe<UserMemoPrivateVd_Bool_Exp>;
  _or?: Maybe<Array<UserMemoPrivateVd_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  memo?: Maybe<Memo_Bool_Exp>;
  memo_id?: Maybe<Bigint_Comparison_Exp>;
  publicData?: Maybe<UserMemo_Bool_Exp>;
  role?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<User_Bool_Exp>;
  user_id?: Maybe<Bigint_Comparison_Exp>;
};

/** input type for incrementing numeric columns in table "view_user_memo_private_vd" */
export type UserMemoPrivateVd_Inc_Input = {
  id?: Maybe<Scalars['bigint']>;
  memo_id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "view_user_memo_private_vd" */
export type UserMemoPrivateVd_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  memo?: Maybe<Memo_Obj_Rel_Insert_Input>;
  memo_id?: Maybe<Scalars['bigint']>;
  publicData?: Maybe<UserMemo_Obj_Rel_Insert_Input>;
  role?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<User_Obj_Rel_Insert_Input>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate max on columns */
export type UserMemoPrivateVd_Max_Fields = {
  __typename?: 'userMemoPrivateVd_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  memo_id?: Maybe<Scalars['bigint']>;
  role?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate min on columns */
export type UserMemoPrivateVd_Min_Fields = {
  __typename?: 'userMemoPrivateVd_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  memo_id?: Maybe<Scalars['bigint']>;
  role?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** response of any mutation on the table "view_user_memo_private_vd" */
export type UserMemoPrivateVd_Mutation_Response = {
  __typename?: 'userMemoPrivateVd_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<UserMemoPrivateVd>;
};

/** input type for inserting object relation for remote table "view_user_memo_private_vd" */
export type UserMemoPrivateVd_Obj_Rel_Insert_Input = {
  data: UserMemoPrivateVd_Insert_Input;
};

/** Ordering options when selecting data from "view_user_memo_private_vd". */
export type UserMemoPrivateVd_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  memo?: Maybe<Memo_Order_By>;
  memo_id?: Maybe<Order_By>;
  publicData?: Maybe<UserMemo_Order_By>;
  role?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user?: Maybe<User_Order_By>;
  user_id?: Maybe<Order_By>;
};

/** select columns of table "view_user_memo_private_vd" */
export enum UserMemoPrivateVd_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  MemoId = 'memo_id',
  /** column name */
  Role = 'role',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "view_user_memo_private_vd" */
export type UserMemoPrivateVd_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  memo_id?: Maybe<Scalars['bigint']>;
  role?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate stddev on columns */
export type UserMemoPrivateVd_Stddev_Fields = {
  __typename?: 'userMemoPrivateVd_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  memo_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type UserMemoPrivateVd_Stddev_Pop_Fields = {
  __typename?: 'userMemoPrivateVd_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  memo_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type UserMemoPrivateVd_Stddev_Samp_Fields = {
  __typename?: 'userMemoPrivateVd_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  memo_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type UserMemoPrivateVd_Sum_Fields = {
  __typename?: 'userMemoPrivateVd_sum_fields';
  id?: Maybe<Scalars['bigint']>;
  memo_id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate var_pop on columns */
export type UserMemoPrivateVd_Var_Pop_Fields = {
  __typename?: 'userMemoPrivateVd_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  memo_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type UserMemoPrivateVd_Var_Samp_Fields = {
  __typename?: 'userMemoPrivateVd_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  memo_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type UserMemoPrivateVd_Variance_Fields = {
  __typename?: 'userMemoPrivateVd_variance_fields';
  id?: Maybe<Scalars['Float']>;
  memo_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregated selection of "mn_user_memo" */
export type UserMemo_Aggregate = {
  __typename?: 'userMemo_aggregate';
  aggregate?: Maybe<UserMemo_Aggregate_Fields>;
  nodes: Array<UserMemo>;
};

/** aggregate fields of "mn_user_memo" */
export type UserMemo_Aggregate_Fields = {
  __typename?: 'userMemo_aggregate_fields';
  avg?: Maybe<UserMemo_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<UserMemo_Max_Fields>;
  min?: Maybe<UserMemo_Min_Fields>;
  stddev?: Maybe<UserMemo_Stddev_Fields>;
  stddev_pop?: Maybe<UserMemo_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<UserMemo_Stddev_Samp_Fields>;
  sum?: Maybe<UserMemo_Sum_Fields>;
  var_pop?: Maybe<UserMemo_Var_Pop_Fields>;
  var_samp?: Maybe<UserMemo_Var_Samp_Fields>;
  variance?: Maybe<UserMemo_Variance_Fields>;
};


/** aggregate fields of "mn_user_memo" */
export type UserMemo_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<UserMemo_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "mn_user_memo" */
export type UserMemo_Aggregate_Order_By = {
  avg?: Maybe<UserMemo_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<UserMemo_Max_Order_By>;
  min?: Maybe<UserMemo_Min_Order_By>;
  stddev?: Maybe<UserMemo_Stddev_Order_By>;
  stddev_pop?: Maybe<UserMemo_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<UserMemo_Stddev_Samp_Order_By>;
  sum?: Maybe<UserMemo_Sum_Order_By>;
  var_pop?: Maybe<UserMemo_Var_Pop_Order_By>;
  var_samp?: Maybe<UserMemo_Var_Samp_Order_By>;
  variance?: Maybe<UserMemo_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "mn_user_memo" */
export type UserMemo_Arr_Rel_Insert_Input = {
  data: Array<UserMemo_Insert_Input>;
  /** on conflict condition */
  on_conflict?: Maybe<UserMemo_On_Conflict>;
};

/** aggregate avg on columns */
export type UserMemo_Avg_Fields = {
  __typename?: 'userMemo_avg_fields';
  id?: Maybe<Scalars['Float']>;
  memo_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "mn_user_memo" */
export type UserMemo_Avg_Order_By = {
  id?: Maybe<Order_By>;
  memo_id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "mn_user_memo". All fields are combined with a logical 'AND'. */
export type UserMemo_Bool_Exp = {
  _and?: Maybe<Array<UserMemo_Bool_Exp>>;
  _not?: Maybe<UserMemo_Bool_Exp>;
  _or?: Maybe<Array<UserMemo_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  memo?: Maybe<Memo_Bool_Exp>;
  memo_id?: Maybe<Bigint_Comparison_Exp>;
  privateVd?: Maybe<UserMemoPrivateVd_Bool_Exp>;
  role?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<User_Bool_Exp>;
  user_id?: Maybe<Bigint_Comparison_Exp>;
};

/** unique or primary key constraints on table "mn_user_memo" */
export enum UserMemo_Constraint {
  /** unique or primary key constraint */
  MnUserMemoPkey = 'mn_user_memo_pkey',
  /** unique or primary key constraint */
  UserMemoUniqueness = 'user_memo_uniqueness'
}

/** input type for incrementing numeric columns in table "mn_user_memo" */
export type UserMemo_Inc_Input = {
  id?: Maybe<Scalars['bigint']>;
  memo_id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "mn_user_memo" */
export type UserMemo_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  memo?: Maybe<Memo_Obj_Rel_Insert_Input>;
  memo_id?: Maybe<Scalars['bigint']>;
  privateVd?: Maybe<UserMemoPrivateVd_Obj_Rel_Insert_Input>;
  role?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<User_Obj_Rel_Insert_Input>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate max on columns */
export type UserMemo_Max_Fields = {
  __typename?: 'userMemo_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  memo_id?: Maybe<Scalars['bigint']>;
  role?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by max() on columns of table "mn_user_memo" */
export type UserMemo_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  memo_id?: Maybe<Order_By>;
  role?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type UserMemo_Min_Fields = {
  __typename?: 'userMemo_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  memo_id?: Maybe<Scalars['bigint']>;
  role?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by min() on columns of table "mn_user_memo" */
export type UserMemo_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  memo_id?: Maybe<Order_By>;
  role?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** response of any mutation on the table "mn_user_memo" */
export type UserMemo_Mutation_Response = {
  __typename?: 'userMemo_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<UserMemo>;
};

/** input type for inserting object relation for remote table "mn_user_memo" */
export type UserMemo_Obj_Rel_Insert_Input = {
  data: UserMemo_Insert_Input;
  /** on conflict condition */
  on_conflict?: Maybe<UserMemo_On_Conflict>;
};

/** on conflict condition type for table "mn_user_memo" */
export type UserMemo_On_Conflict = {
  constraint: UserMemo_Constraint;
  update_columns: Array<UserMemo_Update_Column>;
  where?: Maybe<UserMemo_Bool_Exp>;
};

/** Ordering options when selecting data from "mn_user_memo". */
export type UserMemo_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  memo?: Maybe<Memo_Order_By>;
  memo_id?: Maybe<Order_By>;
  privateVd?: Maybe<UserMemoPrivateVd_Order_By>;
  role?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user?: Maybe<User_Order_By>;
  user_id?: Maybe<Order_By>;
};

/** primary key columns input for table: userMemo */
export type UserMemo_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** select columns of table "mn_user_memo" */
export enum UserMemo_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  MemoId = 'memo_id',
  /** column name */
  Role = 'role',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "mn_user_memo" */
export type UserMemo_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  memo_id?: Maybe<Scalars['bigint']>;
  role?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate stddev on columns */
export type UserMemo_Stddev_Fields = {
  __typename?: 'userMemo_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  memo_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "mn_user_memo" */
export type UserMemo_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  memo_id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type UserMemo_Stddev_Pop_Fields = {
  __typename?: 'userMemo_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  memo_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "mn_user_memo" */
export type UserMemo_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  memo_id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type UserMemo_Stddev_Samp_Fields = {
  __typename?: 'userMemo_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  memo_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "mn_user_memo" */
export type UserMemo_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  memo_id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type UserMemo_Sum_Fields = {
  __typename?: 'userMemo_sum_fields';
  id?: Maybe<Scalars['bigint']>;
  memo_id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "mn_user_memo" */
export type UserMemo_Sum_Order_By = {
  id?: Maybe<Order_By>;
  memo_id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** update columns of table "mn_user_memo" */
export enum UserMemo_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  MemoId = 'memo_id',
  /** column name */
  Role = 'role',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** aggregate var_pop on columns */
export type UserMemo_Var_Pop_Fields = {
  __typename?: 'userMemo_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  memo_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "mn_user_memo" */
export type UserMemo_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  memo_id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type UserMemo_Var_Samp_Fields = {
  __typename?: 'userMemo_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  memo_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "mn_user_memo" */
export type UserMemo_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  memo_id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type UserMemo_Variance_Fields = {
  __typename?: 'userMemo_variance_fields';
  id?: Maybe<Scalars['Float']>;
  memo_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "mn_user_memo" */
export type UserMemo_Variance_Order_By = {
  id?: Maybe<Order_By>;
  memo_id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** columns and relationships of "mn_user_organization" */
export type UserOrganization = {
  __typename?: 'userOrganization';
  created_at: Scalars['timestamptz'];
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id: Scalars['bigint'];
  labels?: Maybe<Scalars['jsonb']>;
  /** An object relationship */
  organization: Organization;
  organization_id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  privateVd?: Maybe<UserOrganizationPrivateVd>;
  role?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user: User;
  user_id?: Maybe<Scalars['bigint']>;
};


/** columns and relationships of "mn_user_organization" */
export type UserOrganizationDataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "mn_user_organization" */
export type UserOrganizationLabelsArgs = {
  path?: Maybe<Scalars['String']>;
};

/** columns and relationships of "view_user_organization_private_vd" */
export type UserOrganizationPrivateVd = {
  __typename?: 'userOrganizationPrivateVd';
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  labels?: Maybe<Scalars['jsonb']>;
  /** An object relationship */
  organization?: Maybe<Organization>;
  organization_id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  publicData?: Maybe<UserOrganization>;
  role?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  user?: Maybe<User>;
  user_id?: Maybe<Scalars['bigint']>;
};


/** columns and relationships of "view_user_organization_private_vd" */
export type UserOrganizationPrivateVdDataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "view_user_organization_private_vd" */
export type UserOrganizationPrivateVdLabelsArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "view_user_organization_private_vd" */
export type UserOrganizationPrivateVd_Aggregate = {
  __typename?: 'userOrganizationPrivateVd_aggregate';
  aggregate?: Maybe<UserOrganizationPrivateVd_Aggregate_Fields>;
  nodes: Array<UserOrganizationPrivateVd>;
};

/** aggregate fields of "view_user_organization_private_vd" */
export type UserOrganizationPrivateVd_Aggregate_Fields = {
  __typename?: 'userOrganizationPrivateVd_aggregate_fields';
  avg?: Maybe<UserOrganizationPrivateVd_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<UserOrganizationPrivateVd_Max_Fields>;
  min?: Maybe<UserOrganizationPrivateVd_Min_Fields>;
  stddev?: Maybe<UserOrganizationPrivateVd_Stddev_Fields>;
  stddev_pop?: Maybe<UserOrganizationPrivateVd_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<UserOrganizationPrivateVd_Stddev_Samp_Fields>;
  sum?: Maybe<UserOrganizationPrivateVd_Sum_Fields>;
  var_pop?: Maybe<UserOrganizationPrivateVd_Var_Pop_Fields>;
  var_samp?: Maybe<UserOrganizationPrivateVd_Var_Samp_Fields>;
  variance?: Maybe<UserOrganizationPrivateVd_Variance_Fields>;
};


/** aggregate fields of "view_user_organization_private_vd" */
export type UserOrganizationPrivateVd_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<UserOrganizationPrivateVd_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type UserOrganizationPrivateVd_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
  labels?: Maybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type UserOrganizationPrivateVd_Avg_Fields = {
  __typename?: 'userOrganizationPrivateVd_avg_fields';
  id?: Maybe<Scalars['Float']>;
  organization_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "view_user_organization_private_vd". All fields are combined with a logical 'AND'. */
export type UserOrganizationPrivateVd_Bool_Exp = {
  _and?: Maybe<Array<UserOrganizationPrivateVd_Bool_Exp>>;
  _not?: Maybe<UserOrganizationPrivateVd_Bool_Exp>;
  _or?: Maybe<Array<UserOrganizationPrivateVd_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  labels?: Maybe<Jsonb_Comparison_Exp>;
  organization?: Maybe<Organization_Bool_Exp>;
  organization_id?: Maybe<Bigint_Comparison_Exp>;
  publicData?: Maybe<UserOrganization_Bool_Exp>;
  role?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<User_Bool_Exp>;
  user_id?: Maybe<Bigint_Comparison_Exp>;
};

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type UserOrganizationPrivateVd_Delete_At_Path_Input = {
  data?: Maybe<Array<Scalars['String']>>;
  labels?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type UserOrganizationPrivateVd_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
  labels?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type UserOrganizationPrivateVd_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
  labels?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "view_user_organization_private_vd" */
export type UserOrganizationPrivateVd_Inc_Input = {
  id?: Maybe<Scalars['bigint']>;
  organization_id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "view_user_organization_private_vd" */
export type UserOrganizationPrivateVd_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  labels?: Maybe<Scalars['jsonb']>;
  organization?: Maybe<Organization_Obj_Rel_Insert_Input>;
  organization_id?: Maybe<Scalars['bigint']>;
  publicData?: Maybe<UserOrganization_Obj_Rel_Insert_Input>;
  role?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<User_Obj_Rel_Insert_Input>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate max on columns */
export type UserOrganizationPrivateVd_Max_Fields = {
  __typename?: 'userOrganizationPrivateVd_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  organization_id?: Maybe<Scalars['bigint']>;
  role?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate min on columns */
export type UserOrganizationPrivateVd_Min_Fields = {
  __typename?: 'userOrganizationPrivateVd_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  organization_id?: Maybe<Scalars['bigint']>;
  role?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** response of any mutation on the table "view_user_organization_private_vd" */
export type UserOrganizationPrivateVd_Mutation_Response = {
  __typename?: 'userOrganizationPrivateVd_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<UserOrganizationPrivateVd>;
};

/** input type for inserting object relation for remote table "view_user_organization_private_vd" */
export type UserOrganizationPrivateVd_Obj_Rel_Insert_Input = {
  data: UserOrganizationPrivateVd_Insert_Input;
};

/** Ordering options when selecting data from "view_user_organization_private_vd". */
export type UserOrganizationPrivateVd_Order_By = {
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  labels?: Maybe<Order_By>;
  organization?: Maybe<Organization_Order_By>;
  organization_id?: Maybe<Order_By>;
  publicData?: Maybe<UserOrganization_Order_By>;
  role?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user?: Maybe<User_Order_By>;
  user_id?: Maybe<Order_By>;
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type UserOrganizationPrivateVd_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
  labels?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "view_user_organization_private_vd" */
export enum UserOrganizationPrivateVd_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  Labels = 'labels',
  /** column name */
  OrganizationId = 'organization_id',
  /** column name */
  Role = 'role',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "view_user_organization_private_vd" */
export type UserOrganizationPrivateVd_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  labels?: Maybe<Scalars['jsonb']>;
  organization_id?: Maybe<Scalars['bigint']>;
  role?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate stddev on columns */
export type UserOrganizationPrivateVd_Stddev_Fields = {
  __typename?: 'userOrganizationPrivateVd_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  organization_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type UserOrganizationPrivateVd_Stddev_Pop_Fields = {
  __typename?: 'userOrganizationPrivateVd_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  organization_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type UserOrganizationPrivateVd_Stddev_Samp_Fields = {
  __typename?: 'userOrganizationPrivateVd_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  organization_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type UserOrganizationPrivateVd_Sum_Fields = {
  __typename?: 'userOrganizationPrivateVd_sum_fields';
  id?: Maybe<Scalars['bigint']>;
  organization_id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate var_pop on columns */
export type UserOrganizationPrivateVd_Var_Pop_Fields = {
  __typename?: 'userOrganizationPrivateVd_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  organization_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type UserOrganizationPrivateVd_Var_Samp_Fields = {
  __typename?: 'userOrganizationPrivateVd_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  organization_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type UserOrganizationPrivateVd_Variance_Fields = {
  __typename?: 'userOrganizationPrivateVd_variance_fields';
  id?: Maybe<Scalars['Float']>;
  organization_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregated selection of "mn_user_organization" */
export type UserOrganization_Aggregate = {
  __typename?: 'userOrganization_aggregate';
  aggregate?: Maybe<UserOrganization_Aggregate_Fields>;
  nodes: Array<UserOrganization>;
};

/** aggregate fields of "mn_user_organization" */
export type UserOrganization_Aggregate_Fields = {
  __typename?: 'userOrganization_aggregate_fields';
  avg?: Maybe<UserOrganization_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<UserOrganization_Max_Fields>;
  min?: Maybe<UserOrganization_Min_Fields>;
  stddev?: Maybe<UserOrganization_Stddev_Fields>;
  stddev_pop?: Maybe<UserOrganization_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<UserOrganization_Stddev_Samp_Fields>;
  sum?: Maybe<UserOrganization_Sum_Fields>;
  var_pop?: Maybe<UserOrganization_Var_Pop_Fields>;
  var_samp?: Maybe<UserOrganization_Var_Samp_Fields>;
  variance?: Maybe<UserOrganization_Variance_Fields>;
};


/** aggregate fields of "mn_user_organization" */
export type UserOrganization_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<UserOrganization_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "mn_user_organization" */
export type UserOrganization_Aggregate_Order_By = {
  avg?: Maybe<UserOrganization_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<UserOrganization_Max_Order_By>;
  min?: Maybe<UserOrganization_Min_Order_By>;
  stddev?: Maybe<UserOrganization_Stddev_Order_By>;
  stddev_pop?: Maybe<UserOrganization_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<UserOrganization_Stddev_Samp_Order_By>;
  sum?: Maybe<UserOrganization_Sum_Order_By>;
  var_pop?: Maybe<UserOrganization_Var_Pop_Order_By>;
  var_samp?: Maybe<UserOrganization_Var_Samp_Order_By>;
  variance?: Maybe<UserOrganization_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type UserOrganization_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
  labels?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "mn_user_organization" */
export type UserOrganization_Arr_Rel_Insert_Input = {
  data: Array<UserOrganization_Insert_Input>;
  /** on conflict condition */
  on_conflict?: Maybe<UserOrganization_On_Conflict>;
};

/** aggregate avg on columns */
export type UserOrganization_Avg_Fields = {
  __typename?: 'userOrganization_avg_fields';
  id?: Maybe<Scalars['Float']>;
  organization_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "mn_user_organization" */
export type UserOrganization_Avg_Order_By = {
  id?: Maybe<Order_By>;
  organization_id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "mn_user_organization". All fields are combined with a logical 'AND'. */
export type UserOrganization_Bool_Exp = {
  _and?: Maybe<Array<UserOrganization_Bool_Exp>>;
  _not?: Maybe<UserOrganization_Bool_Exp>;
  _or?: Maybe<Array<UserOrganization_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  labels?: Maybe<Jsonb_Comparison_Exp>;
  organization?: Maybe<Organization_Bool_Exp>;
  organization_id?: Maybe<Bigint_Comparison_Exp>;
  privateVd?: Maybe<UserOrganizationPrivateVd_Bool_Exp>;
  role?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<User_Bool_Exp>;
  user_id?: Maybe<Bigint_Comparison_Exp>;
};

/** unique or primary key constraints on table "mn_user_organization" */
export enum UserOrganization_Constraint {
  /** unique or primary key constraint */
  MnUserOrganizationPkey = 'mn_user_organization_pkey',
  /** unique or primary key constraint */
  UserOrganizationUniqueness = 'user_organization_uniqueness'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type UserOrganization_Delete_At_Path_Input = {
  data?: Maybe<Array<Scalars['String']>>;
  labels?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type UserOrganization_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
  labels?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type UserOrganization_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
  labels?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "mn_user_organization" */
export type UserOrganization_Inc_Input = {
  id?: Maybe<Scalars['bigint']>;
  organization_id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "mn_user_organization" */
export type UserOrganization_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  labels?: Maybe<Scalars['jsonb']>;
  organization?: Maybe<Organization_Obj_Rel_Insert_Input>;
  organization_id?: Maybe<Scalars['bigint']>;
  privateVd?: Maybe<UserOrganizationPrivateVd_Obj_Rel_Insert_Input>;
  role?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<User_Obj_Rel_Insert_Input>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate max on columns */
export type UserOrganization_Max_Fields = {
  __typename?: 'userOrganization_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  organization_id?: Maybe<Scalars['bigint']>;
  role?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by max() on columns of table "mn_user_organization" */
export type UserOrganization_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  organization_id?: Maybe<Order_By>;
  role?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type UserOrganization_Min_Fields = {
  __typename?: 'userOrganization_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  organization_id?: Maybe<Scalars['bigint']>;
  role?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by min() on columns of table "mn_user_organization" */
export type UserOrganization_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  organization_id?: Maybe<Order_By>;
  role?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** response of any mutation on the table "mn_user_organization" */
export type UserOrganization_Mutation_Response = {
  __typename?: 'userOrganization_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<UserOrganization>;
};

/** input type for inserting object relation for remote table "mn_user_organization" */
export type UserOrganization_Obj_Rel_Insert_Input = {
  data: UserOrganization_Insert_Input;
  /** on conflict condition */
  on_conflict?: Maybe<UserOrganization_On_Conflict>;
};

/** on conflict condition type for table "mn_user_organization" */
export type UserOrganization_On_Conflict = {
  constraint: UserOrganization_Constraint;
  update_columns: Array<UserOrganization_Update_Column>;
  where?: Maybe<UserOrganization_Bool_Exp>;
};

/** Ordering options when selecting data from "mn_user_organization". */
export type UserOrganization_Order_By = {
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  labels?: Maybe<Order_By>;
  organization?: Maybe<Organization_Order_By>;
  organization_id?: Maybe<Order_By>;
  privateVd?: Maybe<UserOrganizationPrivateVd_Order_By>;
  role?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user?: Maybe<User_Order_By>;
  user_id?: Maybe<Order_By>;
};

/** primary key columns input for table: userOrganization */
export type UserOrganization_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type UserOrganization_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
  labels?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "mn_user_organization" */
export enum UserOrganization_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  Labels = 'labels',
  /** column name */
  OrganizationId = 'organization_id',
  /** column name */
  Role = 'role',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "mn_user_organization" */
export type UserOrganization_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  labels?: Maybe<Scalars['jsonb']>;
  organization_id?: Maybe<Scalars['bigint']>;
  role?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate stddev on columns */
export type UserOrganization_Stddev_Fields = {
  __typename?: 'userOrganization_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  organization_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "mn_user_organization" */
export type UserOrganization_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  organization_id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type UserOrganization_Stddev_Pop_Fields = {
  __typename?: 'userOrganization_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  organization_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "mn_user_organization" */
export type UserOrganization_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  organization_id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type UserOrganization_Stddev_Samp_Fields = {
  __typename?: 'userOrganization_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  organization_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "mn_user_organization" */
export type UserOrganization_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  organization_id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type UserOrganization_Sum_Fields = {
  __typename?: 'userOrganization_sum_fields';
  id?: Maybe<Scalars['bigint']>;
  organization_id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "mn_user_organization" */
export type UserOrganization_Sum_Order_By = {
  id?: Maybe<Order_By>;
  organization_id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** update columns of table "mn_user_organization" */
export enum UserOrganization_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  Labels = 'labels',
  /** column name */
  OrganizationId = 'organization_id',
  /** column name */
  Role = 'role',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** aggregate var_pop on columns */
export type UserOrganization_Var_Pop_Fields = {
  __typename?: 'userOrganization_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  organization_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "mn_user_organization" */
export type UserOrganization_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  organization_id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type UserOrganization_Var_Samp_Fields = {
  __typename?: 'userOrganization_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  organization_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "mn_user_organization" */
export type UserOrganization_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  organization_id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type UserOrganization_Variance_Fields = {
  __typename?: 'userOrganization_variance_fields';
  id?: Maybe<Scalars['Float']>;
  organization_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "mn_user_organization" */
export type UserOrganization_Variance_Order_By = {
  id?: Maybe<Order_By>;
  organization_id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVd = {
  __typename?: 'userPrivateVd';
  /** An array relationship */
  accountLinks: Array<AccountLink>;
  /** An aggregate relationship */
  accountLinks_aggregate: AccountLink_Aggregate;
  /** An array relationship */
  asIssueAuthor: Array<Issue>;
  /** An aggregate relationship */
  asIssueAuthor_aggregate: Issue_Aggregate;
  /** An array relationship */
  asIssueCommentAuthor: Array<IssueComment>;
  /** An aggregate relationship */
  asIssueCommentAuthor_aggregate: IssueComment_Aggregate;
  /** An array relationship */
  assignedMessage: Array<ContactUsMessage>;
  /** An aggregate relationship */
  assignedMessage_aggregate: ContactUsMessage_Aggregate;
  /** An array relationship */
  browserSessions: Array<BrowserSession>;
  /** An aggregate relationship */
  browserSessions_aggregate: BrowserSession_Aggregate;
  /** An array relationship */
  buyerInfos: Array<BuyerInfo>;
  /** An aggregate relationship */
  buyerInfos_aggregate: BuyerInfo_Aggregate;
  confirmationSentAt?: Maybe<Scalars['timestamptz']>;
  confirmationToken?: Maybe<Scalars['String']>;
  confirmedAt?: Maybe<Scalars['timestamptz']>;
  /** An array relationship */
  couponRecords: Array<CouponRecord>;
  /** An aggregate relationship */
  couponRecords_aggregate: CouponRecord_Aggregate;
  /** An array relationship */
  coupons: Array<Coupon>;
  /** An aggregate relationship */
  coupons_aggregate: Coupon_Aggregate;
  created_at?: Maybe<Scalars['timestamptz']>;
  currentSignInAt?: Maybe<Scalars['String']>;
  currentSignInIp?: Maybe<Scalars['String']>;
  data?: Maybe<Scalars['jsonb']>;
  /** An array relationship */
  defaultBuyerInfo: Array<BuyerInfo>;
  /** An aggregate relationship */
  defaultBuyerInfo_aggregate: BuyerInfo_Aggregate;
  /** An array relationship */
  defaultRecipientInfo: Array<RecipientInfo>;
  /** An aggregate relationship */
  defaultRecipientInfo_aggregate: RecipientInfo_Aggregate;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  email?: Maybe<Scalars['String']>;
  /** An array relationship */
  groupInvitations: Array<GroupInvitation>;
  /** An aggregate relationship */
  groupInvitations_aggregate: GroupInvitation_Aggregate;
  id?: Maybe<Scalars['bigint']>;
  /** An array relationship */
  invitedGroupUsers: Array<GroupInvitation>;
  /** An aggregate relationship */
  invitedGroupUsers_aggregate: GroupInvitation_Aggregate;
  /** An array relationship */
  invitedOrganizationUsers: Array<OrganizationInvitation>;
  /** An aggregate relationship */
  invitedOrganizationUsers_aggregate: OrganizationInvitation_Aggregate;
  /** An array relationship */
  invitedProjectUsers: Array<ProjectInvitation>;
  /** An aggregate relationship */
  invitedProjectUsers_aggregate: ProjectInvitation_Aggregate;
  labels?: Maybe<Scalars['jsonb']>;
  lastSignInAt?: Maybe<Scalars['String']>;
  lastSignInIp?: Maybe<Scalars['String']>;
  /** An array relationship */
  leftMessages: Array<ContactUsMessage>;
  /** An aggregate relationship */
  leftMessages_aggregate: ContactUsMessage_Aggregate;
  manageCoupon?: Maybe<Scalars['Boolean']>;
  /** An object relationship */
  managedBy?: Maybe<Organization>;
  /** An array relationship */
  memos: Array<UserMemo>;
  /** An aggregate relationship */
  memos_aggregate: UserMemo_Aggregate;
  mobile?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  /** An array relationship */
  notifications: Array<Notification>;
  /** An aggregate relationship */
  notifications_aggregate: Notification_Aggregate;
  /** An array relationship */
  orders: Array<Order>;
  ordersCount?: Maybe<Scalars['Int']>;
  ordersPriceTotal?: Maybe<Scalars['Int']>;
  /** An aggregate relationship */
  orders_aggregate: Order_Aggregate;
  org_mgr_id?: Maybe<Scalars['bigint']>;
  /** An array relationship */
  organizationInvitations: Array<OrganizationInvitation>;
  /** An aggregate relationship */
  organizationInvitations_aggregate: OrganizationInvitation_Aggregate;
  /** An array relationship */
  organizations: Array<UserOrganization>;
  /** An aggregate relationship */
  organizations_aggregate: UserOrganization_Aggregate;
  picture?: Maybe<Scalars['String']>;
  privilege?: Maybe<Scalars['String']>;
  /** An array relationship */
  projectInvitations: Array<ProjectInvitation>;
  /** An aggregate relationship */
  projectInvitations_aggregate: ProjectInvitation_Aggregate;
  /** An array relationship */
  projects: Array<UserProject>;
  /** An aggregate relationship */
  projects_aggregate: UserProject_Aggregate;
  /** An array relationship */
  provideCoupons: Array<Coupon>;
  /** An aggregate relationship */
  provideCoupons_aggregate: Coupon_Aggregate;
  /** An object relationship */
  publicData?: Maybe<User>;
  realName?: Maybe<Scalars['String']>;
  /** An array relationship */
  recipientInfos: Array<RecipientInfo>;
  /** An aggregate relationship */
  recipientInfos_aggregate: RecipientInfo_Aggregate;
  signInCount?: Maybe<Scalars['Int']>;
  /** An array relationship */
  subscriptionOrders: Array<SubscriptionOrder>;
  /** An aggregate relationship */
  subscriptionOrders_aggregate: SubscriptionOrder_Aggregate;
  type?: Maybe<Scalars['String']>;
  unconfirmedEmail?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  /** An array relationship */
  userGroups: Array<UserUserGroup>;
  /** An aggregate relationship */
  userGroups_aggregate: UserUserGroup_Aggregate;
  /** An array relationship */
  userSettings: Array<UserSetting>;
  /** An aggregate relationship */
  userSettings_aggregate: UserSetting_Aggregate;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdAccountLinksArgs = {
  distinct_on?: Maybe<Array<AccountLink_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<AccountLink_Order_By>>;
  where?: Maybe<AccountLink_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdAccountLinks_AggregateArgs = {
  distinct_on?: Maybe<Array<AccountLink_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<AccountLink_Order_By>>;
  where?: Maybe<AccountLink_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdAsIssueAuthorArgs = {
  distinct_on?: Maybe<Array<Issue_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Issue_Order_By>>;
  where?: Maybe<Issue_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdAsIssueAuthor_AggregateArgs = {
  distinct_on?: Maybe<Array<Issue_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Issue_Order_By>>;
  where?: Maybe<Issue_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdAsIssueCommentAuthorArgs = {
  distinct_on?: Maybe<Array<IssueComment_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<IssueComment_Order_By>>;
  where?: Maybe<IssueComment_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdAsIssueCommentAuthor_AggregateArgs = {
  distinct_on?: Maybe<Array<IssueComment_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<IssueComment_Order_By>>;
  where?: Maybe<IssueComment_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdAssignedMessageArgs = {
  distinct_on?: Maybe<Array<ContactUsMessage_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContactUsMessage_Order_By>>;
  where?: Maybe<ContactUsMessage_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdAssignedMessage_AggregateArgs = {
  distinct_on?: Maybe<Array<ContactUsMessage_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContactUsMessage_Order_By>>;
  where?: Maybe<ContactUsMessage_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdBrowserSessionsArgs = {
  distinct_on?: Maybe<Array<BrowserSession_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<BrowserSession_Order_By>>;
  where?: Maybe<BrowserSession_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdBrowserSessions_AggregateArgs = {
  distinct_on?: Maybe<Array<BrowserSession_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<BrowserSession_Order_By>>;
  where?: Maybe<BrowserSession_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdBuyerInfosArgs = {
  distinct_on?: Maybe<Array<BuyerInfo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<BuyerInfo_Order_By>>;
  where?: Maybe<BuyerInfo_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdBuyerInfos_AggregateArgs = {
  distinct_on?: Maybe<Array<BuyerInfo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<BuyerInfo_Order_By>>;
  where?: Maybe<BuyerInfo_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdCouponRecordsArgs = {
  distinct_on?: Maybe<Array<CouponRecord_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<CouponRecord_Order_By>>;
  where?: Maybe<CouponRecord_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdCouponRecords_AggregateArgs = {
  distinct_on?: Maybe<Array<CouponRecord_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<CouponRecord_Order_By>>;
  where?: Maybe<CouponRecord_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdCouponsArgs = {
  distinct_on?: Maybe<Array<Coupon_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Coupon_Order_By>>;
  where?: Maybe<Coupon_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdCoupons_AggregateArgs = {
  distinct_on?: Maybe<Array<Coupon_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Coupon_Order_By>>;
  where?: Maybe<Coupon_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdDataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdDefaultBuyerInfoArgs = {
  distinct_on?: Maybe<Array<BuyerInfo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<BuyerInfo_Order_By>>;
  where?: Maybe<BuyerInfo_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdDefaultBuyerInfo_AggregateArgs = {
  distinct_on?: Maybe<Array<BuyerInfo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<BuyerInfo_Order_By>>;
  where?: Maybe<BuyerInfo_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdDefaultRecipientInfoArgs = {
  distinct_on?: Maybe<Array<RecipientInfo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RecipientInfo_Order_By>>;
  where?: Maybe<RecipientInfo_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdDefaultRecipientInfo_AggregateArgs = {
  distinct_on?: Maybe<Array<RecipientInfo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RecipientInfo_Order_By>>;
  where?: Maybe<RecipientInfo_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdGroupInvitationsArgs = {
  distinct_on?: Maybe<Array<GroupInvitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<GroupInvitation_Order_By>>;
  where?: Maybe<GroupInvitation_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdGroupInvitations_AggregateArgs = {
  distinct_on?: Maybe<Array<GroupInvitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<GroupInvitation_Order_By>>;
  where?: Maybe<GroupInvitation_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdInvitedGroupUsersArgs = {
  distinct_on?: Maybe<Array<GroupInvitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<GroupInvitation_Order_By>>;
  where?: Maybe<GroupInvitation_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdInvitedGroupUsers_AggregateArgs = {
  distinct_on?: Maybe<Array<GroupInvitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<GroupInvitation_Order_By>>;
  where?: Maybe<GroupInvitation_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdInvitedOrganizationUsersArgs = {
  distinct_on?: Maybe<Array<OrganizationInvitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrganizationInvitation_Order_By>>;
  where?: Maybe<OrganizationInvitation_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdInvitedOrganizationUsers_AggregateArgs = {
  distinct_on?: Maybe<Array<OrganizationInvitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrganizationInvitation_Order_By>>;
  where?: Maybe<OrganizationInvitation_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdInvitedProjectUsersArgs = {
  distinct_on?: Maybe<Array<ProjectInvitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProjectInvitation_Order_By>>;
  where?: Maybe<ProjectInvitation_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdInvitedProjectUsers_AggregateArgs = {
  distinct_on?: Maybe<Array<ProjectInvitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProjectInvitation_Order_By>>;
  where?: Maybe<ProjectInvitation_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdLabelsArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdLeftMessagesArgs = {
  distinct_on?: Maybe<Array<ContactUsMessage_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContactUsMessage_Order_By>>;
  where?: Maybe<ContactUsMessage_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdLeftMessages_AggregateArgs = {
  distinct_on?: Maybe<Array<ContactUsMessage_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContactUsMessage_Order_By>>;
  where?: Maybe<ContactUsMessage_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdMemosArgs = {
  distinct_on?: Maybe<Array<UserMemo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserMemo_Order_By>>;
  where?: Maybe<UserMemo_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdMemos_AggregateArgs = {
  distinct_on?: Maybe<Array<UserMemo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserMemo_Order_By>>;
  where?: Maybe<UserMemo_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdNotificationsArgs = {
  distinct_on?: Maybe<Array<Notification_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Notification_Order_By>>;
  where?: Maybe<Notification_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdNotifications_AggregateArgs = {
  distinct_on?: Maybe<Array<Notification_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Notification_Order_By>>;
  where?: Maybe<Notification_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdOrdersArgs = {
  distinct_on?: Maybe<Array<Order_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Order_Order_By>>;
  where?: Maybe<Order_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdOrders_AggregateArgs = {
  distinct_on?: Maybe<Array<Order_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Order_Order_By>>;
  where?: Maybe<Order_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdOrganizationInvitationsArgs = {
  distinct_on?: Maybe<Array<OrganizationInvitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrganizationInvitation_Order_By>>;
  where?: Maybe<OrganizationInvitation_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdOrganizationInvitations_AggregateArgs = {
  distinct_on?: Maybe<Array<OrganizationInvitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OrganizationInvitation_Order_By>>;
  where?: Maybe<OrganizationInvitation_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdOrganizationsArgs = {
  distinct_on?: Maybe<Array<UserOrganization_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserOrganization_Order_By>>;
  where?: Maybe<UserOrganization_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdOrganizations_AggregateArgs = {
  distinct_on?: Maybe<Array<UserOrganization_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserOrganization_Order_By>>;
  where?: Maybe<UserOrganization_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdProjectInvitationsArgs = {
  distinct_on?: Maybe<Array<ProjectInvitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProjectInvitation_Order_By>>;
  where?: Maybe<ProjectInvitation_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdProjectInvitations_AggregateArgs = {
  distinct_on?: Maybe<Array<ProjectInvitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ProjectInvitation_Order_By>>;
  where?: Maybe<ProjectInvitation_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdProjectsArgs = {
  distinct_on?: Maybe<Array<UserProject_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserProject_Order_By>>;
  where?: Maybe<UserProject_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdProjects_AggregateArgs = {
  distinct_on?: Maybe<Array<UserProject_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserProject_Order_By>>;
  where?: Maybe<UserProject_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdProvideCouponsArgs = {
  distinct_on?: Maybe<Array<Coupon_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Coupon_Order_By>>;
  where?: Maybe<Coupon_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdProvideCoupons_AggregateArgs = {
  distinct_on?: Maybe<Array<Coupon_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Coupon_Order_By>>;
  where?: Maybe<Coupon_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdRecipientInfosArgs = {
  distinct_on?: Maybe<Array<RecipientInfo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RecipientInfo_Order_By>>;
  where?: Maybe<RecipientInfo_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdRecipientInfos_AggregateArgs = {
  distinct_on?: Maybe<Array<RecipientInfo_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RecipientInfo_Order_By>>;
  where?: Maybe<RecipientInfo_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdSubscriptionOrdersArgs = {
  distinct_on?: Maybe<Array<SubscriptionOrder_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<SubscriptionOrder_Order_By>>;
  where?: Maybe<SubscriptionOrder_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdSubscriptionOrders_AggregateArgs = {
  distinct_on?: Maybe<Array<SubscriptionOrder_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<SubscriptionOrder_Order_By>>;
  where?: Maybe<SubscriptionOrder_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdUserGroupsArgs = {
  distinct_on?: Maybe<Array<UserUserGroup_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserUserGroup_Order_By>>;
  where?: Maybe<UserUserGroup_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdUserGroups_AggregateArgs = {
  distinct_on?: Maybe<Array<UserUserGroup_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserUserGroup_Order_By>>;
  where?: Maybe<UserUserGroup_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdUserSettingsArgs = {
  distinct_on?: Maybe<Array<UserSetting_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserSetting_Order_By>>;
  where?: Maybe<UserSetting_Bool_Exp>;
};


/** columns and relationships of "view_user_private_vd" */
export type UserPrivateVdUserSettings_AggregateArgs = {
  distinct_on?: Maybe<Array<UserSetting_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<UserSetting_Order_By>>;
  where?: Maybe<UserSetting_Bool_Exp>;
};

/** aggregated selection of "view_user_private_vd" */
export type UserPrivateVd_Aggregate = {
  __typename?: 'userPrivateVd_aggregate';
  aggregate?: Maybe<UserPrivateVd_Aggregate_Fields>;
  nodes: Array<UserPrivateVd>;
};

/** aggregate fields of "view_user_private_vd" */
export type UserPrivateVd_Aggregate_Fields = {
  __typename?: 'userPrivateVd_aggregate_fields';
  avg?: Maybe<UserPrivateVd_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<UserPrivateVd_Max_Fields>;
  min?: Maybe<UserPrivateVd_Min_Fields>;
  stddev?: Maybe<UserPrivateVd_Stddev_Fields>;
  stddev_pop?: Maybe<UserPrivateVd_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<UserPrivateVd_Stddev_Samp_Fields>;
  sum?: Maybe<UserPrivateVd_Sum_Fields>;
  var_pop?: Maybe<UserPrivateVd_Var_Pop_Fields>;
  var_samp?: Maybe<UserPrivateVd_Var_Samp_Fields>;
  variance?: Maybe<UserPrivateVd_Variance_Fields>;
};


/** aggregate fields of "view_user_private_vd" */
export type UserPrivateVd_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<UserPrivateVd_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type UserPrivateVd_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
  labels?: Maybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type UserPrivateVd_Avg_Fields = {
  __typename?: 'userPrivateVd_avg_fields';
  id?: Maybe<Scalars['Float']>;
  ordersCount?: Maybe<Scalars['Float']>;
  ordersPriceTotal?: Maybe<Scalars['Float']>;
  org_mgr_id?: Maybe<Scalars['Float']>;
  signInCount?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "view_user_private_vd". All fields are combined with a logical 'AND'. */
export type UserPrivateVd_Bool_Exp = {
  _and?: Maybe<Array<UserPrivateVd_Bool_Exp>>;
  _not?: Maybe<UserPrivateVd_Bool_Exp>;
  _or?: Maybe<Array<UserPrivateVd_Bool_Exp>>;
  accountLinks?: Maybe<AccountLink_Bool_Exp>;
  asIssueAuthor?: Maybe<Issue_Bool_Exp>;
  asIssueCommentAuthor?: Maybe<IssueComment_Bool_Exp>;
  assignedMessage?: Maybe<ContactUsMessage_Bool_Exp>;
  browserSessions?: Maybe<BrowserSession_Bool_Exp>;
  buyerInfos?: Maybe<BuyerInfo_Bool_Exp>;
  confirmationSentAt?: Maybe<Timestamptz_Comparison_Exp>;
  confirmationToken?: Maybe<String_Comparison_Exp>;
  confirmedAt?: Maybe<Timestamptz_Comparison_Exp>;
  couponRecords?: Maybe<CouponRecord_Bool_Exp>;
  coupons?: Maybe<Coupon_Bool_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  currentSignInAt?: Maybe<String_Comparison_Exp>;
  currentSignInIp?: Maybe<String_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  defaultBuyerInfo?: Maybe<BuyerInfo_Bool_Exp>;
  defaultRecipientInfo?: Maybe<RecipientInfo_Bool_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  email?: Maybe<String_Comparison_Exp>;
  groupInvitations?: Maybe<GroupInvitation_Bool_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  invitedGroupUsers?: Maybe<GroupInvitation_Bool_Exp>;
  invitedOrganizationUsers?: Maybe<OrganizationInvitation_Bool_Exp>;
  invitedProjectUsers?: Maybe<ProjectInvitation_Bool_Exp>;
  labels?: Maybe<Jsonb_Comparison_Exp>;
  lastSignInAt?: Maybe<String_Comparison_Exp>;
  lastSignInIp?: Maybe<String_Comparison_Exp>;
  leftMessages?: Maybe<ContactUsMessage_Bool_Exp>;
  manageCoupon?: Maybe<Boolean_Comparison_Exp>;
  managedBy?: Maybe<Organization_Bool_Exp>;
  memos?: Maybe<UserMemo_Bool_Exp>;
  mobile?: Maybe<String_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  notifications?: Maybe<Notification_Bool_Exp>;
  orders?: Maybe<Order_Bool_Exp>;
  ordersCount?: Maybe<Int_Comparison_Exp>;
  ordersPriceTotal?: Maybe<Int_Comparison_Exp>;
  org_mgr_id?: Maybe<Bigint_Comparison_Exp>;
  organizationInvitations?: Maybe<OrganizationInvitation_Bool_Exp>;
  organizations?: Maybe<UserOrganization_Bool_Exp>;
  picture?: Maybe<String_Comparison_Exp>;
  privilege?: Maybe<String_Comparison_Exp>;
  projectInvitations?: Maybe<ProjectInvitation_Bool_Exp>;
  projects?: Maybe<UserProject_Bool_Exp>;
  provideCoupons?: Maybe<Coupon_Bool_Exp>;
  publicData?: Maybe<User_Bool_Exp>;
  realName?: Maybe<String_Comparison_Exp>;
  recipientInfos?: Maybe<RecipientInfo_Bool_Exp>;
  signInCount?: Maybe<Int_Comparison_Exp>;
  subscriptionOrders?: Maybe<SubscriptionOrder_Bool_Exp>;
  type?: Maybe<String_Comparison_Exp>;
  unconfirmedEmail?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  userGroups?: Maybe<UserUserGroup_Bool_Exp>;
  userSettings?: Maybe<UserSetting_Bool_Exp>;
};

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type UserPrivateVd_Delete_At_Path_Input = {
  data?: Maybe<Array<Scalars['String']>>;
  labels?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type UserPrivateVd_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
  labels?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type UserPrivateVd_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
  labels?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "view_user_private_vd" */
export type UserPrivateVd_Inc_Input = {
  id?: Maybe<Scalars['bigint']>;
  ordersCount?: Maybe<Scalars['Int']>;
  ordersPriceTotal?: Maybe<Scalars['Int']>;
  org_mgr_id?: Maybe<Scalars['bigint']>;
  signInCount?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "view_user_private_vd" */
export type UserPrivateVd_Insert_Input = {
  accountLinks?: Maybe<AccountLink_Arr_Rel_Insert_Input>;
  asIssueAuthor?: Maybe<Issue_Arr_Rel_Insert_Input>;
  asIssueCommentAuthor?: Maybe<IssueComment_Arr_Rel_Insert_Input>;
  assignedMessage?: Maybe<ContactUsMessage_Arr_Rel_Insert_Input>;
  browserSessions?: Maybe<BrowserSession_Arr_Rel_Insert_Input>;
  buyerInfos?: Maybe<BuyerInfo_Arr_Rel_Insert_Input>;
  confirmationSentAt?: Maybe<Scalars['timestamptz']>;
  confirmationToken?: Maybe<Scalars['String']>;
  confirmedAt?: Maybe<Scalars['timestamptz']>;
  couponRecords?: Maybe<CouponRecord_Arr_Rel_Insert_Input>;
  coupons?: Maybe<Coupon_Arr_Rel_Insert_Input>;
  created_at?: Maybe<Scalars['timestamptz']>;
  currentSignInAt?: Maybe<Scalars['String']>;
  currentSignInIp?: Maybe<Scalars['String']>;
  data?: Maybe<Scalars['jsonb']>;
  defaultBuyerInfo?: Maybe<BuyerInfo_Arr_Rel_Insert_Input>;
  defaultRecipientInfo?: Maybe<RecipientInfo_Arr_Rel_Insert_Input>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  email?: Maybe<Scalars['String']>;
  groupInvitations?: Maybe<GroupInvitation_Arr_Rel_Insert_Input>;
  id?: Maybe<Scalars['bigint']>;
  invitedGroupUsers?: Maybe<GroupInvitation_Arr_Rel_Insert_Input>;
  invitedOrganizationUsers?: Maybe<OrganizationInvitation_Arr_Rel_Insert_Input>;
  invitedProjectUsers?: Maybe<ProjectInvitation_Arr_Rel_Insert_Input>;
  labels?: Maybe<Scalars['jsonb']>;
  lastSignInAt?: Maybe<Scalars['String']>;
  lastSignInIp?: Maybe<Scalars['String']>;
  leftMessages?: Maybe<ContactUsMessage_Arr_Rel_Insert_Input>;
  manageCoupon?: Maybe<Scalars['Boolean']>;
  managedBy?: Maybe<Organization_Obj_Rel_Insert_Input>;
  memos?: Maybe<UserMemo_Arr_Rel_Insert_Input>;
  mobile?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  notifications?: Maybe<Notification_Arr_Rel_Insert_Input>;
  orders?: Maybe<Order_Arr_Rel_Insert_Input>;
  ordersCount?: Maybe<Scalars['Int']>;
  ordersPriceTotal?: Maybe<Scalars['Int']>;
  org_mgr_id?: Maybe<Scalars['bigint']>;
  organizationInvitations?: Maybe<OrganizationInvitation_Arr_Rel_Insert_Input>;
  organizations?: Maybe<UserOrganization_Arr_Rel_Insert_Input>;
  picture?: Maybe<Scalars['String']>;
  privilege?: Maybe<Scalars['String']>;
  projectInvitations?: Maybe<ProjectInvitation_Arr_Rel_Insert_Input>;
  projects?: Maybe<UserProject_Arr_Rel_Insert_Input>;
  provideCoupons?: Maybe<Coupon_Arr_Rel_Insert_Input>;
  publicData?: Maybe<User_Obj_Rel_Insert_Input>;
  realName?: Maybe<Scalars['String']>;
  recipientInfos?: Maybe<RecipientInfo_Arr_Rel_Insert_Input>;
  signInCount?: Maybe<Scalars['Int']>;
  subscriptionOrders?: Maybe<SubscriptionOrder_Arr_Rel_Insert_Input>;
  type?: Maybe<Scalars['String']>;
  unconfirmedEmail?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  userGroups?: Maybe<UserUserGroup_Arr_Rel_Insert_Input>;
  userSettings?: Maybe<UserSetting_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type UserPrivateVd_Max_Fields = {
  __typename?: 'userPrivateVd_max_fields';
  confirmationSentAt?: Maybe<Scalars['timestamptz']>;
  confirmationToken?: Maybe<Scalars['String']>;
  confirmedAt?: Maybe<Scalars['timestamptz']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  currentSignInAt?: Maybe<Scalars['String']>;
  currentSignInIp?: Maybe<Scalars['String']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  email?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  lastSignInAt?: Maybe<Scalars['String']>;
  lastSignInIp?: Maybe<Scalars['String']>;
  mobile?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  ordersCount?: Maybe<Scalars['Int']>;
  ordersPriceTotal?: Maybe<Scalars['Int']>;
  org_mgr_id?: Maybe<Scalars['bigint']>;
  picture?: Maybe<Scalars['String']>;
  privilege?: Maybe<Scalars['String']>;
  realName?: Maybe<Scalars['String']>;
  signInCount?: Maybe<Scalars['Int']>;
  type?: Maybe<Scalars['String']>;
  unconfirmedEmail?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type UserPrivateVd_Min_Fields = {
  __typename?: 'userPrivateVd_min_fields';
  confirmationSentAt?: Maybe<Scalars['timestamptz']>;
  confirmationToken?: Maybe<Scalars['String']>;
  confirmedAt?: Maybe<Scalars['timestamptz']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  currentSignInAt?: Maybe<Scalars['String']>;
  currentSignInIp?: Maybe<Scalars['String']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  email?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  lastSignInAt?: Maybe<Scalars['String']>;
  lastSignInIp?: Maybe<Scalars['String']>;
  mobile?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  ordersCount?: Maybe<Scalars['Int']>;
  ordersPriceTotal?: Maybe<Scalars['Int']>;
  org_mgr_id?: Maybe<Scalars['bigint']>;
  picture?: Maybe<Scalars['String']>;
  privilege?: Maybe<Scalars['String']>;
  realName?: Maybe<Scalars['String']>;
  signInCount?: Maybe<Scalars['Int']>;
  type?: Maybe<Scalars['String']>;
  unconfirmedEmail?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "view_user_private_vd" */
export type UserPrivateVd_Mutation_Response = {
  __typename?: 'userPrivateVd_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<UserPrivateVd>;
};

/** input type for inserting object relation for remote table "view_user_private_vd" */
export type UserPrivateVd_Obj_Rel_Insert_Input = {
  data: UserPrivateVd_Insert_Input;
};

/** Ordering options when selecting data from "view_user_private_vd". */
export type UserPrivateVd_Order_By = {
  accountLinks_aggregate?: Maybe<AccountLink_Aggregate_Order_By>;
  asIssueAuthor_aggregate?: Maybe<Issue_Aggregate_Order_By>;
  asIssueCommentAuthor_aggregate?: Maybe<IssueComment_Aggregate_Order_By>;
  assignedMessage_aggregate?: Maybe<ContactUsMessage_Aggregate_Order_By>;
  browserSessions_aggregate?: Maybe<BrowserSession_Aggregate_Order_By>;
  buyerInfos_aggregate?: Maybe<BuyerInfo_Aggregate_Order_By>;
  confirmationSentAt?: Maybe<Order_By>;
  confirmationToken?: Maybe<Order_By>;
  confirmedAt?: Maybe<Order_By>;
  couponRecords_aggregate?: Maybe<CouponRecord_Aggregate_Order_By>;
  coupons_aggregate?: Maybe<Coupon_Aggregate_Order_By>;
  created_at?: Maybe<Order_By>;
  currentSignInAt?: Maybe<Order_By>;
  currentSignInIp?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  defaultBuyerInfo_aggregate?: Maybe<BuyerInfo_Aggregate_Order_By>;
  defaultRecipientInfo_aggregate?: Maybe<RecipientInfo_Aggregate_Order_By>;
  deleted_at?: Maybe<Order_By>;
  email?: Maybe<Order_By>;
  groupInvitations_aggregate?: Maybe<GroupInvitation_Aggregate_Order_By>;
  id?: Maybe<Order_By>;
  invitedGroupUsers_aggregate?: Maybe<GroupInvitation_Aggregate_Order_By>;
  invitedOrganizationUsers_aggregate?: Maybe<OrganizationInvitation_Aggregate_Order_By>;
  invitedProjectUsers_aggregate?: Maybe<ProjectInvitation_Aggregate_Order_By>;
  labels?: Maybe<Order_By>;
  lastSignInAt?: Maybe<Order_By>;
  lastSignInIp?: Maybe<Order_By>;
  leftMessages_aggregate?: Maybe<ContactUsMessage_Aggregate_Order_By>;
  manageCoupon?: Maybe<Order_By>;
  managedBy?: Maybe<Organization_Order_By>;
  memos_aggregate?: Maybe<UserMemo_Aggregate_Order_By>;
  mobile?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  notifications_aggregate?: Maybe<Notification_Aggregate_Order_By>;
  ordersCount?: Maybe<Order_By>;
  ordersPriceTotal?: Maybe<Order_By>;
  orders_aggregate?: Maybe<Order_Aggregate_Order_By>;
  org_mgr_id?: Maybe<Order_By>;
  organizationInvitations_aggregate?: Maybe<OrganizationInvitation_Aggregate_Order_By>;
  organizations_aggregate?: Maybe<UserOrganization_Aggregate_Order_By>;
  picture?: Maybe<Order_By>;
  privilege?: Maybe<Order_By>;
  projectInvitations_aggregate?: Maybe<ProjectInvitation_Aggregate_Order_By>;
  projects_aggregate?: Maybe<UserProject_Aggregate_Order_By>;
  provideCoupons_aggregate?: Maybe<Coupon_Aggregate_Order_By>;
  publicData?: Maybe<User_Order_By>;
  realName?: Maybe<Order_By>;
  recipientInfos_aggregate?: Maybe<RecipientInfo_Aggregate_Order_By>;
  signInCount?: Maybe<Order_By>;
  subscriptionOrders_aggregate?: Maybe<SubscriptionOrder_Aggregate_Order_By>;
  type?: Maybe<Order_By>;
  unconfirmedEmail?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  userGroups_aggregate?: Maybe<UserUserGroup_Aggregate_Order_By>;
  userSettings_aggregate?: Maybe<UserSetting_Aggregate_Order_By>;
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type UserPrivateVd_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
  labels?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "view_user_private_vd" */
export enum UserPrivateVd_Select_Column {
  /** column name */
  ConfirmationSentAt = 'confirmationSentAt',
  /** column name */
  ConfirmationToken = 'confirmationToken',
  /** column name */
  ConfirmedAt = 'confirmedAt',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CurrentSignInAt = 'currentSignInAt',
  /** column name */
  CurrentSignInIp = 'currentSignInIp',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Email = 'email',
  /** column name */
  Id = 'id',
  /** column name */
  Labels = 'labels',
  /** column name */
  LastSignInAt = 'lastSignInAt',
  /** column name */
  LastSignInIp = 'lastSignInIp',
  /** column name */
  ManageCoupon = 'manageCoupon',
  /** column name */
  Mobile = 'mobile',
  /** column name */
  Name = 'name',
  /** column name */
  OrdersCount = 'ordersCount',
  /** column name */
  OrdersPriceTotal = 'ordersPriceTotal',
  /** column name */
  OrgMgrId = 'org_mgr_id',
  /** column name */
  Picture = 'picture',
  /** column name */
  Privilege = 'privilege',
  /** column name */
  RealName = 'realName',
  /** column name */
  SignInCount = 'signInCount',
  /** column name */
  Type = 'type',
  /** column name */
  UnconfirmedEmail = 'unconfirmedEmail',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "view_user_private_vd" */
export type UserPrivateVd_Set_Input = {
  confirmationSentAt?: Maybe<Scalars['timestamptz']>;
  confirmationToken?: Maybe<Scalars['String']>;
  confirmedAt?: Maybe<Scalars['timestamptz']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  currentSignInAt?: Maybe<Scalars['String']>;
  currentSignInIp?: Maybe<Scalars['String']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  email?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  labels?: Maybe<Scalars['jsonb']>;
  lastSignInAt?: Maybe<Scalars['String']>;
  lastSignInIp?: Maybe<Scalars['String']>;
  manageCoupon?: Maybe<Scalars['Boolean']>;
  mobile?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  ordersCount?: Maybe<Scalars['Int']>;
  ordersPriceTotal?: Maybe<Scalars['Int']>;
  org_mgr_id?: Maybe<Scalars['bigint']>;
  picture?: Maybe<Scalars['String']>;
  privilege?: Maybe<Scalars['String']>;
  realName?: Maybe<Scalars['String']>;
  signInCount?: Maybe<Scalars['Int']>;
  type?: Maybe<Scalars['String']>;
  unconfirmedEmail?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type UserPrivateVd_Stddev_Fields = {
  __typename?: 'userPrivateVd_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  ordersCount?: Maybe<Scalars['Float']>;
  ordersPriceTotal?: Maybe<Scalars['Float']>;
  org_mgr_id?: Maybe<Scalars['Float']>;
  signInCount?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type UserPrivateVd_Stddev_Pop_Fields = {
  __typename?: 'userPrivateVd_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  ordersCount?: Maybe<Scalars['Float']>;
  ordersPriceTotal?: Maybe<Scalars['Float']>;
  org_mgr_id?: Maybe<Scalars['Float']>;
  signInCount?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type UserPrivateVd_Stddev_Samp_Fields = {
  __typename?: 'userPrivateVd_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  ordersCount?: Maybe<Scalars['Float']>;
  ordersPriceTotal?: Maybe<Scalars['Float']>;
  org_mgr_id?: Maybe<Scalars['Float']>;
  signInCount?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type UserPrivateVd_Sum_Fields = {
  __typename?: 'userPrivateVd_sum_fields';
  id?: Maybe<Scalars['bigint']>;
  ordersCount?: Maybe<Scalars['Int']>;
  ordersPriceTotal?: Maybe<Scalars['Int']>;
  org_mgr_id?: Maybe<Scalars['bigint']>;
  signInCount?: Maybe<Scalars['Int']>;
};

/** aggregate var_pop on columns */
export type UserPrivateVd_Var_Pop_Fields = {
  __typename?: 'userPrivateVd_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  ordersCount?: Maybe<Scalars['Float']>;
  ordersPriceTotal?: Maybe<Scalars['Float']>;
  org_mgr_id?: Maybe<Scalars['Float']>;
  signInCount?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type UserPrivateVd_Var_Samp_Fields = {
  __typename?: 'userPrivateVd_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  ordersCount?: Maybe<Scalars['Float']>;
  ordersPriceTotal?: Maybe<Scalars['Float']>;
  org_mgr_id?: Maybe<Scalars['Float']>;
  signInCount?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type UserPrivateVd_Variance_Fields = {
  __typename?: 'userPrivateVd_variance_fields';
  id?: Maybe<Scalars['Float']>;
  ordersCount?: Maybe<Scalars['Float']>;
  ordersPriceTotal?: Maybe<Scalars['Float']>;
  org_mgr_id?: Maybe<Scalars['Float']>;
  signInCount?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "mn_user_project" */
export type UserProject = {
  __typename?: 'userProject';
  created_at: Scalars['timestamptz'];
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id: Scalars['bigint'];
  labels?: Maybe<Scalars['jsonb']>;
  /** An object relationship */
  privateVd?: Maybe<UserProjectPrivateVd>;
  /** An object relationship */
  project: Project;
  project_id?: Maybe<Scalars['bigint']>;
  role?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user: User;
  user_id?: Maybe<Scalars['bigint']>;
};


/** columns and relationships of "mn_user_project" */
export type UserProjectDataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "mn_user_project" */
export type UserProjectLabelsArgs = {
  path?: Maybe<Scalars['String']>;
};

/** columns and relationships of "view_user_project_private_vd" */
export type UserProjectPrivateVd = {
  __typename?: 'userProjectPrivateVd';
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  labels?: Maybe<Scalars['jsonb']>;
  /** An object relationship */
  project?: Maybe<Project>;
  project_id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  publicData?: Maybe<UserProject>;
  role?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  user?: Maybe<User>;
  user_id?: Maybe<Scalars['bigint']>;
};


/** columns and relationships of "view_user_project_private_vd" */
export type UserProjectPrivateVdDataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "view_user_project_private_vd" */
export type UserProjectPrivateVdLabelsArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "view_user_project_private_vd" */
export type UserProjectPrivateVd_Aggregate = {
  __typename?: 'userProjectPrivateVd_aggregate';
  aggregate?: Maybe<UserProjectPrivateVd_Aggregate_Fields>;
  nodes: Array<UserProjectPrivateVd>;
};

/** aggregate fields of "view_user_project_private_vd" */
export type UserProjectPrivateVd_Aggregate_Fields = {
  __typename?: 'userProjectPrivateVd_aggregate_fields';
  avg?: Maybe<UserProjectPrivateVd_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<UserProjectPrivateVd_Max_Fields>;
  min?: Maybe<UserProjectPrivateVd_Min_Fields>;
  stddev?: Maybe<UserProjectPrivateVd_Stddev_Fields>;
  stddev_pop?: Maybe<UserProjectPrivateVd_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<UserProjectPrivateVd_Stddev_Samp_Fields>;
  sum?: Maybe<UserProjectPrivateVd_Sum_Fields>;
  var_pop?: Maybe<UserProjectPrivateVd_Var_Pop_Fields>;
  var_samp?: Maybe<UserProjectPrivateVd_Var_Samp_Fields>;
  variance?: Maybe<UserProjectPrivateVd_Variance_Fields>;
};


/** aggregate fields of "view_user_project_private_vd" */
export type UserProjectPrivateVd_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<UserProjectPrivateVd_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type UserProjectPrivateVd_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
  labels?: Maybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type UserProjectPrivateVd_Avg_Fields = {
  __typename?: 'userProjectPrivateVd_avg_fields';
  id?: Maybe<Scalars['Float']>;
  project_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "view_user_project_private_vd". All fields are combined with a logical 'AND'. */
export type UserProjectPrivateVd_Bool_Exp = {
  _and?: Maybe<Array<UserProjectPrivateVd_Bool_Exp>>;
  _not?: Maybe<UserProjectPrivateVd_Bool_Exp>;
  _or?: Maybe<Array<UserProjectPrivateVd_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  labels?: Maybe<Jsonb_Comparison_Exp>;
  project?: Maybe<Project_Bool_Exp>;
  project_id?: Maybe<Bigint_Comparison_Exp>;
  publicData?: Maybe<UserProject_Bool_Exp>;
  role?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<User_Bool_Exp>;
  user_id?: Maybe<Bigint_Comparison_Exp>;
};

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type UserProjectPrivateVd_Delete_At_Path_Input = {
  data?: Maybe<Array<Scalars['String']>>;
  labels?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type UserProjectPrivateVd_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
  labels?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type UserProjectPrivateVd_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
  labels?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "view_user_project_private_vd" */
export type UserProjectPrivateVd_Inc_Input = {
  id?: Maybe<Scalars['bigint']>;
  project_id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "view_user_project_private_vd" */
export type UserProjectPrivateVd_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  labels?: Maybe<Scalars['jsonb']>;
  project?: Maybe<Project_Obj_Rel_Insert_Input>;
  project_id?: Maybe<Scalars['bigint']>;
  publicData?: Maybe<UserProject_Obj_Rel_Insert_Input>;
  role?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<User_Obj_Rel_Insert_Input>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate max on columns */
export type UserProjectPrivateVd_Max_Fields = {
  __typename?: 'userProjectPrivateVd_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  project_id?: Maybe<Scalars['bigint']>;
  role?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate min on columns */
export type UserProjectPrivateVd_Min_Fields = {
  __typename?: 'userProjectPrivateVd_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  project_id?: Maybe<Scalars['bigint']>;
  role?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** response of any mutation on the table "view_user_project_private_vd" */
export type UserProjectPrivateVd_Mutation_Response = {
  __typename?: 'userProjectPrivateVd_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<UserProjectPrivateVd>;
};

/** input type for inserting object relation for remote table "view_user_project_private_vd" */
export type UserProjectPrivateVd_Obj_Rel_Insert_Input = {
  data: UserProjectPrivateVd_Insert_Input;
};

/** Ordering options when selecting data from "view_user_project_private_vd". */
export type UserProjectPrivateVd_Order_By = {
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  labels?: Maybe<Order_By>;
  project?: Maybe<Project_Order_By>;
  project_id?: Maybe<Order_By>;
  publicData?: Maybe<UserProject_Order_By>;
  role?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user?: Maybe<User_Order_By>;
  user_id?: Maybe<Order_By>;
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type UserProjectPrivateVd_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
  labels?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "view_user_project_private_vd" */
export enum UserProjectPrivateVd_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  Labels = 'labels',
  /** column name */
  ProjectId = 'project_id',
  /** column name */
  Role = 'role',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "view_user_project_private_vd" */
export type UserProjectPrivateVd_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  labels?: Maybe<Scalars['jsonb']>;
  project_id?: Maybe<Scalars['bigint']>;
  role?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate stddev on columns */
export type UserProjectPrivateVd_Stddev_Fields = {
  __typename?: 'userProjectPrivateVd_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  project_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type UserProjectPrivateVd_Stddev_Pop_Fields = {
  __typename?: 'userProjectPrivateVd_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  project_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type UserProjectPrivateVd_Stddev_Samp_Fields = {
  __typename?: 'userProjectPrivateVd_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  project_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type UserProjectPrivateVd_Sum_Fields = {
  __typename?: 'userProjectPrivateVd_sum_fields';
  id?: Maybe<Scalars['bigint']>;
  project_id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate var_pop on columns */
export type UserProjectPrivateVd_Var_Pop_Fields = {
  __typename?: 'userProjectPrivateVd_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  project_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type UserProjectPrivateVd_Var_Samp_Fields = {
  __typename?: 'userProjectPrivateVd_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  project_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type UserProjectPrivateVd_Variance_Fields = {
  __typename?: 'userProjectPrivateVd_variance_fields';
  id?: Maybe<Scalars['Float']>;
  project_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregated selection of "mn_user_project" */
export type UserProject_Aggregate = {
  __typename?: 'userProject_aggregate';
  aggregate?: Maybe<UserProject_Aggregate_Fields>;
  nodes: Array<UserProject>;
};

/** aggregate fields of "mn_user_project" */
export type UserProject_Aggregate_Fields = {
  __typename?: 'userProject_aggregate_fields';
  avg?: Maybe<UserProject_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<UserProject_Max_Fields>;
  min?: Maybe<UserProject_Min_Fields>;
  stddev?: Maybe<UserProject_Stddev_Fields>;
  stddev_pop?: Maybe<UserProject_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<UserProject_Stddev_Samp_Fields>;
  sum?: Maybe<UserProject_Sum_Fields>;
  var_pop?: Maybe<UserProject_Var_Pop_Fields>;
  var_samp?: Maybe<UserProject_Var_Samp_Fields>;
  variance?: Maybe<UserProject_Variance_Fields>;
};


/** aggregate fields of "mn_user_project" */
export type UserProject_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<UserProject_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "mn_user_project" */
export type UserProject_Aggregate_Order_By = {
  avg?: Maybe<UserProject_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<UserProject_Max_Order_By>;
  min?: Maybe<UserProject_Min_Order_By>;
  stddev?: Maybe<UserProject_Stddev_Order_By>;
  stddev_pop?: Maybe<UserProject_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<UserProject_Stddev_Samp_Order_By>;
  sum?: Maybe<UserProject_Sum_Order_By>;
  var_pop?: Maybe<UserProject_Var_Pop_Order_By>;
  var_samp?: Maybe<UserProject_Var_Samp_Order_By>;
  variance?: Maybe<UserProject_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type UserProject_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
  labels?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "mn_user_project" */
export type UserProject_Arr_Rel_Insert_Input = {
  data: Array<UserProject_Insert_Input>;
  /** on conflict condition */
  on_conflict?: Maybe<UserProject_On_Conflict>;
};

/** aggregate avg on columns */
export type UserProject_Avg_Fields = {
  __typename?: 'userProject_avg_fields';
  id?: Maybe<Scalars['Float']>;
  project_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "mn_user_project" */
export type UserProject_Avg_Order_By = {
  id?: Maybe<Order_By>;
  project_id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "mn_user_project". All fields are combined with a logical 'AND'. */
export type UserProject_Bool_Exp = {
  _and?: Maybe<Array<UserProject_Bool_Exp>>;
  _not?: Maybe<UserProject_Bool_Exp>;
  _or?: Maybe<Array<UserProject_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  labels?: Maybe<Jsonb_Comparison_Exp>;
  privateVd?: Maybe<UserProjectPrivateVd_Bool_Exp>;
  project?: Maybe<Project_Bool_Exp>;
  project_id?: Maybe<Bigint_Comparison_Exp>;
  role?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<User_Bool_Exp>;
  user_id?: Maybe<Bigint_Comparison_Exp>;
};

/** unique or primary key constraints on table "mn_user_project" */
export enum UserProject_Constraint {
  /** unique or primary key constraint */
  MnUserProjectPkey = 'mn_user_project_pkey',
  /** unique or primary key constraint */
  UserProjectUniqueness = 'user_project_uniqueness'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type UserProject_Delete_At_Path_Input = {
  data?: Maybe<Array<Scalars['String']>>;
  labels?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type UserProject_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
  labels?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type UserProject_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
  labels?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "mn_user_project" */
export type UserProject_Inc_Input = {
  id?: Maybe<Scalars['bigint']>;
  project_id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "mn_user_project" */
export type UserProject_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  labels?: Maybe<Scalars['jsonb']>;
  privateVd?: Maybe<UserProjectPrivateVd_Obj_Rel_Insert_Input>;
  project?: Maybe<Project_Obj_Rel_Insert_Input>;
  project_id?: Maybe<Scalars['bigint']>;
  role?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<User_Obj_Rel_Insert_Input>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate max on columns */
export type UserProject_Max_Fields = {
  __typename?: 'userProject_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  project_id?: Maybe<Scalars['bigint']>;
  role?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by max() on columns of table "mn_user_project" */
export type UserProject_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  project_id?: Maybe<Order_By>;
  role?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type UserProject_Min_Fields = {
  __typename?: 'userProject_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  project_id?: Maybe<Scalars['bigint']>;
  role?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by min() on columns of table "mn_user_project" */
export type UserProject_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  project_id?: Maybe<Order_By>;
  role?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** response of any mutation on the table "mn_user_project" */
export type UserProject_Mutation_Response = {
  __typename?: 'userProject_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<UserProject>;
};

/** input type for inserting object relation for remote table "mn_user_project" */
export type UserProject_Obj_Rel_Insert_Input = {
  data: UserProject_Insert_Input;
  /** on conflict condition */
  on_conflict?: Maybe<UserProject_On_Conflict>;
};

/** on conflict condition type for table "mn_user_project" */
export type UserProject_On_Conflict = {
  constraint: UserProject_Constraint;
  update_columns: Array<UserProject_Update_Column>;
  where?: Maybe<UserProject_Bool_Exp>;
};

/** Ordering options when selecting data from "mn_user_project". */
export type UserProject_Order_By = {
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  labels?: Maybe<Order_By>;
  privateVd?: Maybe<UserProjectPrivateVd_Order_By>;
  project?: Maybe<Project_Order_By>;
  project_id?: Maybe<Order_By>;
  role?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user?: Maybe<User_Order_By>;
  user_id?: Maybe<Order_By>;
};

/** primary key columns input for table: userProject */
export type UserProject_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type UserProject_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
  labels?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "mn_user_project" */
export enum UserProject_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  Labels = 'labels',
  /** column name */
  ProjectId = 'project_id',
  /** column name */
  Role = 'role',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "mn_user_project" */
export type UserProject_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  labels?: Maybe<Scalars['jsonb']>;
  project_id?: Maybe<Scalars['bigint']>;
  role?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate stddev on columns */
export type UserProject_Stddev_Fields = {
  __typename?: 'userProject_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  project_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "mn_user_project" */
export type UserProject_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  project_id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type UserProject_Stddev_Pop_Fields = {
  __typename?: 'userProject_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  project_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "mn_user_project" */
export type UserProject_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  project_id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type UserProject_Stddev_Samp_Fields = {
  __typename?: 'userProject_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  project_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "mn_user_project" */
export type UserProject_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  project_id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type UserProject_Sum_Fields = {
  __typename?: 'userProject_sum_fields';
  id?: Maybe<Scalars['bigint']>;
  project_id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "mn_user_project" */
export type UserProject_Sum_Order_By = {
  id?: Maybe<Order_By>;
  project_id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** update columns of table "mn_user_project" */
export enum UserProject_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  Labels = 'labels',
  /** column name */
  ProjectId = 'project_id',
  /** column name */
  Role = 'role',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** aggregate var_pop on columns */
export type UserProject_Var_Pop_Fields = {
  __typename?: 'userProject_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  project_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "mn_user_project" */
export type UserProject_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  project_id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type UserProject_Var_Samp_Fields = {
  __typename?: 'userProject_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  project_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "mn_user_project" */
export type UserProject_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  project_id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type UserProject_Variance_Fields = {
  __typename?: 'userProject_variance_fields';
  id?: Maybe<Scalars['Float']>;
  project_id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "mn_user_project" */
export type UserProject_Variance_Order_By = {
  id?: Maybe<Order_By>;
  project_id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** columns and relationships of "tbl_user_setting" */
export type UserSetting = {
  __typename?: 'userSetting';
  created_at: Scalars['timestamptz'];
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id: Scalars['bigint'];
  /** An object relationship */
  privateVd?: Maybe<UserSettingPrivateVd>;
  type?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user: User;
  user_id?: Maybe<Scalars['bigint']>;
};


/** columns and relationships of "tbl_user_setting" */
export type UserSettingDataArgs = {
  path?: Maybe<Scalars['String']>;
};

/** columns and relationships of "view_user_setting_private_vd" */
export type UserSettingPrivateVd = {
  __typename?: 'userSettingPrivateVd';
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  publicData?: Maybe<UserSetting>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  user?: Maybe<User>;
  user_id?: Maybe<Scalars['bigint']>;
};


/** columns and relationships of "view_user_setting_private_vd" */
export type UserSettingPrivateVdDataArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "view_user_setting_private_vd" */
export type UserSettingPrivateVd_Aggregate = {
  __typename?: 'userSettingPrivateVd_aggregate';
  aggregate?: Maybe<UserSettingPrivateVd_Aggregate_Fields>;
  nodes: Array<UserSettingPrivateVd>;
};

/** aggregate fields of "view_user_setting_private_vd" */
export type UserSettingPrivateVd_Aggregate_Fields = {
  __typename?: 'userSettingPrivateVd_aggregate_fields';
  avg?: Maybe<UserSettingPrivateVd_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<UserSettingPrivateVd_Max_Fields>;
  min?: Maybe<UserSettingPrivateVd_Min_Fields>;
  stddev?: Maybe<UserSettingPrivateVd_Stddev_Fields>;
  stddev_pop?: Maybe<UserSettingPrivateVd_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<UserSettingPrivateVd_Stddev_Samp_Fields>;
  sum?: Maybe<UserSettingPrivateVd_Sum_Fields>;
  var_pop?: Maybe<UserSettingPrivateVd_Var_Pop_Fields>;
  var_samp?: Maybe<UserSettingPrivateVd_Var_Samp_Fields>;
  variance?: Maybe<UserSettingPrivateVd_Variance_Fields>;
};


/** aggregate fields of "view_user_setting_private_vd" */
export type UserSettingPrivateVd_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<UserSettingPrivateVd_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type UserSettingPrivateVd_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type UserSettingPrivateVd_Avg_Fields = {
  __typename?: 'userSettingPrivateVd_avg_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "view_user_setting_private_vd". All fields are combined with a logical 'AND'. */
export type UserSettingPrivateVd_Bool_Exp = {
  _and?: Maybe<Array<UserSettingPrivateVd_Bool_Exp>>;
  _not?: Maybe<UserSettingPrivateVd_Bool_Exp>;
  _or?: Maybe<Array<UserSettingPrivateVd_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  publicData?: Maybe<UserSetting_Bool_Exp>;
  type?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<User_Bool_Exp>;
  user_id?: Maybe<Bigint_Comparison_Exp>;
};

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type UserSettingPrivateVd_Delete_At_Path_Input = {
  data?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type UserSettingPrivateVd_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type UserSettingPrivateVd_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "view_user_setting_private_vd" */
export type UserSettingPrivateVd_Inc_Input = {
  id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "view_user_setting_private_vd" */
export type UserSettingPrivateVd_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  publicData?: Maybe<UserSetting_Obj_Rel_Insert_Input>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<User_Obj_Rel_Insert_Input>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate max on columns */
export type UserSettingPrivateVd_Max_Fields = {
  __typename?: 'userSettingPrivateVd_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate min on columns */
export type UserSettingPrivateVd_Min_Fields = {
  __typename?: 'userSettingPrivateVd_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** response of any mutation on the table "view_user_setting_private_vd" */
export type UserSettingPrivateVd_Mutation_Response = {
  __typename?: 'userSettingPrivateVd_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<UserSettingPrivateVd>;
};

/** input type for inserting object relation for remote table "view_user_setting_private_vd" */
export type UserSettingPrivateVd_Obj_Rel_Insert_Input = {
  data: UserSettingPrivateVd_Insert_Input;
};

/** Ordering options when selecting data from "view_user_setting_private_vd". */
export type UserSettingPrivateVd_Order_By = {
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  publicData?: Maybe<UserSetting_Order_By>;
  type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user?: Maybe<User_Order_By>;
  user_id?: Maybe<Order_By>;
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type UserSettingPrivateVd_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "view_user_setting_private_vd" */
export enum UserSettingPrivateVd_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "view_user_setting_private_vd" */
export type UserSettingPrivateVd_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate stddev on columns */
export type UserSettingPrivateVd_Stddev_Fields = {
  __typename?: 'userSettingPrivateVd_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type UserSettingPrivateVd_Stddev_Pop_Fields = {
  __typename?: 'userSettingPrivateVd_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type UserSettingPrivateVd_Stddev_Samp_Fields = {
  __typename?: 'userSettingPrivateVd_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type UserSettingPrivateVd_Sum_Fields = {
  __typename?: 'userSettingPrivateVd_sum_fields';
  id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate var_pop on columns */
export type UserSettingPrivateVd_Var_Pop_Fields = {
  __typename?: 'userSettingPrivateVd_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type UserSettingPrivateVd_Var_Samp_Fields = {
  __typename?: 'userSettingPrivateVd_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type UserSettingPrivateVd_Variance_Fields = {
  __typename?: 'userSettingPrivateVd_variance_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregated selection of "tbl_user_setting" */
export type UserSetting_Aggregate = {
  __typename?: 'userSetting_aggregate';
  aggregate?: Maybe<UserSetting_Aggregate_Fields>;
  nodes: Array<UserSetting>;
};

/** aggregate fields of "tbl_user_setting" */
export type UserSetting_Aggregate_Fields = {
  __typename?: 'userSetting_aggregate_fields';
  avg?: Maybe<UserSetting_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<UserSetting_Max_Fields>;
  min?: Maybe<UserSetting_Min_Fields>;
  stddev?: Maybe<UserSetting_Stddev_Fields>;
  stddev_pop?: Maybe<UserSetting_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<UserSetting_Stddev_Samp_Fields>;
  sum?: Maybe<UserSetting_Sum_Fields>;
  var_pop?: Maybe<UserSetting_Var_Pop_Fields>;
  var_samp?: Maybe<UserSetting_Var_Samp_Fields>;
  variance?: Maybe<UserSetting_Variance_Fields>;
};


/** aggregate fields of "tbl_user_setting" */
export type UserSetting_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<UserSetting_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "tbl_user_setting" */
export type UserSetting_Aggregate_Order_By = {
  avg?: Maybe<UserSetting_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<UserSetting_Max_Order_By>;
  min?: Maybe<UserSetting_Min_Order_By>;
  stddev?: Maybe<UserSetting_Stddev_Order_By>;
  stddev_pop?: Maybe<UserSetting_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<UserSetting_Stddev_Samp_Order_By>;
  sum?: Maybe<UserSetting_Sum_Order_By>;
  var_pop?: Maybe<UserSetting_Var_Pop_Order_By>;
  var_samp?: Maybe<UserSetting_Var_Samp_Order_By>;
  variance?: Maybe<UserSetting_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type UserSetting_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "tbl_user_setting" */
export type UserSetting_Arr_Rel_Insert_Input = {
  data: Array<UserSetting_Insert_Input>;
  /** on conflict condition */
  on_conflict?: Maybe<UserSetting_On_Conflict>;
};

/** aggregate avg on columns */
export type UserSetting_Avg_Fields = {
  __typename?: 'userSetting_avg_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "tbl_user_setting" */
export type UserSetting_Avg_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "tbl_user_setting". All fields are combined with a logical 'AND'. */
export type UserSetting_Bool_Exp = {
  _and?: Maybe<Array<UserSetting_Bool_Exp>>;
  _not?: Maybe<UserSetting_Bool_Exp>;
  _or?: Maybe<Array<UserSetting_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  privateVd?: Maybe<UserSettingPrivateVd_Bool_Exp>;
  type?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<User_Bool_Exp>;
  user_id?: Maybe<Bigint_Comparison_Exp>;
};

/** unique or primary key constraints on table "tbl_user_setting" */
export enum UserSetting_Constraint {
  /** unique or primary key constraint */
  SettingTypeShouldBeUniqueForEachUser = 'setting_type_should_be_unique_for_each_user',
  /** unique or primary key constraint */
  TblUserSettingPkey = 'tbl_user_setting_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type UserSetting_Delete_At_Path_Input = {
  data?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type UserSetting_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type UserSetting_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "tbl_user_setting" */
export type UserSetting_Inc_Input = {
  id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "tbl_user_setting" */
export type UserSetting_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  privateVd?: Maybe<UserSettingPrivateVd_Obj_Rel_Insert_Input>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<User_Obj_Rel_Insert_Input>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate max on columns */
export type UserSetting_Max_Fields = {
  __typename?: 'userSetting_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by max() on columns of table "tbl_user_setting" */
export type UserSetting_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type UserSetting_Min_Fields = {
  __typename?: 'userSetting_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by min() on columns of table "tbl_user_setting" */
export type UserSetting_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** response of any mutation on the table "tbl_user_setting" */
export type UserSetting_Mutation_Response = {
  __typename?: 'userSetting_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<UserSetting>;
};

/** input type for inserting object relation for remote table "tbl_user_setting" */
export type UserSetting_Obj_Rel_Insert_Input = {
  data: UserSetting_Insert_Input;
  /** on conflict condition */
  on_conflict?: Maybe<UserSetting_On_Conflict>;
};

/** on conflict condition type for table "tbl_user_setting" */
export type UserSetting_On_Conflict = {
  constraint: UserSetting_Constraint;
  update_columns: Array<UserSetting_Update_Column>;
  where?: Maybe<UserSetting_Bool_Exp>;
};

/** Ordering options when selecting data from "tbl_user_setting". */
export type UserSetting_Order_By = {
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  privateVd?: Maybe<UserSettingPrivateVd_Order_By>;
  type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user?: Maybe<User_Order_By>;
  user_id?: Maybe<Order_By>;
};

/** primary key columns input for table: userSetting */
export type UserSetting_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type UserSetting_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "tbl_user_setting" */
export enum UserSetting_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "tbl_user_setting" */
export type UserSetting_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate stddev on columns */
export type UserSetting_Stddev_Fields = {
  __typename?: 'userSetting_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "tbl_user_setting" */
export type UserSetting_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type UserSetting_Stddev_Pop_Fields = {
  __typename?: 'userSetting_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "tbl_user_setting" */
export type UserSetting_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type UserSetting_Stddev_Samp_Fields = {
  __typename?: 'userSetting_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "tbl_user_setting" */
export type UserSetting_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type UserSetting_Sum_Fields = {
  __typename?: 'userSetting_sum_fields';
  id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "tbl_user_setting" */
export type UserSetting_Sum_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** update columns of table "tbl_user_setting" */
export enum UserSetting_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Id = 'id',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** aggregate var_pop on columns */
export type UserSetting_Var_Pop_Fields = {
  __typename?: 'userSetting_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "tbl_user_setting" */
export type UserSetting_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type UserSetting_Var_Samp_Fields = {
  __typename?: 'userSetting_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "tbl_user_setting" */
export type UserSetting_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type UserSetting_Variance_Fields = {
  __typename?: 'userSetting_variance_fields';
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "tbl_user_setting" */
export type UserSetting_Variance_Order_By = {
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** columns and relationships of "mn_user_user_group" */
export type UserUserGroup = {
  __typename?: 'userUserGroup';
  created_at: Scalars['timestamptz'];
  deleted_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  group: UserGroup;
  group_id?: Maybe<Scalars['bigint']>;
  id: Scalars['bigint'];
  /** An object relationship */
  privateVd?: Maybe<UserUserGroupPrivateVd>;
  role?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user: User;
  user_id?: Maybe<Scalars['bigint']>;
};

/** columns and relationships of "view_user_user_group_private_vd" */
export type UserUserGroupPrivateVd = {
  __typename?: 'userUserGroupPrivateVd';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  group?: Maybe<UserGroup>;
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  /** An object relationship */
  publicData?: Maybe<UserUserGroup>;
  role?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  user?: Maybe<User>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregated selection of "view_user_user_group_private_vd" */
export type UserUserGroupPrivateVd_Aggregate = {
  __typename?: 'userUserGroupPrivateVd_aggregate';
  aggregate?: Maybe<UserUserGroupPrivateVd_Aggregate_Fields>;
  nodes: Array<UserUserGroupPrivateVd>;
};

/** aggregate fields of "view_user_user_group_private_vd" */
export type UserUserGroupPrivateVd_Aggregate_Fields = {
  __typename?: 'userUserGroupPrivateVd_aggregate_fields';
  avg?: Maybe<UserUserGroupPrivateVd_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<UserUserGroupPrivateVd_Max_Fields>;
  min?: Maybe<UserUserGroupPrivateVd_Min_Fields>;
  stddev?: Maybe<UserUserGroupPrivateVd_Stddev_Fields>;
  stddev_pop?: Maybe<UserUserGroupPrivateVd_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<UserUserGroupPrivateVd_Stddev_Samp_Fields>;
  sum?: Maybe<UserUserGroupPrivateVd_Sum_Fields>;
  var_pop?: Maybe<UserUserGroupPrivateVd_Var_Pop_Fields>;
  var_samp?: Maybe<UserUserGroupPrivateVd_Var_Samp_Fields>;
  variance?: Maybe<UserUserGroupPrivateVd_Variance_Fields>;
};


/** aggregate fields of "view_user_user_group_private_vd" */
export type UserUserGroupPrivateVd_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<UserUserGroupPrivateVd_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type UserUserGroupPrivateVd_Avg_Fields = {
  __typename?: 'userUserGroupPrivateVd_avg_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "view_user_user_group_private_vd". All fields are combined with a logical 'AND'. */
export type UserUserGroupPrivateVd_Bool_Exp = {
  _and?: Maybe<Array<UserUserGroupPrivateVd_Bool_Exp>>;
  _not?: Maybe<UserUserGroupPrivateVd_Bool_Exp>;
  _or?: Maybe<Array<UserUserGroupPrivateVd_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  group?: Maybe<UserGroup_Bool_Exp>;
  group_id?: Maybe<Bigint_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  publicData?: Maybe<UserUserGroup_Bool_Exp>;
  role?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<User_Bool_Exp>;
  user_id?: Maybe<Bigint_Comparison_Exp>;
};

/** input type for incrementing numeric columns in table "view_user_user_group_private_vd" */
export type UserUserGroupPrivateVd_Inc_Input = {
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "view_user_user_group_private_vd" */
export type UserUserGroupPrivateVd_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  group?: Maybe<UserGroup_Obj_Rel_Insert_Input>;
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  publicData?: Maybe<UserUserGroup_Obj_Rel_Insert_Input>;
  role?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<User_Obj_Rel_Insert_Input>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate max on columns */
export type UserUserGroupPrivateVd_Max_Fields = {
  __typename?: 'userUserGroupPrivateVd_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  role?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate min on columns */
export type UserUserGroupPrivateVd_Min_Fields = {
  __typename?: 'userUserGroupPrivateVd_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  role?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** response of any mutation on the table "view_user_user_group_private_vd" */
export type UserUserGroupPrivateVd_Mutation_Response = {
  __typename?: 'userUserGroupPrivateVd_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<UserUserGroupPrivateVd>;
};

/** input type for inserting object relation for remote table "view_user_user_group_private_vd" */
export type UserUserGroupPrivateVd_Obj_Rel_Insert_Input = {
  data: UserUserGroupPrivateVd_Insert_Input;
};

/** Ordering options when selecting data from "view_user_user_group_private_vd". */
export type UserUserGroupPrivateVd_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  group?: Maybe<UserGroup_Order_By>;
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  publicData?: Maybe<UserUserGroup_Order_By>;
  role?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user?: Maybe<User_Order_By>;
  user_id?: Maybe<Order_By>;
};

/** select columns of table "view_user_user_group_private_vd" */
export enum UserUserGroupPrivateVd_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  GroupId = 'group_id',
  /** column name */
  Id = 'id',
  /** column name */
  Role = 'role',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "view_user_user_group_private_vd" */
export type UserUserGroupPrivateVd_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  role?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate stddev on columns */
export type UserUserGroupPrivateVd_Stddev_Fields = {
  __typename?: 'userUserGroupPrivateVd_stddev_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type UserUserGroupPrivateVd_Stddev_Pop_Fields = {
  __typename?: 'userUserGroupPrivateVd_stddev_pop_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type UserUserGroupPrivateVd_Stddev_Samp_Fields = {
  __typename?: 'userUserGroupPrivateVd_stddev_samp_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type UserUserGroupPrivateVd_Sum_Fields = {
  __typename?: 'userUserGroupPrivateVd_sum_fields';
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate var_pop on columns */
export type UserUserGroupPrivateVd_Var_Pop_Fields = {
  __typename?: 'userUserGroupPrivateVd_var_pop_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type UserUserGroupPrivateVd_Var_Samp_Fields = {
  __typename?: 'userUserGroupPrivateVd_var_samp_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type UserUserGroupPrivateVd_Variance_Fields = {
  __typename?: 'userUserGroupPrivateVd_variance_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** aggregated selection of "mn_user_user_group" */
export type UserUserGroup_Aggregate = {
  __typename?: 'userUserGroup_aggregate';
  aggregate?: Maybe<UserUserGroup_Aggregate_Fields>;
  nodes: Array<UserUserGroup>;
};

/** aggregate fields of "mn_user_user_group" */
export type UserUserGroup_Aggregate_Fields = {
  __typename?: 'userUserGroup_aggregate_fields';
  avg?: Maybe<UserUserGroup_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<UserUserGroup_Max_Fields>;
  min?: Maybe<UserUserGroup_Min_Fields>;
  stddev?: Maybe<UserUserGroup_Stddev_Fields>;
  stddev_pop?: Maybe<UserUserGroup_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<UserUserGroup_Stddev_Samp_Fields>;
  sum?: Maybe<UserUserGroup_Sum_Fields>;
  var_pop?: Maybe<UserUserGroup_Var_Pop_Fields>;
  var_samp?: Maybe<UserUserGroup_Var_Samp_Fields>;
  variance?: Maybe<UserUserGroup_Variance_Fields>;
};


/** aggregate fields of "mn_user_user_group" */
export type UserUserGroup_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<UserUserGroup_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "mn_user_user_group" */
export type UserUserGroup_Aggregate_Order_By = {
  avg?: Maybe<UserUserGroup_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<UserUserGroup_Max_Order_By>;
  min?: Maybe<UserUserGroup_Min_Order_By>;
  stddev?: Maybe<UserUserGroup_Stddev_Order_By>;
  stddev_pop?: Maybe<UserUserGroup_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<UserUserGroup_Stddev_Samp_Order_By>;
  sum?: Maybe<UserUserGroup_Sum_Order_By>;
  var_pop?: Maybe<UserUserGroup_Var_Pop_Order_By>;
  var_samp?: Maybe<UserUserGroup_Var_Samp_Order_By>;
  variance?: Maybe<UserUserGroup_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "mn_user_user_group" */
export type UserUserGroup_Arr_Rel_Insert_Input = {
  data: Array<UserUserGroup_Insert_Input>;
  /** on conflict condition */
  on_conflict?: Maybe<UserUserGroup_On_Conflict>;
};

/** aggregate avg on columns */
export type UserUserGroup_Avg_Fields = {
  __typename?: 'userUserGroup_avg_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "mn_user_user_group" */
export type UserUserGroup_Avg_Order_By = {
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "mn_user_user_group". All fields are combined with a logical 'AND'. */
export type UserUserGroup_Bool_Exp = {
  _and?: Maybe<Array<UserUserGroup_Bool_Exp>>;
  _not?: Maybe<UserUserGroup_Bool_Exp>;
  _or?: Maybe<Array<UserUserGroup_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  group?: Maybe<UserGroup_Bool_Exp>;
  group_id?: Maybe<Bigint_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  privateVd?: Maybe<UserUserGroupPrivateVd_Bool_Exp>;
  role?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<User_Bool_Exp>;
  user_id?: Maybe<Bigint_Comparison_Exp>;
};

/** unique or primary key constraints on table "mn_user_user_group" */
export enum UserUserGroup_Constraint {
  /** unique or primary key constraint */
  MnUserUserGroupPkey = 'mn_user_user_group_pkey',
  /** unique or primary key constraint */
  UserUserGroupUniqueness = 'user_user_group_uniqueness'
}

/** input type for incrementing numeric columns in table "mn_user_user_group" */
export type UserUserGroup_Inc_Input = {
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "mn_user_user_group" */
export type UserUserGroup_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  group?: Maybe<UserGroup_Obj_Rel_Insert_Input>;
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  privateVd?: Maybe<UserUserGroupPrivateVd_Obj_Rel_Insert_Input>;
  role?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<User_Obj_Rel_Insert_Input>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate max on columns */
export type UserUserGroup_Max_Fields = {
  __typename?: 'userUserGroup_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  role?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by max() on columns of table "mn_user_user_group" */
export type UserUserGroup_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  role?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type UserUserGroup_Min_Fields = {
  __typename?: 'userUserGroup_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  role?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by min() on columns of table "mn_user_user_group" */
export type UserUserGroup_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  role?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** response of any mutation on the table "mn_user_user_group" */
export type UserUserGroup_Mutation_Response = {
  __typename?: 'userUserGroup_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<UserUserGroup>;
};

/** input type for inserting object relation for remote table "mn_user_user_group" */
export type UserUserGroup_Obj_Rel_Insert_Input = {
  data: UserUserGroup_Insert_Input;
  /** on conflict condition */
  on_conflict?: Maybe<UserUserGroup_On_Conflict>;
};

/** on conflict condition type for table "mn_user_user_group" */
export type UserUserGroup_On_Conflict = {
  constraint: UserUserGroup_Constraint;
  update_columns: Array<UserUserGroup_Update_Column>;
  where?: Maybe<UserUserGroup_Bool_Exp>;
};

/** Ordering options when selecting data from "mn_user_user_group". */
export type UserUserGroup_Order_By = {
  created_at?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  group?: Maybe<UserGroup_Order_By>;
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  privateVd?: Maybe<UserUserGroupPrivateVd_Order_By>;
  role?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user?: Maybe<User_Order_By>;
  user_id?: Maybe<Order_By>;
};

/** primary key columns input for table: userUserGroup */
export type UserUserGroup_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** select columns of table "mn_user_user_group" */
export enum UserUserGroup_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  GroupId = 'group_id',
  /** column name */
  Id = 'id',
  /** column name */
  Role = 'role',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "mn_user_user_group" */
export type UserUserGroup_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  role?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** aggregate stddev on columns */
export type UserUserGroup_Stddev_Fields = {
  __typename?: 'userUserGroup_stddev_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "mn_user_user_group" */
export type UserUserGroup_Stddev_Order_By = {
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type UserUserGroup_Stddev_Pop_Fields = {
  __typename?: 'userUserGroup_stddev_pop_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "mn_user_user_group" */
export type UserUserGroup_Stddev_Pop_Order_By = {
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type UserUserGroup_Stddev_Samp_Fields = {
  __typename?: 'userUserGroup_stddev_samp_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "mn_user_user_group" */
export type UserUserGroup_Stddev_Samp_Order_By = {
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type UserUserGroup_Sum_Fields = {
  __typename?: 'userUserGroup_sum_fields';
  group_id?: Maybe<Scalars['bigint']>;
  id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "mn_user_user_group" */
export type UserUserGroup_Sum_Order_By = {
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** update columns of table "mn_user_user_group" */
export enum UserUserGroup_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  GroupId = 'group_id',
  /** column name */
  Id = 'id',
  /** column name */
  Role = 'role',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** aggregate var_pop on columns */
export type UserUserGroup_Var_Pop_Fields = {
  __typename?: 'userUserGroup_var_pop_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "mn_user_user_group" */
export type UserUserGroup_Var_Pop_Order_By = {
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type UserUserGroup_Var_Samp_Fields = {
  __typename?: 'userUserGroup_var_samp_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "mn_user_user_group" */
export type UserUserGroup_Var_Samp_Order_By = {
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type UserUserGroup_Variance_Fields = {
  __typename?: 'userUserGroup_variance_fields';
  group_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  user_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "mn_user_user_group" */
export type UserUserGroup_Variance_Order_By = {
  group_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregated selection of "tbl_user" */
export type User_Aggregate = {
  __typename?: 'user_aggregate';
  aggregate?: Maybe<User_Aggregate_Fields>;
  nodes: Array<User>;
};

/** aggregate fields of "tbl_user" */
export type User_Aggregate_Fields = {
  __typename?: 'user_aggregate_fields';
  avg?: Maybe<User_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<User_Max_Fields>;
  min?: Maybe<User_Min_Fields>;
  stddev?: Maybe<User_Stddev_Fields>;
  stddev_pop?: Maybe<User_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<User_Stddev_Samp_Fields>;
  sum?: Maybe<User_Sum_Fields>;
  var_pop?: Maybe<User_Var_Pop_Fields>;
  var_samp?: Maybe<User_Var_Samp_Fields>;
  variance?: Maybe<User_Variance_Fields>;
};


/** aggregate fields of "tbl_user" */
export type User_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<User_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "tbl_user" */
export type User_Aggregate_Order_By = {
  avg?: Maybe<User_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<User_Max_Order_By>;
  min?: Maybe<User_Min_Order_By>;
  stddev?: Maybe<User_Stddev_Order_By>;
  stddev_pop?: Maybe<User_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<User_Stddev_Samp_Order_By>;
  sum?: Maybe<User_Sum_Order_By>;
  var_pop?: Maybe<User_Var_Pop_Order_By>;
  var_samp?: Maybe<User_Var_Samp_Order_By>;
  variance?: Maybe<User_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type User_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
  labels?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "tbl_user" */
export type User_Arr_Rel_Insert_Input = {
  data: Array<User_Insert_Input>;
  /** on conflict condition */
  on_conflict?: Maybe<User_On_Conflict>;
};

/** aggregate avg on columns */
export type User_Avg_Fields = {
  __typename?: 'user_avg_fields';
  id?: Maybe<Scalars['Float']>;
  ordersCount?: Maybe<Scalars['Float']>;
  ordersPriceTotal?: Maybe<Scalars['Float']>;
  org_mgr_id?: Maybe<Scalars['Float']>;
  signInCount?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "tbl_user" */
export type User_Avg_Order_By = {
  id?: Maybe<Order_By>;
  ordersCount?: Maybe<Order_By>;
  ordersPriceTotal?: Maybe<Order_By>;
  org_mgr_id?: Maybe<Order_By>;
  signInCount?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "tbl_user". All fields are combined with a logical 'AND'. */
export type User_Bool_Exp = {
  _and?: Maybe<Array<User_Bool_Exp>>;
  _not?: Maybe<User_Bool_Exp>;
  _or?: Maybe<Array<User_Bool_Exp>>;
  accountLinks?: Maybe<AccountLink_Bool_Exp>;
  asIssueAuthor?: Maybe<Issue_Bool_Exp>;
  asIssueCommentAuthor?: Maybe<IssueComment_Bool_Exp>;
  assignedMessage?: Maybe<ContactUsMessage_Bool_Exp>;
  browserSessions?: Maybe<BrowserSession_Bool_Exp>;
  buyerInfos?: Maybe<BuyerInfo_Bool_Exp>;
  confirmationSentAt?: Maybe<Timestamptz_Comparison_Exp>;
  confirmationToken?: Maybe<String_Comparison_Exp>;
  confirmedAt?: Maybe<Timestamptz_Comparison_Exp>;
  couponRecords?: Maybe<CouponRecord_Bool_Exp>;
  coupons?: Maybe<Coupon_Bool_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  currentSignInAt?: Maybe<String_Comparison_Exp>;
  currentSignInIp?: Maybe<String_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  defaultBuyerInfo?: Maybe<BuyerInfo_Bool_Exp>;
  defaultRecipientInfo?: Maybe<RecipientInfo_Bool_Exp>;
  deleted_at?: Maybe<Timestamptz_Comparison_Exp>;
  email?: Maybe<String_Comparison_Exp>;
  groupInvitations?: Maybe<GroupInvitation_Bool_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  invitedGroupUsers?: Maybe<GroupInvitation_Bool_Exp>;
  invitedOrganizationUsers?: Maybe<OrganizationInvitation_Bool_Exp>;
  invitedProjectUsers?: Maybe<ProjectInvitation_Bool_Exp>;
  labels?: Maybe<Jsonb_Comparison_Exp>;
  lastSignInAt?: Maybe<String_Comparison_Exp>;
  lastSignInIp?: Maybe<String_Comparison_Exp>;
  leftMessages?: Maybe<ContactUsMessage_Bool_Exp>;
  manageCoupon?: Maybe<Boolean_Comparison_Exp>;
  managedBy?: Maybe<Organization_Bool_Exp>;
  memos?: Maybe<UserMemo_Bool_Exp>;
  mobile?: Maybe<String_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  notifications?: Maybe<Notification_Bool_Exp>;
  orders?: Maybe<Order_Bool_Exp>;
  ordersCount?: Maybe<Int_Comparison_Exp>;
  ordersPriceTotal?: Maybe<Int_Comparison_Exp>;
  org_mgr_id?: Maybe<Bigint_Comparison_Exp>;
  organizationInvitations?: Maybe<OrganizationInvitation_Bool_Exp>;
  organizations?: Maybe<UserOrganization_Bool_Exp>;
  picture?: Maybe<String_Comparison_Exp>;
  privateVd?: Maybe<UserPrivateVd_Bool_Exp>;
  privilege?: Maybe<String_Comparison_Exp>;
  projectInvitations?: Maybe<ProjectInvitation_Bool_Exp>;
  projects?: Maybe<UserProject_Bool_Exp>;
  provideCoupons?: Maybe<Coupon_Bool_Exp>;
  realName?: Maybe<String_Comparison_Exp>;
  recipientInfos?: Maybe<RecipientInfo_Bool_Exp>;
  signInCount?: Maybe<Int_Comparison_Exp>;
  subscriptionOrders?: Maybe<SubscriptionOrder_Bool_Exp>;
  type?: Maybe<String_Comparison_Exp>;
  unconfirmedEmail?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  userGroups?: Maybe<UserUserGroup_Bool_Exp>;
  userSettings?: Maybe<UserSetting_Bool_Exp>;
};

/** unique or primary key constraints on table "tbl_user" */
export enum User_Constraint {
  /** unique or primary key constraint */
  TblUserPkey = 'tbl_user_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type User_Delete_At_Path_Input = {
  data?: Maybe<Array<Scalars['String']>>;
  labels?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type User_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
  labels?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type User_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
  labels?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "tbl_user" */
export type User_Inc_Input = {
  id?: Maybe<Scalars['bigint']>;
  ordersCount?: Maybe<Scalars['Int']>;
  ordersPriceTotal?: Maybe<Scalars['Int']>;
  org_mgr_id?: Maybe<Scalars['bigint']>;
  signInCount?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "tbl_user" */
export type User_Insert_Input = {
  accountLinks?: Maybe<AccountLink_Arr_Rel_Insert_Input>;
  asIssueAuthor?: Maybe<Issue_Arr_Rel_Insert_Input>;
  asIssueCommentAuthor?: Maybe<IssueComment_Arr_Rel_Insert_Input>;
  assignedMessage?: Maybe<ContactUsMessage_Arr_Rel_Insert_Input>;
  browserSessions?: Maybe<BrowserSession_Arr_Rel_Insert_Input>;
  buyerInfos?: Maybe<BuyerInfo_Arr_Rel_Insert_Input>;
  confirmationSentAt?: Maybe<Scalars['timestamptz']>;
  confirmationToken?: Maybe<Scalars['String']>;
  confirmedAt?: Maybe<Scalars['timestamptz']>;
  couponRecords?: Maybe<CouponRecord_Arr_Rel_Insert_Input>;
  coupons?: Maybe<Coupon_Arr_Rel_Insert_Input>;
  created_at?: Maybe<Scalars['timestamptz']>;
  currentSignInAt?: Maybe<Scalars['String']>;
  currentSignInIp?: Maybe<Scalars['String']>;
  data?: Maybe<Scalars['jsonb']>;
  defaultBuyerInfo?: Maybe<BuyerInfo_Arr_Rel_Insert_Input>;
  defaultRecipientInfo?: Maybe<RecipientInfo_Arr_Rel_Insert_Input>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  email?: Maybe<Scalars['String']>;
  groupInvitations?: Maybe<GroupInvitation_Arr_Rel_Insert_Input>;
  id?: Maybe<Scalars['bigint']>;
  invitedGroupUsers?: Maybe<GroupInvitation_Arr_Rel_Insert_Input>;
  invitedOrganizationUsers?: Maybe<OrganizationInvitation_Arr_Rel_Insert_Input>;
  invitedProjectUsers?: Maybe<ProjectInvitation_Arr_Rel_Insert_Input>;
  labels?: Maybe<Scalars['jsonb']>;
  lastSignInAt?: Maybe<Scalars['String']>;
  lastSignInIp?: Maybe<Scalars['String']>;
  leftMessages?: Maybe<ContactUsMessage_Arr_Rel_Insert_Input>;
  manageCoupon?: Maybe<Scalars['Boolean']>;
  managedBy?: Maybe<Organization_Obj_Rel_Insert_Input>;
  memos?: Maybe<UserMemo_Arr_Rel_Insert_Input>;
  mobile?: Maybe<Scalars['String']>;
  /** Username */
  name?: Maybe<Scalars['String']>;
  notifications?: Maybe<Notification_Arr_Rel_Insert_Input>;
  orders?: Maybe<Order_Arr_Rel_Insert_Input>;
  ordersCount?: Maybe<Scalars['Int']>;
  ordersPriceTotal?: Maybe<Scalars['Int']>;
  org_mgr_id?: Maybe<Scalars['bigint']>;
  organizationInvitations?: Maybe<OrganizationInvitation_Arr_Rel_Insert_Input>;
  organizations?: Maybe<UserOrganization_Arr_Rel_Insert_Input>;
  picture?: Maybe<Scalars['String']>;
  privateVd?: Maybe<UserPrivateVd_Obj_Rel_Insert_Input>;
  privilege?: Maybe<Scalars['String']>;
  projectInvitations?: Maybe<ProjectInvitation_Arr_Rel_Insert_Input>;
  projects?: Maybe<UserProject_Arr_Rel_Insert_Input>;
  provideCoupons?: Maybe<Coupon_Arr_Rel_Insert_Input>;
  /** Username */
  realName?: Maybe<Scalars['String']>;
  recipientInfos?: Maybe<RecipientInfo_Arr_Rel_Insert_Input>;
  signInCount?: Maybe<Scalars['Int']>;
  subscriptionOrders?: Maybe<SubscriptionOrder_Arr_Rel_Insert_Input>;
  /** type of user. ex. regular, room, ... etc. */
  type?: Maybe<Scalars['String']>;
  unconfirmedEmail?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  userGroups?: Maybe<UserUserGroup_Arr_Rel_Insert_Input>;
  userSettings?: Maybe<UserSetting_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type User_Max_Fields = {
  __typename?: 'user_max_fields';
  confirmationSentAt?: Maybe<Scalars['timestamptz']>;
  confirmationToken?: Maybe<Scalars['String']>;
  confirmedAt?: Maybe<Scalars['timestamptz']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  currentSignInAt?: Maybe<Scalars['String']>;
  currentSignInIp?: Maybe<Scalars['String']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  email?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  lastSignInAt?: Maybe<Scalars['String']>;
  lastSignInIp?: Maybe<Scalars['String']>;
  mobile?: Maybe<Scalars['String']>;
  /** Username */
  name?: Maybe<Scalars['String']>;
  ordersCount?: Maybe<Scalars['Int']>;
  ordersPriceTotal?: Maybe<Scalars['Int']>;
  org_mgr_id?: Maybe<Scalars['bigint']>;
  picture?: Maybe<Scalars['String']>;
  privilege?: Maybe<Scalars['String']>;
  /** Username */
  realName?: Maybe<Scalars['String']>;
  signInCount?: Maybe<Scalars['Int']>;
  /** type of user. ex. regular, room, ... etc. */
  type?: Maybe<Scalars['String']>;
  unconfirmedEmail?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "tbl_user" */
export type User_Max_Order_By = {
  confirmationSentAt?: Maybe<Order_By>;
  confirmationToken?: Maybe<Order_By>;
  confirmedAt?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  currentSignInAt?: Maybe<Order_By>;
  currentSignInIp?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  email?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  lastSignInAt?: Maybe<Order_By>;
  lastSignInIp?: Maybe<Order_By>;
  mobile?: Maybe<Order_By>;
  /** Username */
  name?: Maybe<Order_By>;
  ordersCount?: Maybe<Order_By>;
  ordersPriceTotal?: Maybe<Order_By>;
  org_mgr_id?: Maybe<Order_By>;
  picture?: Maybe<Order_By>;
  privilege?: Maybe<Order_By>;
  /** Username */
  realName?: Maybe<Order_By>;
  signInCount?: Maybe<Order_By>;
  /** type of user. ex. regular, room, ... etc. */
  type?: Maybe<Order_By>;
  unconfirmedEmail?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type User_Min_Fields = {
  __typename?: 'user_min_fields';
  confirmationSentAt?: Maybe<Scalars['timestamptz']>;
  confirmationToken?: Maybe<Scalars['String']>;
  confirmedAt?: Maybe<Scalars['timestamptz']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  currentSignInAt?: Maybe<Scalars['String']>;
  currentSignInIp?: Maybe<Scalars['String']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  email?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  lastSignInAt?: Maybe<Scalars['String']>;
  lastSignInIp?: Maybe<Scalars['String']>;
  mobile?: Maybe<Scalars['String']>;
  /** Username */
  name?: Maybe<Scalars['String']>;
  ordersCount?: Maybe<Scalars['Int']>;
  ordersPriceTotal?: Maybe<Scalars['Int']>;
  org_mgr_id?: Maybe<Scalars['bigint']>;
  picture?: Maybe<Scalars['String']>;
  privilege?: Maybe<Scalars['String']>;
  /** Username */
  realName?: Maybe<Scalars['String']>;
  signInCount?: Maybe<Scalars['Int']>;
  /** type of user. ex. regular, room, ... etc. */
  type?: Maybe<Scalars['String']>;
  unconfirmedEmail?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "tbl_user" */
export type User_Min_Order_By = {
  confirmationSentAt?: Maybe<Order_By>;
  confirmationToken?: Maybe<Order_By>;
  confirmedAt?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  currentSignInAt?: Maybe<Order_By>;
  currentSignInIp?: Maybe<Order_By>;
  deleted_at?: Maybe<Order_By>;
  email?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  lastSignInAt?: Maybe<Order_By>;
  lastSignInIp?: Maybe<Order_By>;
  mobile?: Maybe<Order_By>;
  /** Username */
  name?: Maybe<Order_By>;
  ordersCount?: Maybe<Order_By>;
  ordersPriceTotal?: Maybe<Order_By>;
  org_mgr_id?: Maybe<Order_By>;
  picture?: Maybe<Order_By>;
  privilege?: Maybe<Order_By>;
  /** Username */
  realName?: Maybe<Order_By>;
  signInCount?: Maybe<Order_By>;
  /** type of user. ex. regular, room, ... etc. */
  type?: Maybe<Order_By>;
  unconfirmedEmail?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "tbl_user" */
export type User_Mutation_Response = {
  __typename?: 'user_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<User>;
};

/** input type for inserting object relation for remote table "tbl_user" */
export type User_Obj_Rel_Insert_Input = {
  data: User_Insert_Input;
  /** on conflict condition */
  on_conflict?: Maybe<User_On_Conflict>;
};

/** on conflict condition type for table "tbl_user" */
export type User_On_Conflict = {
  constraint: User_Constraint;
  update_columns: Array<User_Update_Column>;
  where?: Maybe<User_Bool_Exp>;
};

/** Ordering options when selecting data from "tbl_user". */
export type User_Order_By = {
  accountLinks_aggregate?: Maybe<AccountLink_Aggregate_Order_By>;
  asIssueAuthor_aggregate?: Maybe<Issue_Aggregate_Order_By>;
  asIssueCommentAuthor_aggregate?: Maybe<IssueComment_Aggregate_Order_By>;
  assignedMessage_aggregate?: Maybe<ContactUsMessage_Aggregate_Order_By>;
  browserSessions_aggregate?: Maybe<BrowserSession_Aggregate_Order_By>;
  buyerInfos_aggregate?: Maybe<BuyerInfo_Aggregate_Order_By>;
  confirmationSentAt?: Maybe<Order_By>;
  confirmationToken?: Maybe<Order_By>;
  confirmedAt?: Maybe<Order_By>;
  couponRecords_aggregate?: Maybe<CouponRecord_Aggregate_Order_By>;
  coupons_aggregate?: Maybe<Coupon_Aggregate_Order_By>;
  created_at?: Maybe<Order_By>;
  currentSignInAt?: Maybe<Order_By>;
  currentSignInIp?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  defaultBuyerInfo_aggregate?: Maybe<BuyerInfo_Aggregate_Order_By>;
  defaultRecipientInfo_aggregate?: Maybe<RecipientInfo_Aggregate_Order_By>;
  deleted_at?: Maybe<Order_By>;
  email?: Maybe<Order_By>;
  groupInvitations_aggregate?: Maybe<GroupInvitation_Aggregate_Order_By>;
  id?: Maybe<Order_By>;
  invitedGroupUsers_aggregate?: Maybe<GroupInvitation_Aggregate_Order_By>;
  invitedOrganizationUsers_aggregate?: Maybe<OrganizationInvitation_Aggregate_Order_By>;
  invitedProjectUsers_aggregate?: Maybe<ProjectInvitation_Aggregate_Order_By>;
  labels?: Maybe<Order_By>;
  lastSignInAt?: Maybe<Order_By>;
  lastSignInIp?: Maybe<Order_By>;
  leftMessages_aggregate?: Maybe<ContactUsMessage_Aggregate_Order_By>;
  manageCoupon?: Maybe<Order_By>;
  managedBy?: Maybe<Organization_Order_By>;
  memos_aggregate?: Maybe<UserMemo_Aggregate_Order_By>;
  mobile?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  notifications_aggregate?: Maybe<Notification_Aggregate_Order_By>;
  ordersCount?: Maybe<Order_By>;
  ordersPriceTotal?: Maybe<Order_By>;
  orders_aggregate?: Maybe<Order_Aggregate_Order_By>;
  org_mgr_id?: Maybe<Order_By>;
  organizationInvitations_aggregate?: Maybe<OrganizationInvitation_Aggregate_Order_By>;
  organizations_aggregate?: Maybe<UserOrganization_Aggregate_Order_By>;
  picture?: Maybe<Order_By>;
  privateVd?: Maybe<UserPrivateVd_Order_By>;
  privilege?: Maybe<Order_By>;
  projectInvitations_aggregate?: Maybe<ProjectInvitation_Aggregate_Order_By>;
  projects_aggregate?: Maybe<UserProject_Aggregate_Order_By>;
  provideCoupons_aggregate?: Maybe<Coupon_Aggregate_Order_By>;
  realName?: Maybe<Order_By>;
  recipientInfos_aggregate?: Maybe<RecipientInfo_Aggregate_Order_By>;
  signInCount?: Maybe<Order_By>;
  subscriptionOrders_aggregate?: Maybe<SubscriptionOrder_Aggregate_Order_By>;
  type?: Maybe<Order_By>;
  unconfirmedEmail?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  userGroups_aggregate?: Maybe<UserUserGroup_Aggregate_Order_By>;
  userSettings_aggregate?: Maybe<UserSetting_Aggregate_Order_By>;
};

/** primary key columns input for table: user */
export type User_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type User_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
  labels?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "tbl_user" */
export enum User_Select_Column {
  /** column name */
  ConfirmationSentAt = 'confirmationSentAt',
  /** column name */
  ConfirmationToken = 'confirmationToken',
  /** column name */
  ConfirmedAt = 'confirmedAt',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CurrentSignInAt = 'currentSignInAt',
  /** column name */
  CurrentSignInIp = 'currentSignInIp',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Email = 'email',
  /** column name */
  Id = 'id',
  /** column name */
  Labels = 'labels',
  /** column name */
  LastSignInAt = 'lastSignInAt',
  /** column name */
  LastSignInIp = 'lastSignInIp',
  /** column name */
  ManageCoupon = 'manageCoupon',
  /** column name */
  Mobile = 'mobile',
  /** column name */
  Name = 'name',
  /** column name */
  OrdersCount = 'ordersCount',
  /** column name */
  OrdersPriceTotal = 'ordersPriceTotal',
  /** column name */
  OrgMgrId = 'org_mgr_id',
  /** column name */
  Picture = 'picture',
  /** column name */
  Privilege = 'privilege',
  /** column name */
  RealName = 'realName',
  /** column name */
  SignInCount = 'signInCount',
  /** column name */
  Type = 'type',
  /** column name */
  UnconfirmedEmail = 'unconfirmedEmail',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "tbl_user" */
export type User_Set_Input = {
  confirmationSentAt?: Maybe<Scalars['timestamptz']>;
  confirmationToken?: Maybe<Scalars['String']>;
  confirmedAt?: Maybe<Scalars['timestamptz']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  currentSignInAt?: Maybe<Scalars['String']>;
  currentSignInIp?: Maybe<Scalars['String']>;
  data?: Maybe<Scalars['jsonb']>;
  deleted_at?: Maybe<Scalars['timestamptz']>;
  email?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['bigint']>;
  labels?: Maybe<Scalars['jsonb']>;
  lastSignInAt?: Maybe<Scalars['String']>;
  lastSignInIp?: Maybe<Scalars['String']>;
  manageCoupon?: Maybe<Scalars['Boolean']>;
  mobile?: Maybe<Scalars['String']>;
  /** Username */
  name?: Maybe<Scalars['String']>;
  ordersCount?: Maybe<Scalars['Int']>;
  ordersPriceTotal?: Maybe<Scalars['Int']>;
  org_mgr_id?: Maybe<Scalars['bigint']>;
  picture?: Maybe<Scalars['String']>;
  privilege?: Maybe<Scalars['String']>;
  /** Username */
  realName?: Maybe<Scalars['String']>;
  signInCount?: Maybe<Scalars['Int']>;
  /** type of user. ex. regular, room, ... etc. */
  type?: Maybe<Scalars['String']>;
  unconfirmedEmail?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type User_Stddev_Fields = {
  __typename?: 'user_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  ordersCount?: Maybe<Scalars['Float']>;
  ordersPriceTotal?: Maybe<Scalars['Float']>;
  org_mgr_id?: Maybe<Scalars['Float']>;
  signInCount?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "tbl_user" */
export type User_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  ordersCount?: Maybe<Order_By>;
  ordersPriceTotal?: Maybe<Order_By>;
  org_mgr_id?: Maybe<Order_By>;
  signInCount?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type User_Stddev_Pop_Fields = {
  __typename?: 'user_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  ordersCount?: Maybe<Scalars['Float']>;
  ordersPriceTotal?: Maybe<Scalars['Float']>;
  org_mgr_id?: Maybe<Scalars['Float']>;
  signInCount?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "tbl_user" */
export type User_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  ordersCount?: Maybe<Order_By>;
  ordersPriceTotal?: Maybe<Order_By>;
  org_mgr_id?: Maybe<Order_By>;
  signInCount?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type User_Stddev_Samp_Fields = {
  __typename?: 'user_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  ordersCount?: Maybe<Scalars['Float']>;
  ordersPriceTotal?: Maybe<Scalars['Float']>;
  org_mgr_id?: Maybe<Scalars['Float']>;
  signInCount?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "tbl_user" */
export type User_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  ordersCount?: Maybe<Order_By>;
  ordersPriceTotal?: Maybe<Order_By>;
  org_mgr_id?: Maybe<Order_By>;
  signInCount?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type User_Sum_Fields = {
  __typename?: 'user_sum_fields';
  id?: Maybe<Scalars['bigint']>;
  ordersCount?: Maybe<Scalars['Int']>;
  ordersPriceTotal?: Maybe<Scalars['Int']>;
  org_mgr_id?: Maybe<Scalars['bigint']>;
  signInCount?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "tbl_user" */
export type User_Sum_Order_By = {
  id?: Maybe<Order_By>;
  ordersCount?: Maybe<Order_By>;
  ordersPriceTotal?: Maybe<Order_By>;
  org_mgr_id?: Maybe<Order_By>;
  signInCount?: Maybe<Order_By>;
};

/** update columns of table "tbl_user" */
export enum User_Update_Column {
  /** column name */
  ConfirmationSentAt = 'confirmationSentAt',
  /** column name */
  ConfirmationToken = 'confirmationToken',
  /** column name */
  ConfirmedAt = 'confirmedAt',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CurrentSignInAt = 'currentSignInAt',
  /** column name */
  CurrentSignInIp = 'currentSignInIp',
  /** column name */
  Data = 'data',
  /** column name */
  DeletedAt = 'deleted_at',
  /** column name */
  Email = 'email',
  /** column name */
  Id = 'id',
  /** column name */
  Labels = 'labels',
  /** column name */
  LastSignInAt = 'lastSignInAt',
  /** column name */
  LastSignInIp = 'lastSignInIp',
  /** column name */
  ManageCoupon = 'manageCoupon',
  /** column name */
  Mobile = 'mobile',
  /** column name */
  Name = 'name',
  /** column name */
  OrdersCount = 'ordersCount',
  /** column name */
  OrdersPriceTotal = 'ordersPriceTotal',
  /** column name */
  OrgMgrId = 'org_mgr_id',
  /** column name */
  Picture = 'picture',
  /** column name */
  Privilege = 'privilege',
  /** column name */
  RealName = 'realName',
  /** column name */
  SignInCount = 'signInCount',
  /** column name */
  Type = 'type',
  /** column name */
  UnconfirmedEmail = 'unconfirmedEmail',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type User_Var_Pop_Fields = {
  __typename?: 'user_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  ordersCount?: Maybe<Scalars['Float']>;
  ordersPriceTotal?: Maybe<Scalars['Float']>;
  org_mgr_id?: Maybe<Scalars['Float']>;
  signInCount?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "tbl_user" */
export type User_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  ordersCount?: Maybe<Order_By>;
  ordersPriceTotal?: Maybe<Order_By>;
  org_mgr_id?: Maybe<Order_By>;
  signInCount?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type User_Var_Samp_Fields = {
  __typename?: 'user_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  ordersCount?: Maybe<Scalars['Float']>;
  ordersPriceTotal?: Maybe<Scalars['Float']>;
  org_mgr_id?: Maybe<Scalars['Float']>;
  signInCount?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "tbl_user" */
export type User_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  ordersCount?: Maybe<Order_By>;
  ordersPriceTotal?: Maybe<Order_By>;
  org_mgr_id?: Maybe<Order_By>;
  signInCount?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type User_Variance_Fields = {
  __typename?: 'user_variance_fields';
  id?: Maybe<Scalars['Float']>;
  ordersCount?: Maybe<Scalars['Float']>;
  ordersPriceTotal?: Maybe<Scalars['Float']>;
  org_mgr_id?: Maybe<Scalars['Float']>;
  signInCount?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "tbl_user" */
export type User_Variance_Order_By = {
  id?: Maybe<Order_By>;
  ordersCount?: Maybe<Order_By>;
  ordersPriceTotal?: Maybe<Order_By>;
  org_mgr_id?: Maybe<Order_By>;
  signInCount?: Maybe<Order_By>;
};
